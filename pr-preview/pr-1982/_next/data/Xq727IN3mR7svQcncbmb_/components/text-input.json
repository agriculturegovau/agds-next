{"pageProps":{"pkg":{"slug":"text-input","name":"text-input","title":"Text input","description":"This component allows users to enter free-form text.","storybookPath":"/story/forms-textinput--basic","figmaGalleryNodeId":"12444%3A100673","subNavItems":[{"label":"Overview","href":"/components/text-input","path":"/home/runner/work/agds-next/agds-next/packages/react/src/text-input/docs/overview.mdx"},{"label":"Code","href":"/components/text-input/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/text-input/docs/code.mdx"}],"relatedComponents":["autocomplete","combobox","password-input","textarea"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Text input"}],"toc":[{"id":"hint","title":"Hint","level":2,"slug":"hint","items":[]},{"id":"required","title":"Required","level":2,"slug":"required","items":[{"id":"hide-optional-label","title":"Hide optional label","level":3,"slug":"hide-optional-label","items":[]}]},{"id":"invalid","title":"Invalid","level":2,"slug":"invalid","items":[]},{"id":"disabled","title":"Disabled","level":2,"slug":"disabled","items":[]},{"id":"maximum-widths","title":"Maximum widths","level":2,"slug":"maximum-widths","items":[]},{"id":"block","title":"Block","level":2,"slug":"block","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TextInput label=\\\"Name\\\" />\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the \", _jsx(_components.code, {\n        children: \"TextInput\"\n      }), \" component does not expand to fill the available space.\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use when unique information needs to be entered that can’t be answered through preset options\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate if input is optional\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide useful hints where necessary\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide an error message when input is invalid\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"align form inputs using a \", _jsx(_components.a, {\n          href: \"/components/form-stack\",\n          children: \"Form stack\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"hide the ‘optional’ label when filtering data.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use if a dropdown, select, or radio button can be used instead\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use for passwords - use \", _jsx(_components.a, {\n          href: \"/components/password-input\",\n          children: \"Password input\"\n        }), \" instead\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"hide the ‘optional’ label within a form\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use placeholder text as a substitute for a label.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Hint\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"hint\"\n      }), \" prop to provide help that’s relevant to the majority of users, like how their information will be used, or where to find it.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don’t use long paragraphs and lists in hint text. Screen readers read out the entire text when users interact with the form element. This could frustrate users if the text is long.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don’t include links within hint text. While screen readers will read out the link text when describing the field, they will not tell users that the text is a link.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TextInput label=\\\"Name\\\" hint=\\\"Hint text\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Required\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"required\"\n      }), \" prop can be used to indicate that user input is required on the field before a form can be submitted.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Required fields do not append ‘(optional)’ to the label and also use \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required\",\n        children: \"aria-required\"\n      }), \" to indicate to screen readers that the field is required.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Hide optional label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"hideOptionalLabel\"\n      }), \" prop can be used in situations where you want to indicate to screen reader users that a field is optional but don’t want to show the ‘(optional)’ label.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The usage of \", _jsx(_components.code, {\n        children: \"hideOptionalLabel\"\n      }), \" should be reserved for inputs that filter data in a table or chart, and should never be used in standard forms for submitting information.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t<TextInput label=\\\"Required\\\" required />\\n\\t<TextInput label=\\\"Optional\\\" required={false} />\\n\\t<TextInput\\n\\t\\tlabel=\\\"Optional with hideOptionalLabel\\\"\\n\\t\\trequired={false}\\n\\t\\thideOptionalLabel={true}\\n\\t/>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Invalid\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"invalid\"\n      }), \" prop to indicate if the user input is invalid.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TextInput label=\\\"Invalid\\\" invalid message=\\\"This input is invalid\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Disabled input elements are unusable and can not be clicked. This prevents a user from interacting with the input element until another action is complete. Disabled input elements in a form will not be submitted.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TextInput label=\\\"Name\\\" disabled />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Maximum widths\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The width of a text input field should indicate the amount of information expected to be entered into the field. The size of the text input acts as a visual constraint for the end user.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As an example, input fields for postcodes should have a smaller width than fields for emails.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t<TextInput label=\\\"xs input\\\" maxWidth=\\\"xs\\\" />\\n\\t<TextInput label=\\\"sm input\\\" maxWidth=\\\"sm\\\" />\\n\\t<TextInput label=\\\"md input\\\" maxWidth=\\\"md\\\" />\\n\\t<TextInput label=\\\"lg input\\\" maxWidth=\\\"lg\\\" />\\n\\t<TextInput label=\\\"xl input\\\" maxWidth=\\\"xl\\\" />\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Block\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"block\"\n      }), \" prop to expand the component to fill the available space.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TextInput label=\\\"Name\\\" block />\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Text input","description":"This component allows users to enter free-form text.","group":"Forms","storybookPath":"/story/forms-textinput--basic","figmaGalleryNodeId":"12444%3A100673","relatedComponents":["autocomplete","combobox","password-input","textarea"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"autocomplete","name":"autocomplete","title":"Autocomplete","description":"Autocomplete, also known as type-ahead, uses predictive text to help select options as a user types.","storybookPath":"/story/forms-autocomplete--basic","figmaGalleryNodeId":"12911%3A103687","subNavItems":[{"label":"Overview","href":"/components/autocomplete","path":"/home/runner/work/agds-next/agds-next/packages/react/src/autocomplete/docs/overview.mdx"},{"label":"Code","href":"/components/autocomplete/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/autocomplete/docs/code.mdx"}],"relatedComponents":["combobox","text-input"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"combobox","name":"combobox","title":"Combobox","description":"This component allows users to select from a list of options. It’s especially useful when there are many options to choose from.","storybookPath":"/story/forms-combobox-combobox--basic","figmaGalleryNodeId":"12925%3A104632","subNavItems":[{"label":"Overview","href":"/components/combobox","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/overview.mdx"},{"label":"Code","href":"/components/combobox/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/code.mdx"}],"relatedComponents":["autocomplete","dropdown-menu","select","text-input"],"relatedPatterns":["selecting-multiple-options"],"deprecated":false,"unreleased":false},{"slug":"password-input","name":"password-input","title":"Password input","description":"The password input component allows users to securely enter a password. The text is obscured by default, but can be revealed by pressing the ‘Show password’ checkbox.","storybookPath":"/story/forms-passwordinput--basic","figmaGalleryNodeId":"12444%3A100673","subNavItems":[{"label":"Overview","href":"/components/password-input","path":"/home/runner/work/agds-next/agds-next/packages/react/src/password-input/docs/overview.mdx"},{"label":"Code","href":"/components/password-input/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/password-input/docs/code.mdx"}],"relatedComponents":["text-input"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"textarea","name":"textarea","title":"Textarea","description":"A text area lets users enter long-form, plain text over multiple lines and is commonly found in forms.","storybookPath":"/story/forms-textarea--basic","figmaGalleryNodeId":"12444%3A100718","subNavItems":[{"label":"Overview","href":"/components/textarea","path":"/home/runner/work/agds-next/agds-next/packages/react/src/textarea/docs/overview.mdx"},{"label":"Code","href":"/components/textarea/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/textarea/docs/code.mdx"}],"relatedComponents":["text-input"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}