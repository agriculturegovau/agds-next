{"pageProps":{"pkg":{"slug":"file-input","name":"file-input","title":"File input","description":"The File input component allows users to attach one file to a form field by browsing their device.","storybookPath":"/story/Forms-FileInput--basic","figmaGalleryNodeId":"16180%3A41550","subNavItems":[{"label":"Overview","href":"/components/file-input","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-input/docs/overview.mdx"},{"label":"Code","href":"/components/file-input/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-input/docs/code.mdx"}],"relatedComponents":["file-upload"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"File input"}],"toc":[{"id":"hint","title":"Hint","level":2,"slug":"hint","items":[]},{"id":"required","title":"Required","level":2,"slug":"required","items":[]},{"id":"hide-optional-label","title":"Hide optional label","level":2,"slug":"hide-optional-label","items":[]},{"id":"invalid","title":"Invalid","level":2,"slug":"invalid","items":[]},{"id":"accept","title":"Accept","level":2,"slug":"accept","items":[{"id":"accept-with-default-hint","title":"Accept with default hint","level":3,"slug":"accept-with-default-hint","items":[]},{"id":"accept-with-custom-hint","title":"Accept with custom hint","level":3,"slug":"accept-with-custom-hint","items":[]},{"id":"accept-as-array-of-file-extensions","title":"Accept as array of file extensions","level":3,"slug":"accept-as-array-of-file-extensions","items":[]},{"id":"accept-as-array-of-mime-types","title":"Accept as array of mime types","level":3,"slug":"accept-as-array-of-mime-types","items":[]}]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    em: \"em\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput label=\\\"Passport\\\" />\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The File input component is a simple input for selecting and uploading files in a form. It is a wrapper around the native \", _jsx(_components.code, {\n        children: \"<input type=\\\"file\\\" />\"\n      }), \" element. Use a File input component when you need to upload one file per form field or when you have multiple form fileds on a page that require one file attachment each. If you need to upload multiple attachments to one form field, use the \", _jsx(_components.a, {\n        href: \"/components/file-upload\",\n        children: \"File upload\"\n      }), \" component instead.\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use if only one file is being uploaded per form field\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use to conserve vertical space\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use when a drag and drop zone isn’t required\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate size and type requirements in the hint\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use if the user might need to remove the file after uploading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use if you want the file to be uploaded immediately\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for uploading multiple files\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use if the user might benefit from a drag and drop zone\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use if it’s the only form element on the page\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Hint\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"hint\"\n      }), \" prop to provide help that’s relevant to the majority of users, like how their information will be used, or where to find it.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don’t use long paragraphs in hint text. Screen readers read out the entire text when users interact with the form element. This could frustrate users if the text is long.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don’t include links within hint text. While screen readers will read out the link text when describing the field, they will not tell users that the text is a link.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput label=\\\"Passport\\\" hint=\\\"Hint text\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Required\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"required\"\n      }), \" prop can be used to indicate that user input is required on the field before a form can be submitted.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Required fields do not append ‘(optional)’ to the label and also use \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required\",\n        children: \"aria-required\"\n      }), \" to indicate to screen readers that the field is required.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Hide optional label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"hideOptionalLabel\"\n      }), \" prop can be used in situations where you want to indicate to screen reader users that a field is optional but don’t want to show the ‘(optional)’ label.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The usage of \", _jsx(_components.code, {\n        children: \"hideOptionalLabel\"\n      }), \" should be reserved for inputs that filter data in a table or chart, and should never be used in standard forms for submitting information.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t<FileInput label=\\\"Passport\\\" required />\\n\\t<FileInput label=\\\"Passport\\\" required={false} />\\n\\t<FileInput\\n\\t\\tlabel=\\\"Passport with hideOptionalLabel\\\"\\n\\t\\trequired={false}\\n\\t\\thideOptionalLabel={true}\\n\\t/>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Invalid\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"invalid\"\n      }), \" prop to indicate if the user input is invalid.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput label=\\\"Passport\\\" invalid message=\\\"Passport must be added\\\" required />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accept\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"accept\"\n      }), \" prop to guide the user toward the accepted file types. This will automatically render a hint, although you can override this by providing your own \", _jsx(_components.code, {\n        children: \"hint\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.em, {\n        children: [\"NOTE: for security reasons you must validate the file type in your backend and not rely on frontend validation. The \", _jsx(_components.code, {\n          children: \"accept\"\n        }), \" prop does not stop users uploading other file types.\"]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accept with default hint\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput accept=\\\"image/jpg, image/jpeg, .png\\\" label=\\\"Upload image\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accept with custom hint\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput\\n\\taccept=\\\"image/jpg, image/jpeg, image/png\\\"\\n\\thint=\\\"Files accepted: .jpg, .jpeg, .png. Max files that can be uploaded is 1.\\\"\\n\\tlabel=\\\"Upload image\\\"\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accept as array of file extensions\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput accept={['.jpg', '.jpeg', '.png']} label=\\\"Upload image\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accept as array of mime types\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using an array of mime types allows you to leverage TypeScript types and autocomplete. Additionally, you can use glob selectors to provide succinct hints. e.g. here we use \", _jsx(_components.code, {\n        children: \"image/*\"\n      }), \" and the default hint includes “Any image file”.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput\\n\\taccept={['image/*', 'application/pdf']}\\n\\tlabel=\\\"Upload image or document\\\"\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"File input","description":"The File input component allows users to attach one file to a form field by browsing their device.","group":"Forms","storybookPath":"/story/Forms-FileInput--basic","figmaGalleryNodeId":"16180%3A41550","relatedComponents":["file-upload"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"file-upload","name":"file-upload","title":"File upload","description":"The File upload component allows users to attach one or multiple files to a form via drag-and-drop or by browsing their device.","storybookPath":"/story/forms-fileupload--basic","figmaGalleryNodeId":"12444%3A100384","subNavItems":[{"label":"Overview","href":"/components/file-upload","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-upload/docs/overview.mdx"},{"label":"Code","href":"/components/file-upload/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-upload/docs/code.mdx"}],"relatedComponents":["file-input"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}