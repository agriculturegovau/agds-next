{"version":3,"file":"Accordion.stories-4782a08c.js","sources":["../../../../packages/react/src/accordion/Accordion.tsx","../../../../packages/react/src/accordion/utils.tsx","../../../../packages/react/src/accordion/AccordionTitle.tsx","../../../../packages/react/src/accordion/AccordionBody.tsx","../../../../packages/react/src/accordion/AccordionItem.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Box } from '../box';\n\nexport type AccordionProps = { children: ReactNode };\n\nexport const Accordion = ({ children }: AccordionProps) => (\n\t<Box width=\"100%\" borderTop>\n\t\t{children}\n\t</Box>\n);\n","import { boxPalette } from '../core';\n\nexport const hoverColorMap = {\n\tbody: boxPalette.backgroundShade,\n\tbodyAlt: boxPalette.backgroundShadeAlt,\n};\n\nexport type AccordionBackground = keyof typeof hoverColorMap;\n","import { MouseEventHandler, PropsWithChildren } from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { Box, Flex } from '../box';\nimport { ChevronDownIcon } from '../icon';\nimport { usePrefersReducedMotion } from '../core';\nimport { BaseButton } from '../button/';\nimport { hoverColorMap, AccordionBackground } from './utils';\n\nexport type AccordionTitleProps = PropsWithChildren<{\n\tid: string;\n\tbackground?: AccordionBackground;\n\tariaControls: string;\n\tisOpen?: boolean;\n\tonClick?: MouseEventHandler<HTMLButtonElement>;\n\ttag: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}>;\n\nconst AnimatedIcon = animated(ChevronDownIcon);\n\nexport const AccordionTitle = ({\n\tariaControls,\n\tbackground = 'body',\n\tchildren,\n\tid,\n\tisOpen,\n\tonClick,\n\ttag,\n}: AccordionTitleProps) => {\n\tconst prefersReducedMotion = usePrefersReducedMotion();\n\tconst style = useSpring({\n\t\tfrom: { transform: `rotate(0deg)` },\n\t\tto: { transform: `rotate(${isOpen ? 180 : 0}deg)` },\n\t\timmediate: prefersReducedMotion,\n\t});\n\n\treturn (\n\t\t<Box as={tag}>\n\t\t\t<Flex\n\t\t\t\tas={BaseButton}\n\t\t\t\tid={id}\n\t\t\t\taria-controls={ariaControls}\n\t\t\t\taria-expanded={isOpen}\n\t\t\t\tonClick={onClick}\n\t\t\t\tcolor=\"action\"\n\t\t\t\tfontSize=\"md\"\n\t\t\t\tlineHeight=\"heading\"\n\t\t\t\tfontWeight=\"bold\"\n\t\t\t\tbackground={background}\n\t\t\t\tpaddingY={1}\n\t\t\t\tjustifyContent=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tlink\n\t\t\t\tfocus\n\t\t\t\tcss={{\n\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\tbackgroundColor: hoverColorMap[background],\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t\t<AnimatedIcon weight=\"bold\" size=\"sm\" style={style} />\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n","import { PropsWithChildren, useRef } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { packs, usePrefersReducedMotion } from '../core';\n\nexport type AccordionBodyProps = PropsWithChildren<{\n\tariaLabelledBy: string;\n\tid: string;\n\tisOpen: boolean;\n}>;\n\nexport const AccordionBody = ({\n\tchildren,\n\tariaLabelledBy,\n\tid,\n\tisOpen,\n}: AccordionBodyProps) => {\n\tconst ref = useRef<HTMLDivElement>(null);\n\n\tconst prefersReducedMotion = usePrefersReducedMotion();\n\tconst animatedHeight = useSpring({\n\t\tfrom: { display: 'none', height: 0 },\n\t\tto: async (next) => {\n\t\t\tif (isOpen) await next({ display: 'block' });\n\t\t\tawait next({\n\t\t\t\theight: isOpen ? ref.current?.offsetHeight : 0,\n\t\t\t\timmediate: prefersReducedMotion,\n\t\t\t});\n\t\t\tawait next(isOpen ? { height: 'auto' } : { display: 'none' });\n\t\t},\n\t});\n\n\treturn (\n\t\t<animated.div\n\t\t\tid={id}\n\t\t\taria-labelledby={ariaLabelledBy}\n\t\t\trole=\"region\"\n\t\t\tstyle={animatedHeight}\n\t\t\tcss={{\n\t\t\t\toverflow: 'hidden',\n\t\t\t\t...packs.print.visible,\n\t\t\t}}\n\t\t>\n\t\t\t<div ref={ref}>{children}</div>\n\t\t</animated.div>\n\t);\n};\n","import { PropsWithChildren, ReactNode, useCallback } from 'react';\nimport { Box } from '../box';\nimport { useToggleState, useId } from '../core';\nimport { AccordionTitle, AccordionTitleProps } from './AccordionTitle';\nimport { AccordionBody } from './AccordionBody';\nimport { AccordionBackground } from './utils';\n\nexport const useAccordionItemIds = () => {\n\tconst autoId = useId();\n\treturn {\n\t\ttitleId: `accordion-${autoId}-title`,\n\t\tbodyId: `accordion-${autoId}-body`,\n\t};\n};\n\ntype AccordionItemProps = PropsWithChildren<{\n\t/** If the Accordion is placed on a page with 'bodyAlt' background, please set this to 'bodyAlt'. */\n\tbackground?: AccordionBackground;\n\t/** If true, the item will initially be rendered in an open state. */\n\tisInitiallyOpen?: boolean;\n\t/** The current open state. */\n\tisOpen?: boolean;\n\t/** Handle open/close events. */\n\tonToggle?: () => void;\n\t/** The title of the accordion item. */\n\ttitle: ReactNode;\n\t/** The underlying HTML tag of the title element. */\n\ttitleHeadingTag?: AccordionTitleProps['tag'];\n}>;\n\nexport const AccordionItem = ({\n\tbackground,\n\tchildren,\n\ttitle,\n\ttitleHeadingTag = 'h3',\n\tisInitiallyOpen = false,\n\tisOpen: isOpenProp,\n\tonToggle: onToggleProp,\n}: AccordionItemProps) => {\n\tconst { titleId, bodyId } = useAccordionItemIds();\n\n\tconst [isOpenState, onToggleState] = useToggleState(\n\t\tisInitiallyOpen,\n\t\t!isInitiallyOpen\n\t);\n\n\tconst isOpen = typeof isOpenProp === 'boolean' ? isOpenProp : isOpenState;\n\n\tconst onToggle = useCallback(() => {\n\t\tif (typeof onToggleProp === 'function') onToggleProp();\n\t\tonToggleState();\n\t}, [onToggleProp, onToggleState]);\n\n\treturn (\n\t\t<Box borderBottom>\n\t\t\t<AccordionTitle\n\t\t\t\tbackground={background}\n\t\t\t\ttag={titleHeadingTag}\n\t\t\t\tid={titleId}\n\t\t\t\tariaControls={bodyId}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonClick={onToggle}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</AccordionTitle>\n\t\t\t<AccordionBody isOpen={isOpen} id={bodyId} ariaLabelledBy={titleId}>\n\t\t\t\t{children}\n\t\t\t</AccordionBody>\n\t\t</Box>\n\t);\n};\n\nexport type AccordionItemContentProps = { children: ReactNode };\n\nexport const AccordionItemContent = ({\n\tchildren,\n}: AccordionItemContentProps) => (\n\t<Box paddingBottom={1.5} paddingTop={0.5}>\n\t\t{children}\n\t</Box>\n);\n"],"names":["Accordion","children","jsx","Box","hoverColorMap","boxPalette","AnimatedIcon","animated","ChevronDownIcon","AccordionTitle","ariaControls","background","id","isOpen","onClick","tag","prefersReducedMotion","usePrefersReducedMotion","style","useSpring","jsxs","Flex","BaseButton","AccordionBody","ariaLabelledBy","ref","useRef","animatedHeight","next","_a","packs","useAccordionItemIds","autoId","useId","AccordionItem","title","titleHeadingTag","isInitiallyOpen","isOpenProp","onToggleProp","titleId","bodyId","isOpenState","onToggleState","useToggleState","onToggle","useCallback","AccordionItemContent"],"mappings":"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"}