import{j as t,m as y,a as d}from"./Box-3d8e40b9.js";import{S as M}from"./Stack-88a94cf9.js";import{T as a}from"./TextInput-13557dd1.js";import{F as g}from"./FormStack-cc440f95.js";import{H as v}from"./Heading-1fbb096a.js";import{T as x}from"./Text-76115ace.js";import{r as k}from"./index-42611d8b.js";import{u as V}from"./useId-9773510a.js";import"./Field-e0f2f949.js";import"./WebsiteIcon-80d17c8d.js";import"./CalendarIcon-ece56b40.js";import"./_commonjsHelpers-042e6b4d.js";const n=({children:e,id:r})=>k.isValidElement(e)?t("div",{id:r,css:{marginTop:y(.75)},children:e}):t(x,{fontSize:"sm",color:"muted",display:"block",css:{marginTop:y(.75)},id:r,children:e});try{n.displayName="FieldsetHint",n.__docgenInfo={description:"",displayName:"FieldsetHint",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}}}}}catch{}const l=({"aria-describedby":e,children:r,id:o})=>t("fieldset",{"aria-describedby":e,id:o,css:{padding:0,margin:0,border:"none"},children:r});try{l.displayName="FieldsetContainer",l.__docgenInfo={description:"",displayName:"FieldsetContainer",props:{"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}}}}}catch{}const u=({children:e})=>k.isValidElement(e)?t("legend",{children:e}):t(x,{as:"legend",fontWeight:"bold",fontSize:"lg",lineHeight:"heading",children:e});try{u.displayName="FieldsetLegend",u.__docgenInfo={description:"",displayName:"FieldsetLegend",props:{}}}catch{}const h=({children:e})=>t("div",{css:{marginTop:y(2)},children:e});try{h.displayName="FieldsetContent",h.__docgenInfo={description:"",displayName:"FieldsetContent",props:{}}}catch{}const m=({children:e,hint:r,legend:o,id:p})=>{const{fieldsetId:H,hintId:_}=b(p);return d(l,{id:H,"aria-describedby":r?_:void 0,children:[t(u,{children:o}),r?t(n,{id:_,children:r}):null,t(h,{children:e})]})},b=e=>{const r=V(e),o=e||`fieldset-${r}`,p=`fieldset-${r}-hint`;return{fieldsetId:o,hintId:p}};try{m.displayName="Fieldset",m.__docgenInfo={description:"",displayName:"Fieldset",props:{hint:{defaultValue:null,description:"Provides extra information about the fieldset.",name:"hint",required:!1,type:{name:"ReactNode"}},legend:{defaultValue:null,description:"Describes the purpose of the group of fields.",name:"legend",required:!0,type:{name:"ReactNode"}},id:{defaultValue:null,description:"Defines an identifier (ID) which must be unique.",name:"id",required:!1,type:{name:"string"}}}}}catch{}try{b.displayName="useFieldsetIds",b.__docgenInfo={description:"",displayName:"useFieldsetIds",props:{}}}catch{}const G={title:"forms/Fieldset",component:m,subcomponents:{FieldsetContainer:l,FieldsetLegend:u,FieldsetHint:n}},L=e=>t(m,{...e,children:d(g,{children:[t(a,{label:"Street and number",required:!0,autoComplete:"street-address",maxWidth:"xl"}),t(a,{label:"Suburb",required:!0,autoComplete:"address-level2",maxWidth:"xl"}),t(a,{label:"Country",required:!0,autoComplete:"country",maxWidth:"xl"}),t(a,{label:"Postcode",required:!0,autoComplete:"postal-code",maxWidth:"sm"})]})}),i=L.bind({});i.args={legend:"What is your address?",hint:"We will only use this to respond to your requests"};const s=e=>t(m,{...e,children:d(g,{children:[t(a,{label:"Day",inputMode:"numeric",maxWidth:"md",required:!0,autoComplete:"bday-day"}),t(a,{label:"Month",inputMode:"numeric",maxWidth:"md",required:!0,autoComplete:"bday-month"}),t(a,{label:"Year",inputMode:"numeric",maxWidth:"md",required:!0,autoComplete:"bday-year"})]})});s.args={legend:t(v,{children:"What is your date of birth?"}),hint:t(x,{fontSize:"md",color:"muted",children:"We will only use this to respond to your requests"})};const c=()=>d(l,{children:[d(M,{gap:.75,children:[t(u,{children:"What is your address?"}),t(n,{children:"We will only use this to respond to your requests"})]}),d(g,{children:[t(a,{label:"Street and number",required:!0,autoComplete:"street-address",maxWidth:"xl"}),t(a,{label:"Suburb",required:!0,autoComplete:"address-level2",maxWidth:"xl"}),t(a,{label:"Country",required:!0,autoComplete:"country",maxWidth:"xl"}),t(a,{label:"Postcode",required:!0,autoComplete:"postal-code",maxWidth:"sm"})]})]});var f,F,C;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:`args => <Fieldset {...args}>
        <FormStack>
            <TextInput label="Street and number" required autoComplete="street-address" maxWidth="xl" />
            <TextInput label="Suburb" required autoComplete="address-level2" maxWidth="xl" />
            <TextInput label="Country" required autoComplete="country" maxWidth="xl" />
            <TextInput label="Postcode" required autoComplete="postal-code" maxWidth="sm" />
        </FormStack>
    </Fieldset>`,...(C=(F=i.parameters)==null?void 0:F.docs)==null?void 0:C.source}}};var q,W,I;s.parameters={...s.parameters,docs:{...(q=s.parameters)==null?void 0:q.docs,source:{originalSource:`args => <Fieldset {...args}>
        <FormStack>
            <TextInput label="Day" inputMode="numeric" maxWidth="md" required autoComplete="bday-day" />
            <TextInput label="Month" inputMode="numeric" maxWidth="md" required autoComplete="bday-month" />
            <TextInput label="Year" inputMode="numeric" maxWidth="md" required autoComplete="bday-year" />
        </FormStack>
    </Fieldset>`,...(I=(W=s.parameters)==null?void 0:W.docs)==null?void 0:I.source}}};var S,T,N;c.parameters={...c.parameters,docs:{...(S=c.parameters)==null?void 0:S.docs,source:{originalSource:`() => <FieldsetContainer>
        <Stack gap={0.75}>
            <FieldsetLegend>What is your address?</FieldsetLegend>
            <FieldsetHint>
                We will only use this to respond to your requests
            </FieldsetHint>
        </Stack>
        <FormStack>
            <TextInput label="Street and number" required autoComplete="street-address" maxWidth="xl" />
            <TextInput label="Suburb" required autoComplete="address-level2" maxWidth="xl" />
            <TextInput label="Country" required autoComplete="country" maxWidth="xl" />
            <TextInput label="Postcode" required autoComplete="postal-code" maxWidth="sm" />
        </FormStack>
    </FieldsetContainer>`,...(N=(T=c.parameters)==null?void 0:T.docs)==null?void 0:N.source}}};const J=["Basic","LegendAsPageHeading","Modular"];export{i as Basic,s as LegendAsPageHeading,c as Modular,J as __namedExportsOrder,G as default};
//# sourceMappingURL=Fieldset.stories-c9d34496.js.map
