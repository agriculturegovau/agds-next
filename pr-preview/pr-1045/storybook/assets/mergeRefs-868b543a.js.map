{"version":3,"file":"mergeRefs-868b543a.js","sources":["../../../../packages/react/src/core/utils/mergeRefs.ts"],"sourcesContent":["import type { LegacyRef, MutableRefObject, RefCallback } from 'react';\n\n/**\n * Sometimes we need both a local ref _and_ a forwarded ref for the same element.\n * This utility merges them for us (as React doesn't offer this natively).\n *\n * @see https://github.com/gregberge/react-merge-refs/blob/main/src/index.tsx\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function mergeRefs<T = any>(\n\trefs: Array<MutableRefObject<T> | LegacyRef<T>>\n): RefCallback<T> {\n\treturn (value) => {\n\t\trefs.forEach((ref) => {\n\t\t\tif (typeof ref === 'function') {\n\t\t\t\tref(value);\n\t\t\t} else if (ref != null) {\n\t\t\t\t(ref as MutableRefObject<T | null>).current = value;\n\t\t\t}\n\t\t});\n\t};\n}\n"],"names":["mergeRefs","refs","value","ref"],"mappings":"AASO,SAASA,EACfC,EACiB,CACjB,OAAQC,GAAU,CACZD,EAAA,QAASE,GAAQ,CACjB,OAAOA,GAAQ,WAClBA,EAAID,CAAK,EACCC,GAAO,OAChBA,EAAmC,QAAUD,EAC/C,CACA,CAAA,CAEH"}