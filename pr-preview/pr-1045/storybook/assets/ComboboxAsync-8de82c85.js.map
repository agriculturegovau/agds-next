{"version":3,"file":"ComboboxAsync-8de82c85.js","sources":["../../../../node_modules/downshift/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../../node_modules/downshift/node_modules/@babel/runtime/helpers/esm/extends.js","../../../../node_modules/downshift/node_modules/react-is/cjs/react-is.production.min.js","../../../../node_modules/downshift/node_modules/react-is/index.js","../../../../node_modules/compute-scroll-into-view/dist/index.module.js","../../../../node_modules/downshift/dist/downshift.esm.js","../../../../packages/react/src/combobox/utils.ts","../../../../packages/react/src/combobox/ComboboxBase/ComboboxList.tsx","../../../../packages/react/src/combobox/ComboboxBase/ComboboxListItem.tsx","../../../../packages/react/src/combobox/ComboboxBase/ComboboxListLoading.tsx","../../../../packages/react/src/combobox/ComboboxBase/ComboboxListError.tsx","../../../../packages/react/src/combobox/ComboboxBase/ComboboxListEmptyResults.tsx","../../../../packages/react/src/combobox/ComboboxBase/ComboboxButtons.tsx","../../../../packages/react/src/combobox/ComboboxBase/ComboboxBase.tsx","../../../../packages/react/src/combobox/Combobox.tsx","../../../../node_modules/use-debounce/dist/index.module.js","../../../../packages/react/src/combobox/ComboboxAsync.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","function t(t){return\"object\"==typeof t&&null!=t&&1===t.nodeType}function e(t,e){return(!e||\"hidden\"!==t)&&\"visible\"!==t&&\"clip\"!==t}function n(t,n){if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){var r=getComputedStyle(t,null);return e(r.overflowY,n)||e(r.overflowX,n)||function(t){var e=function(t){if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}}(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)}(t)}return!1}function r(t,e,n,r,i,o,l,d){return o<t&&l>e||o>t&&l<e?0:o<=t&&d<=n||l>=e&&d>=n?o-t-r:l>e&&d<n||o<t&&d>n?l-e+i:0}export default function(e,i){var o=window,l=i.scrollMode,d=i.block,u=i.inline,h=i.boundary,a=i.skipOverflowHiddenElements,c=\"function\"==typeof h?h:function(t){return t!==h};if(!t(e))throw new TypeError(\"Invalid target\");for(var f=document.scrollingElement||document.documentElement,s=[],p=e;t(p)&&c(p);){if((p=p.parentElement)===f){s.push(p);break}null!=p&&p===document.body&&n(p)&&!n(document.documentElement)||null!=p&&n(p,a)&&s.push(p)}for(var m=o.visualViewport?o.visualViewport.width:innerWidth,g=o.visualViewport?o.visualViewport.height:innerHeight,w=window.scrollX||pageXOffset,v=window.scrollY||pageYOffset,W=e.getBoundingClientRect(),b=W.height,H=W.width,y=W.top,E=W.right,M=W.bottom,V=W.left,x=\"start\"===d||\"nearest\"===d?y:\"end\"===d?M:y+b/2,I=\"center\"===u?V+H/2:\"end\"===u?E:V,C=[],T=0;T<s.length;T++){var k=s[T],B=k.getBoundingClientRect(),D=B.height,O=B.width,R=B.top,X=B.right,Y=B.bottom,L=B.left;if(\"if-needed\"===l&&y>=0&&V>=0&&M<=g&&E<=m&&y>=R&&M<=Y&&V>=L&&E<=X)return C;var S=getComputedStyle(k),j=parseInt(S.borderLeftWidth,10),q=parseInt(S.borderTopWidth,10),z=parseInt(S.borderRightWidth,10),A=parseInt(S.borderBottomWidth,10),F=0,G=0,J=\"offsetWidth\"in k?k.offsetWidth-k.clientWidth-j-z:0,K=\"offsetHeight\"in k?k.offsetHeight-k.clientHeight-q-A:0;if(f===k)F=\"start\"===d?x:\"end\"===d?x-g:\"nearest\"===d?r(v,v+g,g,q,A,v+x,v+x+b,b):x-g/2,G=\"start\"===u?I:\"center\"===u?I-m/2:\"end\"===u?I-m:r(w,w+m,m,j,z,w+I,w+I+H,H),F=Math.max(0,F+v),G=Math.max(0,G+w);else{F=\"start\"===d?x-R-q:\"end\"===d?x-Y+A+K:\"nearest\"===d?r(R,Y,D,q,A+K,x,x+b,b):x-(R+D/2)+K/2,G=\"start\"===u?I-L-j:\"center\"===u?I-(L+O/2)+J/2:\"end\"===u?I-X+z+J:r(L,X,O,j,z+J,I,I+H,H);var N=k.scrollLeft,P=k.scrollTop;x+=P-(F=Math.max(0,Math.min(P+F,k.scrollHeight-D+K))),I+=N-(G=Math.max(0,Math.min(N+G,k.scrollWidth-O+J)))}C.push({el:k,top:F,left:G})}return C}\n//# sourceMappingURL=index.module.js.map\n","import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport { cloneElement, Component, useRef, useEffect, useCallback, useLayoutEffect, useReducer, useMemo } from 'react';\nimport { isForwardRef } from 'react-is';\nimport computeScrollIntoView from 'compute-scroll-into-view';\nimport { __assign } from 'tslib';\n\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (!node) {\n    return;\n  }\n\n  var actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @param {Window} environment The window context where downshift renders.\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child, environment) {\n  var result = parent === child || child instanceof environment.Node && parent.contains && parent.contains(child);\n  return result;\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  var timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specify if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage$1(_ref2) {\n  var isOpen = _ref2.isOpen,\n      resultCount = _ref2.resultCount,\n      previousResultCount = _ref2.previousResultCount;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter key to select.\";\n  }\n\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n\n\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\n\n\nfunction getState(state, props) {\n  return Object.keys(state).reduce(function (prevState, key) {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\n\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\" + key;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  if (circular === void 0) {\n    circular = true;\n  }\n\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  var itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  var newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  var nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n}\n/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\n\n\nfunction getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  var currentElementNode = getItemNodeFromIndex(baseIndex);\n\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (var index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (var _index = baseIndex - 1; _index >= 0; _index--) {\n      if (!getItemNodeFromIndex(_index).hasAttribute('disabled')) {\n        return _index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n\n  return -1;\n}\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Window} environment The window context where downshift renders.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\n\n\nfunction targetWithinDownshift(target, downshiftElements, environment, checkActiveElement) {\n  if (checkActiveElement === void 0) {\n    checkActiveElement = true;\n  }\n\n  return downshiftElements.some(function (contextNode) {\n    return contextNode && (isOrContainsNode(contextNode, target, environment) || checkActiveElement && isOrContainsNode(contextNode, environment.document.activeElement, environment));\n  });\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nvar validateControlledUnchanged = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validateControlledUnchanged = function validateControlledUnchanged(state, prevProps, nextProps) {\n    var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props\";\n    Object.keys(state).forEach(function (propKey) {\n      if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n        // eslint-disable-next-line no-console\n        console.error(\"downshift: A component has changed the controlled prop \\\"\" + propKey + \"\\\" to be uncontrolled. \" + warningDescription);\n      } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n        // eslint-disable-next-line no-console\n        console.error(\"downshift: A component has changed the uncontrolled prop \\\"\" + propKey + \"\\\" to be controlled. \" + warningDescription);\n      }\n    });\n  };\n}\n\nvar cleanupStatus = debounce(function (documentProp) {\n  getStatusDiv(documentProp).textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  var div = getStatusDiv(documentProp);\n\n  if (!status) {\n    return;\n  }\n\n  div.textContent = status;\n  cleanupStatus(documentProp);\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n\n  var statusDiv = documentProp.getElementById('a11y-status-message');\n\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nvar keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\n\nvar stateChangeTypes$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\nvar _excluded$4 = [\"refKey\", \"ref\"],\n    _excluded2$3 = [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"],\n    _excluded3$2 = [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"],\n    _excluded4$1 = [\"refKey\", \"ref\"],\n    _excluded5$1 = [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"];\n\nvar Downshift = /*#__PURE__*/function () {\n  var Downshift = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Downshift, _Component);\n\n    function Downshift(_props) {\n      var _this;\n\n      _this = _Component.call(this, _props) || this; // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n\n      _this.id = _this.props.id || \"downshift-\" + generateId();\n      _this.menuId = _this.props.menuId || _this.id + \"-menu\";\n      _this.labelId = _this.props.labelId || _this.id + \"-label\";\n      _this.inputId = _this.props.inputId || _this.id + \"-input\";\n\n      _this.getItemId = _this.props.getItemId || function (index) {\n        return _this.id + \"-item-\" + index;\n      };\n\n      _this.input = null;\n      _this.items = [];\n      _this.itemCount = null;\n      _this.previousResultCount = 0;\n      _this.timeoutIds = [];\n\n      _this.internalSetTimeout = function (fn, time) {\n        var id = setTimeout(function () {\n          _this.timeoutIds = _this.timeoutIds.filter(function (i) {\n            return i !== id;\n          });\n          fn();\n        }, time);\n\n        _this.timeoutIds.push(id);\n      };\n\n      _this.setItemCount = function (count) {\n        _this.itemCount = count;\n      };\n\n      _this.unsetItemCount = function () {\n        _this.itemCount = null;\n      };\n\n      _this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          highlightedIndex: highlightedIndex\n        }, otherStateToSet));\n      };\n\n      _this.clearSelection = function (cb) {\n        _this.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          isOpen: _this.props.defaultIsOpen\n        }, cb);\n      };\n\n      _this.selectItem = function (item, otherStateToSet, cb) {\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          isOpen: _this.props.defaultIsOpen,\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: _this.props.itemToString(item)\n        }, otherStateToSet), cb);\n      };\n\n      _this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n        var item = _this.items[itemIndex];\n\n        if (item == null) {\n          return;\n        }\n\n        _this.selectItem(item, otherStateToSet, cb);\n      };\n\n      _this.selectHighlightedItem = function (otherStateToSet, cb) {\n        return _this.selectItemAtIndex(_this.getState().highlightedIndex, otherStateToSet, cb);\n      };\n\n      _this.internalSetState = function (stateToSet, cb) {\n        var isItemSelected, onChangeArg;\n        var onStateChangeArg = {};\n        var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          _this.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), stateToSet));\n        }\n\n        return _this.setState(function (state) {\n          state = _this.getState(state);\n          var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = _this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          var nextState = {}; // this is just used to tell whether the state changed\n\n          var nextFullState = {}; // we need to call on change if the outside world is controlling any of our state\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(function (key) {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n\n            if (key === 'type') {\n              return;\n            }\n\n            nextFullState[key] = newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!isControlledProp(_this.props, key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            _this.props.onInputValueChange(newStateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), newStateToSet));\n          }\n\n          return nextState;\n        }, function () {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n          if (hasMoreStateThanType) {\n            _this.props.onStateChange(onStateChangeArg, _this.getStateAndHelpers());\n          }\n\n          if (isItemSelected) {\n            _this.props.onSelect(stateToSet.selectedItem, _this.getStateAndHelpers());\n          }\n\n          if (onChangeArg !== undefined) {\n            _this.props.onChange(onChangeArg, _this.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n\n          _this.props.onUserAction(onStateChangeArg, _this.getStateAndHelpers());\n        });\n      };\n\n      _this.rootRef = function (node) {\n        return _this._rootNode = node;\n      };\n\n      _this.getRootProps = function (_temp, _temp2) {\n        var _extends2;\n\n        var _ref = _temp === void 0 ? {} : _temp,\n            _ref$refKey = _ref.refKey,\n            refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n            ref = _ref.ref,\n            rest = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n        var _ref2 = _temp2 === void 0 ? {} : _temp2,\n            _ref2$suppressRefErro = _ref2.suppressRefError,\n            suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n        // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n\n        var _this$getState = _this.getState(),\n            isOpen = _this$getState.isOpen;\n\n        return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, _this.rootRef), _extends2.role = 'combobox', _extends2['aria-expanded'] = isOpen, _extends2['aria-haspopup'] = 'listbox', _extends2['aria-owns'] = isOpen ? _this.menuId : null, _extends2['aria-labelledby'] = _this.labelId, _extends2), rest);\n      };\n\n      _this.keyDownHandlers = {\n        ArrowDown: function ArrowDown(event) {\n          var _this2 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, function () {\n              var itemCount = _this2.getItemCount();\n\n              if (itemCount > 0) {\n                var _this2$getState = _this2.getState(),\n                    highlightedIndex = _this2$getState.highlightedIndex;\n\n                var nextHighlightedIndex = getNextWrappingIndex(1, highlightedIndex, itemCount, function (index) {\n                  return _this2.getItemNodeFromIndex(index);\n                });\n\n                _this2.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n        ArrowUp: function ArrowUp(event) {\n          var _this3 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, function () {\n              var itemCount = _this3.getItemCount();\n\n              if (itemCount > 0) {\n                var _this3$getState = _this3.getState(),\n                    highlightedIndex = _this3$getState.highlightedIndex;\n\n                var nextHighlightedIndex = getNextWrappingIndex(-1, highlightedIndex, itemCount, function (index) {\n                  return _this3.getItemNodeFromIndex(index);\n                });\n\n                _this3.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowUp\n                });\n              }\n            });\n          }\n        },\n        Enter: function Enter(event) {\n          if (event.which === 229) {\n            return;\n          }\n\n          var _this$getState2 = this.getState(),\n              isOpen = _this$getState2.isOpen,\n              highlightedIndex = _this$getState2.highlightedIndex;\n\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            var item = this.items[highlightedIndex];\n            var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n        Escape: function Escape(event) {\n          event.preventDefault();\n          this.reset(_extends({\n            type: keyDownEscape\n          }, !this.state.isOpen && {\n            selectedItem: null,\n            inputValue: ''\n          }));\n        }\n      };\n      _this.buttonKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        ' ': function _(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n      });\n      _this.inputKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        Home: function Home(event) {\n          var _this4 = this;\n\n          var _this$getState3 = this.getState(),\n              isOpen = _this$getState3.isOpen;\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting downwards from 0 if that's disabled.\n\n\n          var newHighlightedIndex = getNextNonDisabledIndex(1, 0, itemCount, function (index) {\n            return _this4.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownHome\n          });\n        },\n        End: function End(event) {\n          var _this5 = this;\n\n          var _this$getState4 = this.getState(),\n              isOpen = _this$getState4.isOpen;\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting upwards from last index if that's disabled.\n\n\n          var newHighlightedIndex = getNextNonDisabledIndex(-1, itemCount - 1, itemCount, function (index) {\n            return _this5.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownEnd\n          });\n        }\n      });\n\n      _this.getToggleButtonProps = function (_temp3) {\n        var _ref3 = _temp3 === void 0 ? {} : _temp3,\n            onClick = _ref3.onClick;\n            _ref3.onPress;\n            var onKeyDown = _ref3.onKeyDown,\n            onKeyUp = _ref3.onKeyUp,\n            onBlur = _ref3.onBlur,\n            rest = _objectWithoutPropertiesLoose(_ref3, _excluded2$3);\n\n        var _this$getState5 = _this.getState(),\n            isOpen = _this$getState5.isOpen;\n\n        var enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return _extends({\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true\n        }, eventHandlers, rest);\n      };\n\n      _this.buttonHandleKeyUp = function (event) {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n\n      _this.buttonHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (_this.buttonKeyDownHandlers[key]) {\n          _this.buttonKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.buttonHandleClick = function (event) {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if (_this.props.environment.document.activeElement === _this.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n\n        if (process.env.NODE_ENV === 'test') {\n          _this.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          _this.internalSetTimeout(function () {\n            return _this.toggleMenu({\n              type: clickButton\n            });\n          });\n        }\n      };\n\n      _this.buttonHandleBlur = function (event) {\n        var blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        _this.internalSetTimeout(function () {\n          if (!_this.isMouseDown && (_this.props.environment.document.activeElement == null || _this.props.environment.document.activeElement.id !== _this.inputId) && _this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n            _this.reset({\n              type: blurButton\n            });\n          }\n        });\n      };\n\n      _this.getLabelProps = function (props) {\n        return _extends({\n          htmlFor: _this.inputId,\n          id: _this.labelId\n        }, props);\n      };\n\n      _this.getInputProps = function (_temp4) {\n        var _ref4 = _temp4 === void 0 ? {} : _temp4,\n            onKeyDown = _ref4.onKeyDown,\n            onBlur = _ref4.onBlur,\n            onChange = _ref4.onChange,\n            onInput = _ref4.onInput;\n            _ref4.onChangeText;\n            var rest = _objectWithoutPropertiesLoose(_ref4, _excluded3$2);\n\n        var onChangeKey;\n        var eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        {\n          onChangeKey = 'onChange';\n        }\n\n        var _this$getState6 = _this.getState(),\n            inputValue = _this$getState6.inputValue,\n            isOpen = _this$getState6.isOpen,\n            highlightedIndex = _this$getState6.highlightedIndex;\n\n        if (!rest.disabled) {\n          var _eventHandlers;\n\n          eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, _this.inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, _this.inputHandleBlur), _eventHandlers);\n        }\n\n        return _extends({\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId\n        }, eventHandlers, rest);\n      };\n\n      _this.inputHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (key && _this.inputKeyDownHandlers[key]) {\n          _this.inputKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.inputHandleChange = function (event) {\n        _this.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: _this.props.defaultHighlightedIndex\n        });\n      };\n\n      _this.inputHandleBlur = function () {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        _this.internalSetTimeout(function () {\n          var downshiftButtonIsActive = _this.props.environment.document && !!_this.props.environment.document.activeElement && !!_this.props.environment.document.activeElement.dataset && _this.props.environment.document.activeElement.dataset.toggle && _this._rootNode && _this._rootNode.contains(_this.props.environment.document.activeElement);\n\n          if (!_this.isMouseDown && !downshiftButtonIsActive) {\n            _this.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n\n      _this.menuRef = function (node) {\n        _this._menuNode = node;\n      };\n\n      _this.getMenuProps = function (_temp5, _temp6) {\n        var _extends3;\n\n        var _ref5 = _temp5 === void 0 ? {} : _temp5,\n            _ref5$refKey = _ref5.refKey,\n            refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n            ref = _ref5.ref,\n            props = _objectWithoutPropertiesLoose(_ref5, _excluded4$1);\n\n        var _ref6 = _temp6 === void 0 ? {} : _temp6,\n            _ref6$suppressRefErro = _ref6.suppressRefError,\n            suppressRefError = _ref6$suppressRefErro === void 0 ? false : _ref6$suppressRefErro;\n\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, _this.menuRef), _extends3.role = 'listbox', _extends3['aria-labelledby'] = props && props['aria-label'] ? null : _this.labelId, _extends3.id = _this.menuId, _extends3), props);\n      };\n\n      _this.getItemProps = function (_temp7) {\n        var _enabledEventHandlers;\n\n        var _ref7 = _temp7 === void 0 ? {} : _temp7,\n            onMouseMove = _ref7.onMouseMove,\n            onMouseDown = _ref7.onMouseDown,\n            onClick = _ref7.onClick;\n            _ref7.onPress;\n            var index = _ref7.index,\n            _ref7$item = _ref7.item,\n            item = _ref7$item === void 0 ? process.env.NODE_ENV === 'production' ?\n        /* istanbul ignore next */\n        undefined : requiredProp('getItemProps', 'item') : _ref7$item,\n            rest = _objectWithoutPropertiesLoose(_ref7, _excluded5$1);\n\n        if (index === undefined) {\n          _this.items.push(item);\n\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n\n        var onSelectKey = 'onClick';\n        var customClickHandler = onClick;\n        var enabledEventHandlers = (_enabledEventHandlers = {\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, function () {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n\n            _this.avoidScrolling = true;\n\n            _this.internalSetTimeout(function () {\n              return _this.avoidScrolling = false;\n            }, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          })\n        }, _enabledEventHandlers[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n          _this.selectItemAtIndex(index, {\n            type: clickItem\n          });\n        }), _enabledEventHandlers); // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        var eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return _extends({\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index\n        }, eventHandlers, rest);\n      };\n\n      _this.clearItems = function () {\n        _this.items = [];\n      };\n\n      _this.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref8) {\n          var selectedItem = _ref8.selectedItem;\n          return _extends({\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem)\n          }, otherStateToSet);\n        }, cb);\n      };\n\n      _this.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref9) {\n          var isOpen = _ref9.isOpen;\n          return _extends({\n            isOpen: !isOpen\n          }, isOpen && {\n            highlightedIndex: _this.props.defaultHighlightedIndex\n          }, otherStateToSet);\n        }, function () {\n          var _this$getState7 = _this.getState(),\n              isOpen = _this$getState7.isOpen,\n              highlightedIndex = _this$getState7.highlightedIndex;\n\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n\n          cbToCb(cb)();\n        });\n      };\n\n      _this.openMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n\n      _this.closeMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n\n      _this.updateStatus = debounce(function () {\n        var state = _this.getState();\n\n        var item = _this.items[state.highlightedIndex];\n\n        var resultCount = _this.getItemCount();\n\n        var status = _this.props.getA11yStatusMessage(_extends({\n          itemToString: _this.props.itemToString,\n          previousResultCount: _this.previousResultCount,\n          resultCount: resultCount,\n          highlightedItem: item\n        }, state));\n\n        _this.previousResultCount = resultCount;\n        setStatus(status, _this.props.environment.document);\n      }, 200);\n\n      var _this$props = _this.props,\n          defaultHighlightedIndex = _this$props.defaultHighlightedIndex,\n          _this$props$initialHi = _this$props.initialHighlightedIndex,\n          _highlightedIndex = _this$props$initialHi === void 0 ? defaultHighlightedIndex : _this$props$initialHi,\n          defaultIsOpen = _this$props.defaultIsOpen,\n          _this$props$initialIs = _this$props.initialIsOpen,\n          _isOpen = _this$props$initialIs === void 0 ? defaultIsOpen : _this$props$initialIs,\n          _this$props$initialIn = _this$props.initialInputValue,\n          _inputValue = _this$props$initialIn === void 0 ? '' : _this$props$initialIn,\n          _this$props$initialSe = _this$props.initialSelectedItem,\n          _selectedItem = _this$props$initialSe === void 0 ? null : _this$props$initialSe;\n\n      var _state = _this.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n\n      if (_state.selectedItem != null && _this.props.initialInputValue === undefined) {\n        _state.inputValue = _this.props.itemToString(_state.selectedItem);\n      }\n\n      _this.state = _state;\n      return _this;\n    }\n\n    var _proto = Downshift.prototype;\n\n    /**\n     * Clear all running timeouts\n     */\n    _proto.internalClearTimeouts = function internalClearTimeouts() {\n      this.timeoutIds.forEach(function (id) {\n        clearTimeout(id);\n      });\n      this.timeoutIds = [];\n    }\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n    ;\n\n    _proto.getState = function getState$1(stateToMerge) {\n      if (stateToMerge === void 0) {\n        stateToMerge = this.state;\n      }\n\n      return getState(stateToMerge, this.props);\n    };\n\n    _proto.getItemCount = function getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      var itemCount = this.items.length;\n\n      if (this.itemCount != null) {\n        itemCount = this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        itemCount = this.props.itemCount;\n      }\n\n      return itemCount;\n    };\n\n    _proto.getItemNodeFromIndex = function getItemNodeFromIndex(index) {\n      return this.props.environment.document.getElementById(this.getItemId(index));\n    };\n\n    _proto.scrollHighlightedItemIntoView = function scrollHighlightedItemIntoView() {\n      /* istanbul ignore else (react-native) */\n      {\n        var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n        this.props.scrollIntoView(node, this._menuNode);\n      }\n    };\n\n    _proto.moveHighlightedIndex = function moveHighlightedIndex(amount, otherStateToSet) {\n      var _this6 = this;\n\n      var itemCount = this.getItemCount();\n\n      var _this$getState8 = this.getState(),\n          highlightedIndex = _this$getState8.highlightedIndex;\n\n      if (itemCount > 0) {\n        var nextHighlightedIndex = getNextWrappingIndex(amount, highlightedIndex, itemCount, function (index) {\n          return _this6.getItemNodeFromIndex(index);\n        });\n        this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n      }\n    };\n\n    _proto.getStateAndHelpers = function getStateAndHelpers() {\n      var _this$getState9 = this.getState(),\n          highlightedIndex = _this$getState9.highlightedIndex,\n          inputValue = _this$getState9.inputValue,\n          selectedItem = _this$getState9.selectedItem,\n          isOpen = _this$getState9.isOpen;\n\n      var itemToString = this.props.itemToString;\n      var id = this.id;\n      var getRootProps = this.getRootProps,\n          getToggleButtonProps = this.getToggleButtonProps,\n          getLabelProps = this.getLabelProps,\n          getMenuProps = this.getMenuProps,\n          getInputProps = this.getInputProps,\n          getItemProps = this.getItemProps,\n          openMenu = this.openMenu,\n          closeMenu = this.closeMenu,\n          toggleMenu = this.toggleMenu,\n          selectItem = this.selectItem,\n          selectItemAtIndex = this.selectItemAtIndex,\n          selectHighlightedItem = this.selectHighlightedItem,\n          setHighlightedIndex = this.setHighlightedIndex,\n          clearSelection = this.clearSelection,\n          clearItems = this.clearItems,\n          reset = this.reset,\n          setItemCount = this.setItemCount,\n          unsetItemCount = this.unsetItemCount,\n          setState = this.internalSetState;\n      return {\n        // prop getters\n        getRootProps: getRootProps,\n        getToggleButtonProps: getToggleButtonProps,\n        getLabelProps: getLabelProps,\n        getMenuProps: getMenuProps,\n        getInputProps: getInputProps,\n        getItemProps: getItemProps,\n        // actions\n        reset: reset,\n        openMenu: openMenu,\n        closeMenu: closeMenu,\n        toggleMenu: toggleMenu,\n        selectItem: selectItem,\n        selectItemAtIndex: selectItemAtIndex,\n        selectHighlightedItem: selectHighlightedItem,\n        setHighlightedIndex: setHighlightedIndex,\n        clearSelection: clearSelection,\n        clearItems: clearItems,\n        setItemCount: setItemCount,\n        unsetItemCount: unsetItemCount,\n        setState: setState,\n        // props\n        itemToString: itemToString,\n        // derived\n        id: id,\n        // state\n        highlightedIndex: highlightedIndex,\n        inputValue: inputValue,\n        isOpen: isOpen,\n        selectedItem: selectedItem\n      };\n    } //////////////////////////// ROOT\n    ;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this7 = this;\n\n      /* istanbul ignore if (react-native) */\n      if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      {\n        // this.isMouseDown helps us track whether the mouse is currently held down.\n        // This is useful when the user clicks on an item in the list, but holds the mouse\n        // down long enough for the list to disappear (because the blur event fires on the input)\n        // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n        // trigger hiding the menu.\n        var onMouseDown = function onMouseDown() {\n          _this7.isMouseDown = true;\n        };\n\n        var onMouseUp = function onMouseUp(event) {\n          _this7.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n          // then we don't want to reset downshift\n\n          var contextWithinDownshift = targetWithinDownshift(event.target, [_this7._rootNode, _this7._menuNode], _this7.props.environment);\n\n          if (!contextWithinDownshift && _this7.getState().isOpen) {\n            _this7.reset({\n              type: mouseUp\n            }, function () {\n              return _this7.props.onOuterClick(_this7.getStateAndHelpers());\n            });\n          }\n        }; // Touching an element in iOS gives focus and hover states, but touching out of\n        // the element will remove hover, and persist the focus state, resulting in the\n        // blur event not being triggered.\n        // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n        // If the user taps outside of Downshift, the component should be reset,\n        // but not if the user is swiping\n\n\n        var onTouchStart = function onTouchStart() {\n          _this7.isTouchMove = false;\n        };\n\n        var onTouchMove = function onTouchMove() {\n          _this7.isTouchMove = true;\n        };\n\n        var onTouchEnd = function onTouchEnd(event) {\n          var contextWithinDownshift = targetWithinDownshift(event.target, [_this7._rootNode, _this7._menuNode], _this7.props.environment, false);\n\n          if (!_this7.isTouchMove && !contextWithinDownshift && _this7.getState().isOpen) {\n            _this7.reset({\n              type: touchEnd\n            }, function () {\n              return _this7.props.onOuterClick(_this7.getStateAndHelpers());\n            });\n          }\n        };\n\n        var environment = this.props.environment;\n        environment.addEventListener('mousedown', onMouseDown);\n        environment.addEventListener('mouseup', onMouseUp);\n        environment.addEventListener('touchstart', onTouchStart);\n        environment.addEventListener('touchmove', onTouchMove);\n        environment.addEventListener('touchend', onTouchEnd);\n\n        this.cleanup = function () {\n          _this7.internalClearTimeouts();\n\n          _this7.updateStatus.cancel();\n\n          environment.removeEventListener('mousedown', onMouseDown);\n          environment.removeEventListener('mouseup', onMouseUp);\n          environment.removeEventListener('touchstart', onTouchStart);\n          environment.removeEventListener('touchmove', onTouchMove);\n          environment.removeEventListener('touchend', onTouchEnd);\n        };\n      }\n    };\n\n    _proto.shouldScroll = function shouldScroll(prevState, prevProps) {\n      var _ref10 = this.props.highlightedIndex === undefined ? this.getState() : this.props,\n          currentHighlightedIndex = _ref10.highlightedIndex;\n\n      var _ref11 = prevProps.highlightedIndex === undefined ? prevState : prevProps,\n          prevHighlightedIndex = _ref11.highlightedIndex;\n\n      var scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n      var scrollWhenNavigating = currentHighlightedIndex !== prevHighlightedIndex;\n      return scrollWhenOpen || scrollWhenNavigating;\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateControlledUnchanged(this.state, prevProps, this.props);\n        /* istanbul ignore if (react-native) */\n\n        if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n      }\n\n      if (isControlledProp(this.props, 'selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n        this.scrollHighlightedItemIntoView();\n      }\n      /* istanbul ignore else (react-native) */\n\n\n      {\n        this.updateStatus();\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    };\n\n    _proto.render = function render() {\n      var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n      // we clear this out each render and it will be populated again as\n      // getItemProps is called.\n\n      this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n      this.getMenuProps.called = false;\n      this.getMenuProps.refKey = undefined;\n      this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n      this.getLabelProps.called = false; // and something similar for getInputProps\n\n      this.getInputProps.called = false;\n      var element = unwrapArray(children(this.getStateAndHelpers()));\n\n      if (!element) {\n        return null;\n      }\n\n      if (this.getRootProps.called || this.props.suppressRefError) {\n        if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return /*#__PURE__*/cloneElement(element, this.getRootProps(getElementProps(element)));\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n      }\n      /* istanbul ignore next */\n\n\n      return undefined;\n    };\n\n    return Downshift;\n  }(Component);\n\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage$1,\n    itemToString: function itemToString(i) {\n      if (i == null) {\n        return '';\n      }\n\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: function selectedItemChanged(prevItem, item) {\n      return prevItem !== item;\n    },\n    environment:\n    /* istanbul ignore next (ssr) */\n    typeof window === 'undefined' ? {} : window,\n    stateReducer: function stateReducer(state, stateToSet) {\n      return stateToSet;\n    },\n    suppressRefError: false,\n    scrollIntoView: scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes$3;\n  return Downshift;\n}();\n\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\nvar Downshift$1 = Downshift;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref12) {\n  var refKey = _ref12.refKey;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from getMenuProps was not applied correctly on your menu element.\");\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref13) {\n  var refKey = _ref13.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\" + refKey + \"\\\"\");\n  }\n\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\" + refKey + \"\\\" from getRootProps onto your root element.\");\n  }\n}\n\nvar _excluded$3 = [\"isInitialMount\", \"highlightedIndex\", \"items\", \"environment\"];\nvar dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\n\nfunction callOnChangeProps(action, state, newState) {\n  var props = action.props,\n      type = action.type;\n  var changes = {};\n  Object.keys(state).forEach(function (key) {\n    invokeOnChangeHandler(key, action, state, newState);\n\n    if (newState[key] !== state[key]) {\n      changes[key] = newState[key];\n    }\n  });\n\n  if (props.onStateChange && Object.keys(changes).length) {\n    props.onStateChange(_extends({\n      type: type\n    }, changes));\n  }\n}\n\nfunction invokeOnChangeHandler(key, action, state, newState) {\n  var props = action.props,\n      type = action.type;\n  var handler = \"on\" + capitalizeString(key) + \"Change\";\n\n  if (props[handler] && newState[key] !== undefined && newState[key] !== state[key]) {\n    props[handler](_extends({\n      type: type\n    }, newState));\n  }\n}\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\n\n\nfunction stateReducer(s, a) {\n  return a.changes;\n}\n/**\n * Returns a message to be added to aria-live region when item is selected.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11ySelectionMessage(selectionParameters) {\n  var selectedItem = selectionParameters.selectedItem,\n      itemToStringLocal = selectionParameters.itemToString;\n  return selectedItem ? itemToStringLocal(selectedItem) + \" has been selected.\" : '';\n}\n/**\n * Debounced call for updating the a11y message.\n */\n\n\nvar updateA11yStatus = debounce(function (getA11yMessage, document) {\n  setStatus(getA11yMessage(), document);\n}, 200); // istanbul ignore next\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useElementIds(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? \"downshift-\" + generateId() : _ref$id,\n      labelId = _ref.labelId,\n      menuId = _ref.menuId,\n      getItemId = _ref.getItemId,\n      toggleButtonId = _ref.toggleButtonId,\n      inputId = _ref.inputId;\n  var elementIdsRef = useRef({\n    labelId: labelId || id + \"-label\",\n    menuId: menuId || id + \"-menu\",\n    getItemId: getItemId || function (index) {\n      return id + \"-item-\" + index;\n    },\n    toggleButtonId: toggleButtonId || id + \"-toggle-button\",\n    inputId: inputId || id + \"-input\"\n  });\n  return elementIdsRef.current;\n}\n\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n\n  if (items.length === 0) {\n    return -1;\n  }\n\n  return items.indexOf(item);\n}\n\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\n\nfunction capitalizeString(string) {\n  return \"\" + string.slice(0, 1).toUpperCase() + string.slice(1);\n}\n\nfunction useLatestRef(val) {\n  var ref = useRef(val); // technically this is not \"concurrent mode safe\" because we're manipulating\n  // the value during render (so it's not idempotent). However, the places this\n  // hook is used is to support memoizing callbacks which will be called\n  // *during* render, so we need the latest values *during* render.\n  // If not for this, then we'd probably want to use useLayoutEffect instead.\n\n  ref.current = val;\n  return ref;\n}\n/**\n * Computes the controlled state using a the previous state, props,\n * two reducers, one from downshift and an optional one from the user.\n * Also calls the onChange handlers for state values that have changed.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  var prevStateRef = useRef();\n  var actionRef = useRef();\n  var enhancedReducer = useCallback(function (state, action) {\n    actionRef.current = action;\n    state = getState(state, action.props);\n    var changes = reducer(state, action);\n    var newState = action.props.stateReducer(state, _extends({}, action, {\n      changes: changes\n    }));\n    return newState;\n  }, [reducer]);\n\n  var _useReducer = useReducer(enhancedReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var propsRef = useLatestRef(props);\n  var dispatchWithProps = useCallback(function (action) {\n    return dispatch(_extends({\n      props: propsRef.current\n    }, action));\n  }, [propsRef]);\n  var action = actionRef.current;\n  useEffect(function () {\n    if (action && prevStateRef.current && prevStateRef.current !== state) {\n      callOnChangeProps(action, getState(prevStateRef.current, action.props), state);\n    }\n\n    prevStateRef.current = state;\n  }, [state, props, action]);\n  return [state, dispatchWithProps];\n}\n/**\n * Wraps the useEnhancedReducer and applies the controlled prop values before\n * returning the new state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useControlledReducer$1(reducer, initialState, props) {\n  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),\n      state = _useEnhancedReducer[0],\n      dispatch = _useEnhancedReducer[1];\n\n  return [getState(state, props), dispatch];\n}\n\nvar defaultProps$3 = {\n  itemToString: itemToString,\n  stateReducer: stateReducer,\n  getA11ySelectionMessage: getA11ySelectionMessage,\n  scrollIntoView: scrollIntoView,\n  circularNavigation: false,\n  environment:\n  /* istanbul ignore next (ssr) */\n  typeof window === 'undefined' ? {} : window\n};\n\nfunction getDefaultValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  var defaultPropKey = \"default\" + capitalizeString(propKey);\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n\n  return defaultStateValues[propKey];\n}\n\nfunction getInitialValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  if (propKey in props) {\n    return props[propKey];\n  }\n\n  var initialPropKey = \"initial\" + capitalizeString(propKey);\n\n  if (initialPropKey in props) {\n    return props[initialPropKey];\n  }\n\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n\nfunction getInitialState$2(props) {\n  var selectedItem = getInitialValue$1(props, 'selectedItem');\n  var isOpen = getInitialValue$1(props, 'isOpen');\n  var highlightedIndex = getInitialValue$1(props, 'highlightedIndex');\n  var inputValue = getInitialValue$1(props, 'inputValue');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem && isOpen ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {\n  var items = props.items,\n      initialHighlightedIndex = props.initialHighlightedIndex,\n      defaultHighlightedIndex = props.defaultHighlightedIndex;\n  var selectedItem = state.selectedItem,\n      highlightedIndex = state.highlightedIndex;\n\n  if (items.length === 0) {\n    return -1;\n  } // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {\n    return initialHighlightedIndex;\n  }\n\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n\n    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);\n  }\n\n  if (offset === 0) {\n    return -1;\n  }\n\n  return offset < 0 ? items.length - 1 : 0;\n}\n/**\n * Reuse the movement tracking of mouse and touch events.\n *\n * @param {boolean} isOpen Whether the dropdown is open or not.\n * @param {Array<Object>} downshiftElementRefs Downshift element refs to track movement (toggleButton, menu etc.)\n * @param {Object} environment Environment where component/hook exists.\n * @param {Function} handleBlur Handler on blur from mouse or touch.\n * @returns {Object} Ref containing whether mouseDown or touchMove event is happening\n */\n\n\nfunction useMouseAndTouchTracker(isOpen, downshiftElementRefs, environment, handleBlur) {\n  var mouseAndTouchTrackersRef = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  useEffect(function () {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    var onMouseDown = function onMouseDown() {\n      mouseAndTouchTrackersRef.current.isMouseDown = true;\n    };\n\n    var onMouseUp = function onMouseUp(event) {\n      mouseAndTouchTrackersRef.current.isMouseDown = false;\n\n      if (isOpen && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {\n        return ref.current;\n      }), environment)) {\n        handleBlur();\n      }\n    };\n\n    var onTouchStart = function onTouchStart() {\n      mouseAndTouchTrackersRef.current.isTouchMove = false;\n    };\n\n    var onTouchMove = function onTouchMove() {\n      mouseAndTouchTrackersRef.current.isTouchMove = true;\n    };\n\n    var onTouchEnd = function onTouchEnd(event) {\n      if (isOpen && !mouseAndTouchTrackersRef.current.isTouchMove && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {\n        return ref.current;\n      }), environment, false)) {\n        handleBlur();\n      }\n    };\n\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function cleanup() {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, environment]);\n  return mouseAndTouchTrackersRef;\n}\n/* istanbul ignore next */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nvar useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {\n  return noop;\n};\n/**\n * Custom hook that checks if getter props are called correctly.\n *\n * @param  {...any} propKeys Getter prop names to be handled.\n * @returns {Function} Setter function called inside getter props to set call information.\n */\n\n/* istanbul ignore next */\n\n\nif (process.env.NODE_ENV !== 'production') {\n  useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {\n    var isInitialMountRef = useRef(true);\n\n    for (var _len = arguments.length, propKeys = new Array(_len), _key = 0; _key < _len; _key++) {\n      propKeys[_key] = arguments[_key];\n    }\n\n    var getterPropsCalledRef = useRef(propKeys.reduce(function (acc, propKey) {\n      acc[propKey] = {};\n      return acc;\n    }, {}));\n    useEffect(function () {\n      Object.keys(getterPropsCalledRef.current).forEach(function (propKey) {\n        var propCallInfo = getterPropsCalledRef.current[propKey];\n\n        if (isInitialMountRef.current) {\n          if (!Object.keys(propCallInfo).length) {\n            // eslint-disable-next-line no-console\n            console.error(\"downshift: You forgot to call the \" + propKey + \" getter function on your component / element.\");\n            return;\n          }\n        }\n\n        var suppressRefError = propCallInfo.suppressRefError,\n            refKey = propCallInfo.refKey,\n            elementRef = propCallInfo.elementRef;\n\n        if ((!elementRef || !elementRef.current) && !suppressRefError) {\n          // eslint-disable-next-line no-console\n          console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from \" + propKey + \" was not applied correctly on your element.\");\n        }\n      });\n      isInitialMountRef.current = false;\n    });\n    var setGetterPropCallInfo = useCallback(function (propKey, suppressRefError, refKey, elementRef) {\n      getterPropsCalledRef.current[propKey] = {\n        suppressRefError: suppressRefError,\n        refKey: refKey,\n        elementRef: elementRef\n      };\n    }, []);\n    return setGetterPropCallInfo;\n  };\n}\n\nfunction useA11yMessageSetter(getA11yMessage, dependencyArray, _ref2) {\n  var isInitialMount = _ref2.isInitialMount,\n      highlightedIndex = _ref2.highlightedIndex,\n      items = _ref2.items,\n      environment = _ref2.environment,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded$3);\n\n  // Sets a11y status message on changes in state.\n  useEffect(function () {\n    if (isInitialMount || false) {\n      return;\n    }\n\n    updateA11yStatus(function () {\n      return getA11yMessage(_extends({\n        highlightedIndex: highlightedIndex,\n        highlightedItem: items[highlightedIndex],\n        resultCount: items.length\n      }, rest));\n    }, environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencyArray);\n}\n\nfunction useScrollIntoView(_ref3) {\n  var highlightedIndex = _ref3.highlightedIndex,\n      isOpen = _ref3.isOpen,\n      itemRefs = _ref3.itemRefs,\n      getItemNodeFromIndex = _ref3.getItemNodeFromIndex,\n      menuElement = _ref3.menuElement,\n      scrollIntoViewProp = _ref3.scrollIntoView;\n  // used not to scroll on highlight by mouse.\n  var shouldScrollRef = useRef(true); // Scroll on highlighted item if change comes from keyboard.\n\n  useIsomorphicLayoutEffect(function () {\n    if (highlightedIndex < 0 || !isOpen || !Object.keys(itemRefs.current).length) {\n      return;\n    }\n\n    if (shouldScrollRef.current === false) {\n      shouldScrollRef.current = true;\n    } else {\n      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  return shouldScrollRef;\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nvar useControlPropsValidator = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  useControlPropsValidator = function useControlPropsValidator(_ref4) {\n    var isInitialMount = _ref4.isInitialMount,\n        props = _ref4.props,\n        state = _ref4.state;\n    // used for checking when props are moving from controlled to uncontrolled.\n    var prevPropsRef = useRef(props);\n    useEffect(function () {\n      if (isInitialMount) {\n        return;\n      }\n\n      validateControlledUnchanged(state, prevPropsRef.current, props);\n      prevPropsRef.current = props;\n    }, [state, props, isInitialMount]);\n  };\n}\n\n/* eslint-disable complexity */\n\nfunction downshiftCommonReducer(state, action, stateChangeTypes) {\n  var type = action.type,\n      props = action.props;\n  var changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemMouseMove:\n      changes = {\n        highlightedIndex: action.index\n      };\n      break;\n\n    case stateChangeTypes.MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        selectedItem: getDefaultValue$1(props, 'selectedItem'),\n        inputValue: getDefaultValue$1(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, changes);\n}\n/* eslint-enable complexity */\n\nfunction getItemIndexByCharacterKey(_a) {\n    var keysSoFar = _a.keysSoFar, highlightedIndex = _a.highlightedIndex, items = _a.items, itemToString = _a.itemToString, getItemNodeFromIndex = _a.getItemNodeFromIndex;\n    var lowerCasedKeysSoFar = keysSoFar.toLowerCase();\n    for (var index = 0; index < items.length; index++) {\n        var offsetIndex = (index + highlightedIndex + 1) % items.length;\n        var item = items[offsetIndex];\n        if (item !== undefined &&\n            itemToString(item)\n                .toLowerCase()\n                .startsWith(lowerCasedKeysSoFar)) {\n            var element = getItemNodeFromIndex(offsetIndex);\n            if (!(element === null || element === void 0 ? void 0 : element.hasAttribute('disabled'))) {\n                return offsetIndex;\n            }\n        }\n    }\n    return highlightedIndex;\n}\nvar propTypes$2 = {\n    items: PropTypes.array.isRequired,\n    itemToString: PropTypes.func,\n    getA11yStatusMessage: PropTypes.func,\n    getA11ySelectionMessage: PropTypes.func,\n    circularNavigation: PropTypes.bool,\n    highlightedIndex: PropTypes.number,\n    defaultHighlightedIndex: PropTypes.number,\n    initialHighlightedIndex: PropTypes.number,\n    isOpen: PropTypes.bool,\n    defaultIsOpen: PropTypes.bool,\n    initialIsOpen: PropTypes.bool,\n    selectedItem: PropTypes.any,\n    initialSelectedItem: PropTypes.any,\n    defaultSelectedItem: PropTypes.any,\n    id: PropTypes.string,\n    labelId: PropTypes.string,\n    menuId: PropTypes.string,\n    getItemId: PropTypes.func,\n    toggleButtonId: PropTypes.string,\n    stateReducer: PropTypes.func,\n    onSelectedItemChange: PropTypes.func,\n    onHighlightedIndexChange: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onIsOpenChange: PropTypes.func,\n    environment: PropTypes.shape({\n        addEventListener: PropTypes.func,\n        removeEventListener: PropTypes.func,\n        document: PropTypes.shape({\n            getElementById: PropTypes.func,\n            activeElement: PropTypes.any,\n            body: PropTypes.any\n        })\n    })\n};\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\nfunction getA11yStatusMessage(_a) {\n    var isOpen = _a.isOpen, resultCount = _a.resultCount, previousResultCount = _a.previousResultCount;\n    if (!isOpen) {\n        return '';\n    }\n    if (!resultCount) {\n        return 'No results are available.';\n    }\n    if (resultCount !== previousResultCount) {\n        return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.\";\n    }\n    return '';\n}\nvar defaultProps$2 = __assign(__assign({}, defaultProps$3), { getA11yStatusMessage: getA11yStatusMessage });\n// eslint-disable-next-line import/no-mutable-exports\nvar validatePropTypes$2 = noop;\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n    validatePropTypes$2 = function (options, caller) {\n        PropTypes.checkPropTypes(propTypes$2, options, 'prop', caller.name);\n    };\n}\n\nvar MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nvar MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nvar MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nvar MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nvar MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nvar MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nvar MenuKeyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_space_button__' : 6;\nvar MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 7;\nvar MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 8;\nvar MenuMouseLeave$1 = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 9;\nvar ItemMouseMove$1 = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 10;\nvar ItemClick$1 = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 11;\nvar ToggleButtonClick$1 = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 12;\nvar ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 13;\nvar ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 14;\nvar ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 15;\nvar FunctionToggleMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 16;\nvar FunctionOpenMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 17;\nvar FunctionCloseMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 18;\nvar FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 19;\nvar FunctionSelectItem$1 = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 20;\nvar FunctionSetInputValue$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 21;\nvar FunctionReset$2 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 22;\n\nvar stateChangeTypes$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave$1,\n  ItemMouseMove: ItemMouseMove$1,\n  ItemClick: ItemClick$1,\n  ToggleButtonClick: ToggleButtonClick$1,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  FunctionToggleMenu: FunctionToggleMenu$1,\n  FunctionOpenMenu: FunctionOpenMenu$1,\n  FunctionCloseMenu: FunctionCloseMenu$1,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,\n  FunctionSelectItem: FunctionSelectItem$1,\n  FunctionSetInputValue: FunctionSetInputValue$1,\n  FunctionReset: FunctionReset$2\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemClick$1:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n\n    case ToggleButtonKeyDownCharacter:\n      {\n        var lowercasedKey = action.key;\n        var inputValue = \"\" + state.inputValue + lowercasedKey;\n        var itemIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.selectedItem ? props.items.indexOf(state.selectedItem) : -1,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = _extends({\n          inputValue: inputValue\n        }, itemIndex >= 0 && {\n          selectedItem: props.items[itemIndex]\n        });\n      }\n      break;\n\n    case ToggleButtonKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case MenuKeyDownEnter:\n    case MenuKeyDownSpaceButton:\n      changes = _extends({\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex')\n      }, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex]\n      });\n      break;\n\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownCharacter:\n      {\n        var _lowercasedKey = action.key;\n\n        var _inputValue = \"\" + state.inputValue + _lowercasedKey;\n\n        var highlightedIndex = getItemIndexByCharacterKey({\n          keysSoFar: _inputValue,\n          highlightedIndex: state.highlightedIndex,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = _extends({\n          inputValue: _inputValue\n        }, highlightedIndex >= 0 && {\n          highlightedIndex: highlightedIndex\n        });\n      }\n      break;\n\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case FunctionSelectItem$1:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$2);\n  }\n\n  return _extends({}, state, changes);\n}\n/* eslint-enable complexity */\n\nvar _excluded$2 = [\"onMouseLeave\", \"refKey\", \"onKeyDown\", \"onBlur\", \"ref\"],\n    _excluded2$2 = [\"onClick\", \"onKeyDown\", \"refKey\", \"ref\"],\n    _excluded3$1 = [\"item\", \"index\", \"onMouseMove\", \"onClick\", \"refKey\", \"ref\"];\nuseSelect.stateChangeTypes = stateChangeTypes$2;\n\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$2(userProps, useSelect); // Props defaults and destructuring.\n\n  var props = _extends({}, defaultProps$2, userProps);\n\n  var items = props.items,\n      scrollIntoView = props.scrollIntoView,\n      environment = props.environment,\n      initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen,\n      itemToString = props.itemToString,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      getA11yStatusMessage = props.getA11yStatusMessage; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$2(props);\n\n  var _useControlledReducer = useControlledReducer$1(downshiftSelectReducer, initialState, props),\n      state = _useControlledReducer[0],\n      dispatch = _useControlledReducer[1];\n\n  var isOpen = state.isOpen,\n      highlightedIndex = state.highlightedIndex,\n      selectedItem = state.selectedItem,\n      inputValue = state.inputValue; // Element efs.\n\n  var toggleButtonRef = useRef(null);\n  var menuRef = useRef(null);\n  var itemRefs = useRef({}); // used not to trigger menu blur action in some scenarios.\n\n  var shouldBlurRef = useRef(true); // used to keep the inputValue clearTimeout object between renders.\n\n  var clearTimeoutRef = useRef(null); // prevent id re-generation between renders.\n\n  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  var previousResultCountRef = useRef();\n  var isInitialMountRef = useRef(true); // utility callback to get item element.\n\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  }); // Some utils.\n\n  var getItemNodeFromIndex = useCallback(function (index) {\n    return itemRefs.current[elementIds.getItemId(index)];\n  }, [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Scroll on highlighted item if change comes from keyboard.\n\n  var shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    itemRefs: itemRefs,\n    scrollIntoView: scrollIntoView,\n    getItemNodeFromIndex: getItemNodeFromIndex\n  }); // Sets cleanup for the keysSoFar callback, debounded after 500ms.\n\n  useEffect(function () {\n    // init the clean function here as we need access to dispatch.\n    clearTimeoutRef.current = debounce(function (outerDispatch) {\n      outerDispatch({\n        type: FunctionSetInputValue$1,\n        inputValue: ''\n      });\n    }, 500); // Cancel any pending debounced calls on mount\n\n    return function () {\n      clearTimeoutRef.current.cancel();\n    };\n  }, []); // Invokes the keysSoFar callback set up above.\n\n  useEffect(function () {\n    if (!inputValue) {\n      return;\n    }\n\n    clearTimeoutRef.current(dispatch);\n  }, [dispatch, inputValue]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  });\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(function () {\n    // Don't focus menu on first render.\n    if (isInitialMountRef.current) {\n      // Unless it was initialised as open.\n      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus menu on open.\n\n\n    if (isOpen) {\n      // istanbul ignore else\n      if (menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus toggleButton on close, but not if it was closed with (Shift+)Tab.\n\n\n    if (environment.document.activeElement === menuRef.current) {\n      // istanbul ignore else\n      if (toggleButtonRef.current) {\n        shouldBlurRef.current = false;\n        toggleButtonRef.current.focus();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [menuRef, toggleButtonRef], environment, function () {\n    dispatch({\n      type: MenuBlur\n    });\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getMenuProps', 'getToggleButtonProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(function () {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]); // Event handler functions.\n\n  var toggleButtonKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: ToggleButtonKeyDownArrowDown,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: ToggleButtonKeyDownArrowUp,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      }\n    };\n  }, [dispatch, getItemNodeFromIndex]);\n  var menuKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownArrowDown,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownArrowUp,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      Home: function Home(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownHome,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      End: function End(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownEnd,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Escape: function Escape() {\n        dispatch({\n          type: MenuKeyDownEscape\n        });\n      },\n      Enter: function Enter(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownEnter\n        });\n      },\n      ' ': function _(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownSpaceButton\n        });\n      }\n    };\n  }, [dispatch, getItemNodeFromIndex]); // Action functions.\n\n  var toggleMenu = useCallback(function () {\n    dispatch({\n      type: FunctionToggleMenu$1\n    });\n  }, [dispatch]);\n  var closeMenu = useCallback(function () {\n    dispatch({\n      type: FunctionCloseMenu$1\n    });\n  }, [dispatch]);\n  var openMenu = useCallback(function () {\n    dispatch({\n      type: FunctionOpenMenu$1\n    });\n  }, [dispatch]);\n  var setHighlightedIndex = useCallback(function (newHighlightedIndex) {\n    dispatch({\n      type: FunctionSetHighlightedIndex$1,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  var selectItem = useCallback(function (newSelectedItem) {\n    dispatch({\n      type: FunctionSelectItem$1,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset$2\n    });\n  }, [dispatch]);\n  var setInputValue = useCallback(function (newInputValue) {\n    dispatch({\n      type: FunctionSetInputValue$1,\n      inputValue: newInputValue\n    });\n  }, [dispatch]); // Getter functions.\n\n  var getLabelProps = useCallback(function (labelProps) {\n    return _extends({\n      id: elementIds.labelId,\n      htmlFor: elementIds.toggleButtonId\n    }, labelProps);\n  }, [elementIds]);\n  var getMenuProps = useCallback(function (_temp, _temp2) {\n    var _extends2;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        onMouseLeave = _ref.onMouseLeave,\n        _ref$refKey = _ref.refKey,\n        refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n        onKeyDown = _ref.onKeyDown,\n        onBlur = _ref.onBlur,\n        ref = _ref.ref,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$suppressRefErro = _ref2.suppressRefError,\n        suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n    var latestState = latest.current.state;\n\n    var menuHandleKeyDown = function menuHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && menuKeyDownHandlers[key]) {\n        menuKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: MenuKeyDownCharacter,\n          key: key,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n\n    var menuHandleBlur = function menuHandleBlur() {\n      // if the blur was a result of selection, we don't trigger this action.\n      if (shouldBlurRef.current === false) {\n        shouldBlurRef.current = true;\n        return;\n      }\n\n      var shouldBlur = !mouseAndTouchTrackersRef.current.isMouseDown;\n      /* istanbul ignore else */\n\n      if (shouldBlur) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n\n    var menuHandleMouseLeave = function menuHandleMouseLeave() {\n      dispatch({\n        type: MenuMouseLeave$1\n      });\n    };\n\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n      menuRef.current = menuNode;\n    }), _extends2.id = elementIds.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.labelId, _extends2.tabIndex = -1, _extends2), latestState.isOpen && latestState.highlightedIndex > -1 && {\n      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n    }, {\n      onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n      onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n      onBlur: callAllEventHandlers(onBlur, menuHandleBlur)\n    }, rest);\n  }, [dispatch, latest, menuKeyDownHandlers, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  var getToggleButtonProps = useCallback(function (_temp3, _temp4) {\n    var _extends3;\n\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        onClick = _ref3.onClick,\n        onKeyDown = _ref3.onKeyDown,\n        _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n        ref = _ref3.ref,\n        rest = _objectWithoutPropertiesLoose(_ref3, _excluded2$2);\n\n    var _ref4 = _temp4 === void 0 ? {} : _temp4,\n        _ref4$suppressRefErro = _ref4.suppressRefError,\n        suppressRefError = _ref4$suppressRefErro === void 0 ? false : _ref4$suppressRefErro;\n\n    var toggleButtonHandleClick = function toggleButtonHandleClick() {\n      dispatch({\n        type: ToggleButtonClick$1\n      });\n    };\n\n    var toggleButtonHandleKeyDown = function toggleButtonHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && toggleButtonKeyDownHandlers[key]) {\n        toggleButtonKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: ToggleButtonKeyDownCharacter,\n          key: key,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n\n    var toggleProps = _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (toggleButtonNode) {\n      toggleButtonRef.current = toggleButtonNode;\n    }), _extends3.id = elementIds.toggleButtonId, _extends3['aria-haspopup'] = 'listbox', _extends3['aria-expanded'] = latest.current.state.isOpen, _extends3['aria-labelledby'] = elementIds.labelId + \" \" + elementIds.toggleButtonId, _extends3), rest);\n\n    if (!rest.disabled) {\n      toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n      toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n    }\n\n    setGetterPropCallInfo('getToggleButtonProps', suppressRefError, refKey, toggleButtonRef);\n    return toggleProps;\n  }, [dispatch, latest, toggleButtonKeyDownHandlers, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  var getItemProps = useCallback(function (_temp5) {\n    var _extends4;\n\n    var _ref5 = _temp5 === void 0 ? {} : _temp5,\n        item = _ref5.item,\n        index = _ref5.index,\n        onMouseMove = _ref5.onMouseMove,\n        onClick = _ref5.onClick,\n        _ref5$refKey = _ref5.refKey,\n        refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n        ref = _ref5.ref,\n        rest = _objectWithoutPropertiesLoose(_ref5, _excluded3$1);\n\n    var _latest$current = latest.current,\n        latestState = _latest$current.state,\n        latestProps = _latest$current.props;\n\n    var itemHandleMouseMove = function itemHandleMouseMove() {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove$1,\n        index: index\n      });\n    };\n\n    var itemHandleClick = function itemHandleClick() {\n      dispatch({\n        type: ItemClick$1,\n        index: index\n      });\n    };\n\n    var itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    var itemProps = _extends((_extends4 = {\n      role: 'option',\n      'aria-selected': \"\" + (itemIndex === latestState.highlightedIndex),\n      id: elementIds.getItemId(itemIndex)\n    }, _extends4[refKey] = handleRefs(ref, function (itemNode) {\n      if (itemNode) {\n        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n      }\n    }), _extends4), rest);\n\n    if (!rest.disabled) {\n      itemProps.onMouseMove = callAllEventHandlers(onMouseMove, itemHandleMouseMove);\n      itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick);\n    }\n\n    return itemProps;\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  return {\n    // prop getters.\n    getToggleButtonProps: getToggleButtonProps,\n    getLabelProps: getLabelProps,\n    getMenuProps: getMenuProps,\n    getItemProps: getItemProps,\n    // actions.\n    toggleMenu: toggleMenu,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    setHighlightedIndex: setHighlightedIndex,\n    selectItem: selectItem,\n    reset: reset,\n    setInputValue: setInputValue,\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nvar InputKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_down__' : 0;\nvar InputKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_up__' : 1;\nvar InputKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__input_keydown_escape__' : 2;\nvar InputKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__input_keydown_home__' : 3;\nvar InputKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__input_keydown_end__' : 4;\nvar InputKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__input_keydown_enter__' : 5;\nvar InputChange = process.env.NODE_ENV !== \"production\" ? '__input_change__' : 6;\nvar InputBlur = process.env.NODE_ENV !== \"production\" ? '__input_blur__' : 7;\nvar MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nvar ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nvar ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nvar ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 11;\nvar FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 12;\nvar FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 13;\nvar FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 14;\nvar FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 15;\nvar FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 16;\nvar FunctionSetInputValue = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 17;\nvar FunctionReset$1 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 18;\nvar ControlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__controlled_prop_updated_selected_item__' : 19;\n\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  InputKeyDownArrowDown: InputKeyDownArrowDown,\n  InputKeyDownArrowUp: InputKeyDownArrowUp,\n  InputKeyDownEscape: InputKeyDownEscape,\n  InputKeyDownHome: InputKeyDownHome,\n  InputKeyDownEnd: InputKeyDownEnd,\n  InputKeyDownEnter: InputKeyDownEnter,\n  InputChange: InputChange,\n  InputBlur: InputBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonClick: ToggleButtonClick,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionSetInputValue: FunctionSetInputValue,\n  FunctionReset: FunctionReset$1,\n  ControlledPropUpdatedSelectedItem: ControlledPropUpdatedSelectedItem\n});\n\nfunction getInitialState$1(props) {\n  var initialState = getInitialState$2(props);\n  var selectedItem = initialState.selectedItem;\n  var inputValue = initialState.inputValue;\n\n  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {\n    inputValue = props.itemToString(selectedItem);\n  }\n\n  return _extends({}, initialState, {\n    inputValue: inputValue\n  });\n}\n\nvar propTypes$1 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  inputId: PropTypes.string,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * The useCombobox version of useControlledReducer, which also\n * checks if the controlled prop selectedItem changed between\n * renders. If so, it will also update inputValue with its\n * string equivalent. It uses the common useEnhancedReducer to\n * compute the rest of the state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useControlledReducer(reducer, initialState, props) {\n  var previousSelectedItemRef = useRef();\n\n  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),\n      state = _useEnhancedReducer[0],\n      dispatch = _useEnhancedReducer[1]; // ToDo: if needed, make same approach as selectedItemChanged from Downshift.\n\n\n  useEffect(function () {\n    if (isControlledProp(props, 'selectedItem')) {\n      if (previousSelectedItemRef.current !== props.selectedItem) {\n        dispatch({\n          type: ControlledPropUpdatedSelectedItem,\n          inputValue: props.itemToString(props.selectedItem)\n        });\n      }\n\n      previousSelectedItemRef.current = state.selectedItem === previousSelectedItemRef.current ? props.selectedItem : state.selectedItem;\n    }\n  });\n  return [getState(state, props), dispatch];\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nvar validatePropTypes$1 = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$1 = function validatePropTypes(options, caller) {\n    PropTypes.checkPropTypes(propTypes$1, options, 'prop', caller.name);\n  };\n}\n\nvar defaultProps$1 = _extends({}, defaultProps$3, {\n  getA11yStatusMessage: getA11yStatusMessage$1,\n  circularNavigation: true\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftUseComboboxReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownArrowUp:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownEnter:\n      changes = _extends({}, state.isOpen && state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex],\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n\n    case InputKeyDownEscape:\n      changes = _extends({\n        isOpen: false,\n        highlightedIndex: -1\n      }, !state.isOpen && {\n        selectedItem: null,\n        inputValue: ''\n      });\n      break;\n\n    case InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputBlur:\n      changes = _extends({\n        isOpen: false,\n        highlightedIndex: -1\n      }, state.highlightedIndex >= 0 && action.selectItem && {\n        selectedItem: props.items[state.highlightedIndex],\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n\n    case InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: action.inputValue\n      };\n      break;\n\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case ControlledPropUpdatedSelectedItem:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$1);\n  }\n\n  return _extends({}, state, changes);\n}\n/* eslint-enable complexity */\n\nvar _excluded$1 = [\"onMouseLeave\", \"refKey\", \"ref\"],\n    _excluded2$1 = [\"item\", \"index\", \"refKey\", \"ref\", \"onMouseMove\", \"onClick\", \"onPress\"],\n    _excluded3 = [\"onClick\", \"onPress\", \"refKey\", \"ref\"],\n    _excluded4 = [\"onKeyDown\", \"onChange\", \"onInput\", \"onBlur\", \"onChangeText\", \"refKey\", \"ref\"],\n    _excluded5 = [\"refKey\", \"ref\"];\nuseCombobox.stateChangeTypes = stateChangeTypes$1;\n\nfunction useCombobox(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$1(userProps, useCombobox); // Props defaults and destructuring.\n\n  var props = _extends({}, defaultProps$1, userProps);\n\n  var initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen,\n      items = props.items,\n      scrollIntoView = props.scrollIntoView,\n      environment = props.environment,\n      getA11yStatusMessage = props.getA11yStatusMessage,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      itemToString = props.itemToString; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$1(props);\n\n  var _useControlledReducer = useControlledReducer(downshiftUseComboboxReducer, initialState, props),\n      state = _useControlledReducer[0],\n      dispatch = _useControlledReducer[1];\n\n  var isOpen = state.isOpen,\n      highlightedIndex = state.highlightedIndex,\n      selectedItem = state.selectedItem,\n      inputValue = state.inputValue; // Element refs.\n\n  var menuRef = useRef(null);\n  var itemRefs = useRef({});\n  var inputRef = useRef(null);\n  var toggleButtonRef = useRef(null);\n  var comboboxRef = useRef(null);\n  var isInitialMountRef = useRef(true); // prevent id re-generation between renders.\n\n  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  var previousResultCountRef = useRef(); // utility callback to get item element.\n\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  });\n  var getItemNodeFromIndex = useCallback(function (index) {\n    return itemRefs.current[elementIds.getItemId(index)];\n  }, [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Scroll on highlighted item if change comes from keyboard.\n\n  var shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    itemRefs: itemRefs,\n    scrollIntoView: scrollIntoView,\n    getItemNodeFromIndex: getItemNodeFromIndex\n  });\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  }); // Focus the input on first render if required.\n\n  useEffect(function () {\n    var focusOnOpen = initialIsOpen || defaultIsOpen || isOpen;\n\n    if (focusOnOpen && inputRef.current) {\n      inputRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [comboboxRef, menuRef, toggleButtonRef], environment, function () {\n    dispatch({\n      type: InputBlur,\n      selectItem: false\n    });\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getInputProps', 'getComboboxProps', 'getMenuProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(function () {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]);\n  /* Event handler functions */\n\n  var inputKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownArrowDown,\n          shiftKey: event.shiftKey,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownArrowUp,\n          shiftKey: event.shiftKey,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Home: function Home(event) {\n        if (!latest.current.state.isOpen) {\n          return;\n        }\n\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownHome,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      End: function End(event) {\n        if (!latest.current.state.isOpen) {\n          return;\n        }\n\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEnd,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Escape: function Escape() {\n        var latestState = latest.current.state;\n\n        if (latestState.isOpen || latestState.inputValue || latestState.selectedItem || latestState.highlightedIndex > -1) {\n          dispatch({\n            type: InputKeyDownEscape\n          });\n        }\n      },\n      Enter: function Enter(event) {\n        var latestState = latest.current.state; // if closed or no highlighted index, do nothing.\n\n        if (!latestState.isOpen || latestState.highlightedIndex < 0 || event.which === 229 // if IME composing, wait for next Enter keydown event.\n        ) {\n          return;\n        }\n\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEnter,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n  }, [dispatch, latest, getItemNodeFromIndex]); // Getter props.\n\n  var getLabelProps = useCallback(function (labelProps) {\n    return _extends({\n      id: elementIds.labelId,\n      htmlFor: elementIds.inputId\n    }, labelProps);\n  }, [elementIds]);\n  var getMenuProps = useCallback(function (_temp, _temp2) {\n    var _extends2;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        onMouseLeave = _ref.onMouseLeave,\n        _ref$refKey = _ref.refKey,\n        refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n        ref = _ref.ref,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$suppressRefErro = _ref2.suppressRefError,\n        suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n      menuRef.current = menuNode;\n    }), _extends2.id = elementIds.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.labelId, _extends2.onMouseLeave = callAllEventHandlers(onMouseLeave, function () {\n      dispatch({\n        type: MenuMouseLeave\n      });\n    }), _extends2), rest);\n  }, [dispatch, setGetterPropCallInfo, elementIds]);\n  var getItemProps = useCallback(function (_temp3) {\n    var _extends3, _ref4;\n\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        item = _ref3.item,\n        index = _ref3.index,\n        _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n        ref = _ref3.ref,\n        onMouseMove = _ref3.onMouseMove,\n        onClick = _ref3.onClick;\n        _ref3.onPress;\n        var rest = _objectWithoutPropertiesLoose(_ref3, _excluded2$1);\n\n    var _latest$current = latest.current,\n        latestProps = _latest$current.props,\n        latestState = _latest$current.state;\n    var itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    var onSelectKey = 'onClick';\n    var customClickHandler = onClick;\n\n    var itemHandleMouseMove = function itemHandleMouseMove() {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove,\n        index: index\n      });\n    };\n\n    var itemHandleClick = function itemHandleClick() {\n      dispatch({\n        type: ItemClick,\n        index: index\n      });\n\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n\n    return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (itemNode) {\n      if (itemNode) {\n        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n      }\n    }), _extends3.role = 'option', _extends3['aria-selected'] = \"\" + (itemIndex === latestState.highlightedIndex), _extends3.id = elementIds.getItemId(itemIndex), _extends3), !rest.disabled && (_ref4 = {\n      onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove)\n    }, _ref4[onSelectKey] = callAllEventHandlers(customClickHandler, itemHandleClick), _ref4), rest);\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  var getToggleButtonProps = useCallback(function (_temp4) {\n    var _extends4;\n\n    var _ref5 = _temp4 === void 0 ? {} : _temp4,\n        onClick = _ref5.onClick;\n        _ref5.onPress;\n        var _ref5$refKey = _ref5.refKey,\n        refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n        ref = _ref5.ref,\n        rest = _objectWithoutPropertiesLoose(_ref5, _excluded3);\n\n    var toggleButtonHandleClick = function toggleButtonHandleClick() {\n      dispatch({\n        type: ToggleButtonClick\n      });\n\n      if (!latest.current.state.isOpen && inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n\n    return _extends((_extends4 = {}, _extends4[refKey] = handleRefs(ref, function (toggleButtonNode) {\n      toggleButtonRef.current = toggleButtonNode;\n    }), _extends4.id = elementIds.toggleButtonId, _extends4.tabIndex = -1, _extends4), !rest.disabled && _extends({}, {\n      onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)\n    }), rest);\n  }, [dispatch, latest, elementIds]);\n  var getInputProps = useCallback(function (_temp5, _temp6) {\n    var _extends5;\n\n    var _ref6 = _temp5 === void 0 ? {} : _temp5,\n        onKeyDown = _ref6.onKeyDown,\n        onChange = _ref6.onChange,\n        onInput = _ref6.onInput,\n        onBlur = _ref6.onBlur;\n        _ref6.onChangeText;\n        var _ref6$refKey = _ref6.refKey,\n        refKey = _ref6$refKey === void 0 ? 'ref' : _ref6$refKey,\n        ref = _ref6.ref,\n        rest = _objectWithoutPropertiesLoose(_ref6, _excluded4);\n\n    var _ref7 = _temp6 === void 0 ? {} : _temp6,\n        _ref7$suppressRefErro = _ref7.suppressRefError,\n        suppressRefError = _ref7$suppressRefErro === void 0 ? false : _ref7$suppressRefErro;\n\n    setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef);\n    var latestState = latest.current.state;\n\n    var inputHandleKeyDown = function inputHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && inputKeyDownHandlers[key]) {\n        inputKeyDownHandlers[key](event);\n      }\n    };\n\n    var inputHandleChange = function inputHandleChange(event) {\n      dispatch({\n        type: InputChange,\n        inputValue: event.target.value\n      });\n    };\n\n    var inputHandleBlur = function inputHandleBlur() {\n      /* istanbul ignore else */\n      if (latestState.isOpen && !mouseAndTouchTrackersRef.current.isMouseDown) {\n        dispatch({\n          type: InputBlur,\n          selectItem: true\n        });\n      }\n    };\n    /* istanbul ignore next (preact) */\n\n\n    var onChangeKey = 'onChange';\n    var eventHandlers = {};\n\n    if (!rest.disabled) {\n      var _eventHandlers;\n\n      eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, inputHandleBlur), _eventHandlers);\n    }\n\n    return _extends((_extends5 = {}, _extends5[refKey] = handleRefs(ref, function (inputNode) {\n      inputRef.current = inputNode;\n    }), _extends5.id = elementIds.inputId, _extends5['aria-autocomplete'] = 'list', _extends5['aria-controls'] = elementIds.menuId, _extends5), latestState.isOpen && latestState.highlightedIndex > -1 && {\n      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n    }, {\n      'aria-labelledby': elementIds.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: latestState.inputValue\n    }, eventHandlers, rest);\n  }, [dispatch, inputKeyDownHandlers, latest, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds]);\n  var getComboboxProps = useCallback(function (_temp7, _temp8) {\n    var _extends6;\n\n    var _ref8 = _temp7 === void 0 ? {} : _temp7,\n        _ref8$refKey = _ref8.refKey,\n        refKey = _ref8$refKey === void 0 ? 'ref' : _ref8$refKey,\n        ref = _ref8.ref,\n        rest = _objectWithoutPropertiesLoose(_ref8, _excluded5);\n\n    var _ref9 = _temp8 === void 0 ? {} : _temp8,\n        _ref9$suppressRefErro = _ref9.suppressRefError,\n        suppressRefError = _ref9$suppressRefErro === void 0 ? false : _ref9$suppressRefErro;\n\n    setGetterPropCallInfo('getComboboxProps', suppressRefError, refKey, comboboxRef);\n    return _extends((_extends6 = {}, _extends6[refKey] = handleRefs(ref, function (comboboxNode) {\n      comboboxRef.current = comboboxNode;\n    }), _extends6.role = 'combobox', _extends6['aria-haspopup'] = 'listbox', _extends6['aria-owns'] = elementIds.menuId, _extends6['aria-expanded'] = latest.current.state.isOpen, _extends6), rest);\n  }, [latest, setGetterPropCallInfo, elementIds]); // returns\n\n  var toggleMenu = useCallback(function () {\n    dispatch({\n      type: FunctionToggleMenu\n    });\n  }, [dispatch]);\n  var closeMenu = useCallback(function () {\n    dispatch({\n      type: FunctionCloseMenu\n    });\n  }, [dispatch]);\n  var openMenu = useCallback(function () {\n    dispatch({\n      type: FunctionOpenMenu\n    });\n  }, [dispatch]);\n  var setHighlightedIndex = useCallback(function (newHighlightedIndex) {\n    dispatch({\n      type: FunctionSetHighlightedIndex,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  var selectItem = useCallback(function (newSelectedItem) {\n    dispatch({\n      type: FunctionSelectItem,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  var setInputValue = useCallback(function (newInputValue) {\n    dispatch({\n      type: FunctionSetInputValue,\n      inputValue: newInputValue\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset$1\n    });\n  }, [dispatch]);\n  return {\n    // prop getters.\n    getItemProps: getItemProps,\n    getLabelProps: getLabelProps,\n    getMenuProps: getMenuProps,\n    getInputProps: getInputProps,\n    getComboboxProps: getComboboxProps,\n    getToggleButtonProps: getToggleButtonProps,\n    // actions.\n    toggleMenu: toggleMenu,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    setHighlightedIndex: setHighlightedIndex,\n    setInputValue: setInputValue,\n    selectItem: selectItem,\n    reset: reset,\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nvar defaultStateValues = {\n  activeIndex: -1,\n  selectedItems: []\n};\n/**\n * Returns the initial value for a state key in the following order:\n * 1. controlled prop, 2. initial prop, 3. default prop, 4. default\n * value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\nfunction getInitialValue(props, propKey) {\n  return getInitialValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Returns the default value for a state key in the following order:\n * 1. controlled prop, 2. default prop, 3. default value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\n\nfunction getDefaultValue(props, propKey) {\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Gets the initial state based on the provided props. It uses initial, default\n * and controlled props related to state in order to compute the initial value.\n *\n * @param {Object} props Props passed to the hook.\n * @returns {Object} The initial state.\n */\n\n\nfunction getInitialState(props) {\n  var activeIndex = getInitialValue(props, 'activeIndex');\n  var selectedItems = getInitialValue(props, 'selectedItems');\n  return {\n    activeIndex: activeIndex,\n    selectedItems: selectedItems\n  };\n}\n/**\n * Returns true if dropdown keydown operation is permitted. Should not be\n * allowed on keydown with modifier keys (ctrl, alt, shift, meta), on\n * input element with text content that is either highlighted or selection\n * cursor is not at the starting position.\n *\n * @param {KeyboardEvent} event The event from keydown.\n * @returns {boolean} Whether the operation is allowed.\n */\n\n\nfunction isKeyDownOperationPermitted(event) {\n  if (event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n    return false;\n  }\n\n  var element = event.target;\n\n  if (element instanceof HTMLInputElement && // if element is a text input\n  element.value !== '' && (element.selectionStart !== 0 || element.selectionEnd !== 0)) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Returns a message to be added to aria-live region when item is removed.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11yRemovalMessage(selectionParameters) {\n  var removedSelectedItem = selectionParameters.removedSelectedItem,\n      itemToStringLocal = selectionParameters.itemToString;\n  return itemToStringLocal(removedSelectedItem) + \" has been removed.\";\n}\n\nvar propTypes = {\n  selectedItems: PropTypes.array,\n  initialSelectedItems: PropTypes.array,\n  defaultSelectedItems: PropTypes.array,\n  itemToString: PropTypes.func,\n  getA11yRemovalMessage: PropTypes.func,\n  stateReducer: PropTypes.func,\n  activeIndex: PropTypes.number,\n  initialActiveIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  onActiveIndexChange: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  keyNavigationNext: PropTypes.string,\n  keyNavigationPrevious: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\nvar defaultProps = {\n  itemToString: defaultProps$3.itemToString,\n  stateReducer: defaultProps$3.stateReducer,\n  environment: defaultProps$3.environment,\n  getA11yRemovalMessage: getA11yRemovalMessage,\n  keyNavigationNext: 'ArrowRight',\n  keyNavigationPrevious: 'ArrowLeft'\n}; // eslint-disable-next-line import/no-mutable-exports\n\nvar validatePropTypes = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = function validatePropTypes(options, caller) {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name);\n  };\n}\n\nvar SelectedItemClick = process.env.NODE_ENV !== \"production\" ? '__selected_item_click__' : 0;\nvar SelectedItemKeyDownDelete = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_delete__' : 1;\nvar SelectedItemKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_backspace__' : 2;\nvar SelectedItemKeyDownNavigationNext = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_next__' : 3;\nvar SelectedItemKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_previous__' : 4;\nvar DropdownKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_navigation_previous__' : 5;\nvar DropdownKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_backspace__' : 6;\nvar DropdownClick = process.env.NODE_ENV !== \"production\" ? '__dropdown_click__' : 7;\nvar FunctionAddSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_add_selected_item__' : 8;\nvar FunctionRemoveSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_remove_selected_item__' : 9;\nvar FunctionSetSelectedItems = process.env.NODE_ENV !== \"production\" ? '__function_set_selected_items__' : 10;\nvar FunctionSetActiveIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_active_index__' : 11;\nvar FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 12;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  SelectedItemClick: SelectedItemClick,\n  SelectedItemKeyDownDelete: SelectedItemKeyDownDelete,\n  SelectedItemKeyDownBackspace: SelectedItemKeyDownBackspace,\n  SelectedItemKeyDownNavigationNext: SelectedItemKeyDownNavigationNext,\n  SelectedItemKeyDownNavigationPrevious: SelectedItemKeyDownNavigationPrevious,\n  DropdownKeyDownNavigationPrevious: DropdownKeyDownNavigationPrevious,\n  DropdownKeyDownBackspace: DropdownKeyDownBackspace,\n  DropdownClick: DropdownClick,\n  FunctionAddSelectedItem: FunctionAddSelectedItem,\n  FunctionRemoveSelectedItem: FunctionRemoveSelectedItem,\n  FunctionSetSelectedItems: FunctionSetSelectedItems,\n  FunctionSetActiveIndex: FunctionSetActiveIndex,\n  FunctionReset: FunctionReset\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftMultipleSelectionReducer(state, action) {\n  var type = action.type,\n      index = action.index,\n      props = action.props,\n      selectedItem = action.selectedItem;\n  var activeIndex = state.activeIndex,\n      selectedItems = state.selectedItems;\n  var changes;\n\n  switch (type) {\n    case SelectedItemClick:\n      changes = {\n        activeIndex: index\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: activeIndex - 1 < 0 ? 0 : activeIndex - 1\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationNext:\n      changes = {\n        activeIndex: activeIndex + 1 >= selectedItems.length ? -1 : activeIndex + 1\n      };\n      break;\n\n    case SelectedItemKeyDownBackspace:\n    case SelectedItemKeyDownDelete:\n      {\n        var newActiveIndex = activeIndex;\n\n        if (selectedItems.length === 1) {\n          newActiveIndex = -1;\n        } else if (activeIndex === selectedItems.length - 1) {\n          newActiveIndex = selectedItems.length - 2;\n        }\n\n        changes = _extends({\n          selectedItems: [].concat(selectedItems.slice(0, activeIndex), selectedItems.slice(activeIndex + 1))\n        }, {\n          activeIndex: newActiveIndex\n        });\n        break;\n      }\n\n    case DropdownKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: selectedItems.length - 1\n      };\n      break;\n\n    case DropdownKeyDownBackspace:\n      changes = {\n        selectedItems: selectedItems.slice(0, selectedItems.length - 1)\n      };\n      break;\n\n    case FunctionAddSelectedItem:\n      changes = {\n        selectedItems: [].concat(selectedItems, [selectedItem])\n      };\n      break;\n\n    case DropdownClick:\n      changes = {\n        activeIndex: -1\n      };\n      break;\n\n    case FunctionRemoveSelectedItem:\n      {\n        var _newActiveIndex = activeIndex;\n        var selectedItemIndex = selectedItems.indexOf(selectedItem);\n\n        if (selectedItems.length === 1) {\n          _newActiveIndex = -1;\n        } else if (selectedItemIndex === selectedItems.length - 1) {\n          _newActiveIndex = selectedItems.length - 2;\n        }\n\n        changes = _extends({\n          selectedItems: [].concat(selectedItems.slice(0, selectedItemIndex), selectedItems.slice(selectedItemIndex + 1))\n        }, {\n          activeIndex: _newActiveIndex\n        });\n        break;\n      }\n\n    case FunctionSetSelectedItems:\n      {\n        var newSelectedItems = action.selectedItems;\n        changes = {\n          selectedItems: newSelectedItems\n        };\n        break;\n      }\n\n    case FunctionSetActiveIndex:\n      {\n        var _newActiveIndex2 = action.activeIndex;\n        changes = {\n          activeIndex: _newActiveIndex2\n        };\n        break;\n      }\n\n    case FunctionReset:\n      changes = {\n        activeIndex: getDefaultValue(props, 'activeIndex'),\n        selectedItems: getDefaultValue(props, 'selectedItems')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, changes);\n}\n\nvar _excluded = [\"refKey\", \"ref\", \"onClick\", \"onKeyDown\", \"selectedItem\", \"index\"],\n    _excluded2 = [\"refKey\", \"ref\", \"onKeyDown\", \"onClick\", \"preventKeyAction\"];\nuseMultipleSelection.stateChangeTypes = stateChangeTypes;\n\nfunction useMultipleSelection(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes(userProps, useMultipleSelection); // Props defaults and destructuring.\n\n  var props = _extends({}, defaultProps, userProps);\n\n  var getA11yRemovalMessage = props.getA11yRemovalMessage,\n      itemToString = props.itemToString,\n      environment = props.environment,\n      keyNavigationNext = props.keyNavigationNext,\n      keyNavigationPrevious = props.keyNavigationPrevious; // Reducer init.\n\n  var _useControlledReducer = useControlledReducer$1(downshiftMultipleSelectionReducer, getInitialState(props), props),\n      state = _useControlledReducer[0],\n      dispatch = _useControlledReducer[1];\n\n  var activeIndex = state.activeIndex,\n      selectedItems = state.selectedItems; // Refs.\n\n  var isInitialMountRef = useRef(true);\n  var dropdownRef = useRef(null);\n  var previousSelectedItemsRef = useRef(selectedItems);\n  var selectedItemRefs = useRef();\n  selectedItemRefs.current = [];\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  }); // Effects.\n\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (selectedItems.length < previousSelectedItemsRef.current.length) {\n      var removedSelectedItem = previousSelectedItemsRef.current.find(function (item) {\n        return selectedItems.indexOf(item) < 0;\n      });\n      setStatus(getA11yRemovalMessage({\n        itemToString: itemToString,\n        resultCount: selectedItems.length,\n        removedSelectedItem: removedSelectedItem,\n        activeIndex: activeIndex,\n        activeSelectedItem: selectedItems[activeIndex]\n      }), environment.document);\n    }\n\n    previousSelectedItemsRef.current = selectedItems; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItems.length]); // Sets focus on active item.\n\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (activeIndex === -1 && dropdownRef.current) {\n      dropdownRef.current.focus();\n    } else if (selectedItemRefs.current[activeIndex]) {\n      selectedItemRefs.current[activeIndex].focus();\n    }\n  }, [activeIndex]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getDropdownProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Event handler functions.\n\n  var selectedItemKeyDownHandlers = useMemo(function () {\n    var _ref;\n\n    return _ref = {}, _ref[keyNavigationPrevious] = function () {\n      dispatch({\n        type: SelectedItemKeyDownNavigationPrevious\n      });\n    }, _ref[keyNavigationNext] = function () {\n      dispatch({\n        type: SelectedItemKeyDownNavigationNext\n      });\n    }, _ref.Delete = function Delete() {\n      dispatch({\n        type: SelectedItemKeyDownDelete\n      });\n    }, _ref.Backspace = function Backspace() {\n      dispatch({\n        type: SelectedItemKeyDownBackspace\n      });\n    }, _ref;\n  }, [dispatch, keyNavigationNext, keyNavigationPrevious]);\n  var dropdownKeyDownHandlers = useMemo(function () {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[keyNavigationPrevious] = function (event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownNavigationPrevious\n        });\n      }\n    }, _ref2.Backspace = function Backspace(event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownBackspace\n        });\n      }\n    }, _ref2;\n  }, [dispatch, keyNavigationPrevious]); // Getter props.\n\n  var getSelectedItemProps = useCallback(function (_temp) {\n    var _extends2;\n\n    var _ref3 = _temp === void 0 ? {} : _temp,\n        _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n        ref = _ref3.ref,\n        onClick = _ref3.onClick,\n        onKeyDown = _ref3.onKeyDown,\n        selectedItem = _ref3.selectedItem,\n        index = _ref3.index,\n        rest = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n    var latestState = latest.current.state;\n    var itemIndex = getItemIndex(index, selectedItem, latestState.selectedItems);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either selectedItem or index in getSelectedItemProps!');\n    }\n\n    var selectedItemHandleClick = function selectedItemHandleClick() {\n      dispatch({\n        type: SelectedItemClick,\n        index: index\n      });\n    };\n\n    var selectedItemHandleKeyDown = function selectedItemHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && selectedItemKeyDownHandlers[key]) {\n        selectedItemKeyDownHandlers[key](event);\n      }\n    };\n\n    return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (selectedItemNode) {\n      if (selectedItemNode) {\n        selectedItemRefs.current.push(selectedItemNode);\n      }\n    }), _extends2.tabIndex = index === latestState.activeIndex ? 0 : -1, _extends2.onClick = callAllEventHandlers(onClick, selectedItemHandleClick), _extends2.onKeyDown = callAllEventHandlers(onKeyDown, selectedItemHandleKeyDown), _extends2), rest);\n  }, [dispatch, latest, selectedItemKeyDownHandlers]);\n  var getDropdownProps = useCallback(function (_temp2, _temp3) {\n    var _extends3;\n\n    var _ref4 = _temp2 === void 0 ? {} : _temp2,\n        _ref4$refKey = _ref4.refKey,\n        refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n        ref = _ref4.ref,\n        onKeyDown = _ref4.onKeyDown,\n        onClick = _ref4.onClick,\n        _ref4$preventKeyActio = _ref4.preventKeyAction,\n        preventKeyAction = _ref4$preventKeyActio === void 0 ? false : _ref4$preventKeyActio,\n        rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);\n\n    var _ref5 = _temp3 === void 0 ? {} : _temp3,\n        _ref5$suppressRefErro = _ref5.suppressRefError,\n        suppressRefError = _ref5$suppressRefErro === void 0 ? false : _ref5$suppressRefErro;\n\n    setGetterPropCallInfo('getDropdownProps', suppressRefError, refKey, dropdownRef);\n\n    var dropdownHandleKeyDown = function dropdownHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && dropdownKeyDownHandlers[key]) {\n        dropdownKeyDownHandlers[key](event);\n      }\n    };\n\n    var dropdownHandleClick = function dropdownHandleClick() {\n      dispatch({\n        type: DropdownClick\n      });\n    };\n\n    return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (dropdownNode) {\n      if (dropdownNode) {\n        dropdownRef.current = dropdownNode;\n      }\n    }), _extends3), !preventKeyAction && {\n      onKeyDown: callAllEventHandlers(onKeyDown, dropdownHandleKeyDown),\n      onClick: callAllEventHandlers(onClick, dropdownHandleClick)\n    }, rest);\n  }, [dispatch, dropdownKeyDownHandlers, setGetterPropCallInfo]); // returns\n\n  var addSelectedItem = useCallback(function (selectedItem) {\n    dispatch({\n      type: FunctionAddSelectedItem,\n      selectedItem: selectedItem\n    });\n  }, [dispatch]);\n  var removeSelectedItem = useCallback(function (selectedItem) {\n    dispatch({\n      type: FunctionRemoveSelectedItem,\n      selectedItem: selectedItem\n    });\n  }, [dispatch]);\n  var setSelectedItems = useCallback(function (newSelectedItems) {\n    dispatch({\n      type: FunctionSetSelectedItems,\n      selectedItems: newSelectedItems\n    });\n  }, [dispatch]);\n  var setActiveIndex = useCallback(function (newActiveIndex) {\n    dispatch({\n      type: FunctionSetActiveIndex,\n      activeIndex: newActiveIndex\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset\n    });\n  }, [dispatch]);\n  return {\n    getSelectedItemProps: getSelectedItemProps,\n    getDropdownProps: getDropdownProps,\n    addSelectedItem: addSelectedItem,\n    removeSelectedItem: removeSelectedItem,\n    setSelectedItems: setSelectedItems,\n    setActiveIndex: setActiveIndex,\n    reset: reset,\n    selectedItems: selectedItems,\n    activeIndex: activeIndex\n  };\n}\n\nexport { Downshift$1 as default, resetIdCounter, useCombobox, useMultipleSelection, useSelect };\n","import { useId } from '../core';\n\nexport function useComboboxInputId(idProp?: string) {\n\tconst autoId = useId();\n\treturn idProp || `combobox-input-${autoId}`;\n}\n\nexport type DefaultComboboxOption = { label: string; value: string };\n\nexport function filterOptions<Option extends DefaultComboboxOption>(\n\toptions: Option[],\n\tinputValue: string\n) {\n\tinputValue = inputValue.toLowerCase();\n\treturn options.filter(\n\t\t({ value, label }) =>\n\t\t\tvalue.toLowerCase().includes(inputValue) ||\n\t\t\tlabel.toLowerCase().includes(inputValue)\n\t);\n}\n\nexport function splitLabel(label: string, inputValue: string) {\n\tif (!inputValue) return [label];\n\treturn label.split(new RegExp(`(${inputValue})`, 'gi')).filter(Boolean);\n}\n","import { forwardRef, PropsWithChildren } from 'react';\nimport { Box } from '../../box';\n\nexport type ComboboxListProps = PropsWithChildren<{\n\tisOpen: boolean;\n}>;\n\nexport const ComboboxList = forwardRef<HTMLUListElement, ComboboxListProps>(\n\tfunction ComboboxList({ children, isOpen, ...props }, ref) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tref={ref}\n\t\t\t\tas=\"ul\"\n\t\t\t\tbackground=\"body\"\n\t\t\t\tborder\n\t\t\t\tborderColor=\"muted\"\n\t\t\t\trounded\n\t\t\t\t{...props}\n\t\t\t\tcss={{\n\t\t\t\t\topacity: isOpen ? 1 : 0,\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflowY: 'scroll',\n\t\t\t\t\tmaxHeight: 295,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Box>\n\t\t);\n\t}\n);\n","import { forwardRef, HTMLAttributes } from 'react';\nimport { Box } from '../../box';\nimport { boxPalette } from '../../core';\n\ntype ComboboxListItemProps = Omit<HTMLAttributes<HTMLLIElement>, 'color'> & {\n\tisActiveItem: boolean;\n\tisInteractive: boolean;\n};\n\nexport const ComboboxListItem = forwardRef<\n\tHTMLLIElement,\n\tComboboxListItemProps\n>(function ComboboxListItem(\n\t{ children, isActiveItem, isInteractive = true, ...props },\n\tref\n) {\n\treturn (\n\t\t<Box\n\t\t\tref={ref}\n\t\t\tas=\"li\"\n\t\t\tbackground={isActiveItem ? 'shade' : undefined}\n\t\t\tpaddingX={1}\n\t\t\tpaddingY={0.75}\n\t\t\tborderBottom\n\t\t\tborderColor=\"muted\"\n\t\t\tcss={{\n\t\t\t\tcursor: isInteractive ? 'pointer' : undefined,\n\t\t\t\t'&:hover': {\n\t\t\t\t\tbackgroundColor: isInteractive\n\t\t\t\t\t\t? boxPalette.backgroundShade\n\t\t\t\t\t\t: undefined,\n\t\t\t\t},\n\t\t\t\t'&:last-of-type': { borderBottom: 'none' },\n\t\t\t}}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Box>\n\t);\n});\n","import { Flex } from '../../box';\nimport { LoadingDots } from '../../loading';\nimport { Text } from '../../text';\nimport { ComboboxListItem } from './ComboboxListItem';\n\nexport function ComboboxListLoading() {\n\treturn (\n\t\t<ComboboxListItem isActiveItem={false} isInteractive={false}>\n\t\t\t<Flex gap={1} alignItems=\"center\">\n\t\t\t\t<LoadingDots size=\"sm\" aria-label=\"Loading\" />\n\t\t\t\t<Text>Loading</Text>\n\t\t\t</Flex>\n\t\t</ComboboxListItem>\n\t);\n}\n","import { Flex } from '../../box';\nimport { AlertFilledIcon } from '../../icon';\nimport { Text } from '../../text';\nimport { ComboboxListItem } from './ComboboxListItem';\n\nexport function ComboboxListError() {\n\treturn (\n\t\t<ComboboxListItem isActiveItem={false} isInteractive={false}>\n\t\t\t<Flex alignItems=\"center\" gap={0.5}>\n\t\t\t\t<AlertFilledIcon color=\"error\" css={{ flexShrink: 0 }} />\n\t\t\t\t<Text>Something went wrong.</Text>\n\t\t\t</Flex>\n\t\t</ComboboxListItem>\n\t);\n}\n","import { Text } from '../../text';\nimport { ComboboxListItem } from './ComboboxListItem';\n\nexport type ComboboxListEmptyResultsProps = { message: string };\n\nexport function ComboboxListEmptyResults({\n\tmessage,\n}: ComboboxListEmptyResultsProps) {\n\treturn (\n\t\t<ComboboxListItem isActiveItem={false} isInteractive={false}>\n\t\t\t<Text>{message}</Text>\n\t\t</ComboboxListItem>\n\t);\n}\n","import { ButtonHTMLAttributes, ComponentType, forwardRef } from 'react';\nimport { IconProps, CloseIcon, ChevronDownIcon } from '../../icon';\nimport { BaseButton } from '../../button';\nimport { boxPalette, mapSpacing, tokens } from '../../core';\nimport { focusStyles } from '../../box';\n\nexport const ComboboxClearButton = forwardRef<\n\tHTMLButtonElement,\n\tButtonHTMLAttributes<HTMLButtonElement>\n>(function ComboboxClearButton(props, ref) {\n\treturn (\n\t\t<ComboboxIconButton\n\t\t\tref={ref}\n\t\t\taria-label=\"Clear input\"\n\t\t\ticon={CloseIcon}\n\t\t\t{...props}\n\t\t/>\n\t);\n});\n\nexport const ComboboxDropdownTrigger = forwardRef<\n\tHTMLButtonElement,\n\tButtonHTMLAttributes<HTMLButtonElement>\n>(function ComboboxDropdownTrigger(props, ref) {\n\treturn (\n\t\t<ComboboxIconButton\n\t\t\tref={ref}\n\t\t\taria-label=\"Toggle menu\"\n\t\t\ticon={ChevronDownIcon}\n\t\t\t{...props}\n\t\t/>\n\t);\n});\n\ntype IconButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n\ticon: ComponentType<IconProps>;\n};\n\nconst ComboboxIconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n\tfunction ComboboxIconButton({ disabled, icon: Icon, ...props }, ref) {\n\t\treturn (\n\t\t\t<BaseButton\n\t\t\t\tref={ref}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tcss={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\twidth: '2rem',\n\t\t\t\t\theight: '2rem',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '50%',\n\t\t\t\t\tright: `calc(${mapSpacing(0.5)} + ${tokens.borderWidth.lg}px)`, // Align from the inner border\n\t\t\t\t\ttransform: 'translateY(-50%)',\n\t\t\t\t\topacity: disabled ? 0.3 : undefined,\n\t\t\t\t\tcolor: boxPalette.foregroundAction,\n\t\t\t\t\t'&:hover': { color: boxPalette.foregroundText },\n\t\t\t\t\t...focusStyles,\n\t\t\t\t}}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<Icon size=\"sm\" weight=\"bold\" color=\"inherit\" />\n\t\t\t</BaseButton>\n\t\t);\n\t}\n);\n","import { Fragment, ReactNode, useState } from 'react';\nimport { UseComboboxReturnValue } from 'downshift';\nimport { usePopper } from 'react-popper';\nimport { FieldMaxWidth, mapSpacing, mergeRefs } from '../../core';\nimport { textInputStyles } from '../../text-input';\nimport { Field } from '../../field';\nimport { Text } from '../../text';\nimport { DefaultComboboxOption, splitLabel } from '../utils';\nimport { ComboboxList } from './ComboboxList';\nimport { ComboboxListItem } from './ComboboxListItem';\nimport { ComboboxListLoading } from './ComboboxListLoading';\nimport { ComboboxListError } from './ComboboxListError';\nimport { ComboboxListEmptyResults } from './ComboboxListEmptyResults';\nimport {\n\tComboboxDropdownTrigger,\n\tComboboxClearButton,\n} from './ComboboxButtons';\n\nexport type CommonComboboxProps<Option extends DefaultComboboxOption> = {\n\t/** Describes the purpose of the field. */\n\tlabel: string;\n\t/** If true, \"(optional)\" will never be appended to the label. */\n\thideOptionalLabel?: boolean;\n\t/** If false, \"(optional)\" will be appended to the label. */\n\trequired?: boolean;\n\t/** Provides extra information about the field. */\n\thint?: string;\n\t/** Message to show when the field is invalid. */\n\tmessage?: string;\n\t/** If true, the invalid state will be rendered. */\n\tinvalid?: boolean;\n\t/** If true, the field will stretch to the fill the width of its container. */\n\tblock?: boolean;\n\t/** The maximum width of the field. */\n\tmaxWidth?: Extract<FieldMaxWidth, 'md' | 'lg' | 'xl'>;\n\t/** If true, the field will not be interactive. */\n\tdisabled?: boolean;\n\t/** Defines an identifier (ID) which must be unique. */\n\tid?: string;\n\t/** A string specifying a name for the input control. */\n\tname?: string;\n\t/** If true, the dropdown trigger will be rendered. */\n\tshowDropdownTrigger?: boolean;\n\t/** If true, the selected item can be cleared. Only available when `showDropdownTrigger` is false. */\n\tclearable?: boolean;\n\t/** Function to be fired following a change event. */\n\tonChange?: (value: Option | null) => void;\n\t/** The value of the field. */\n\tvalue?: Option | null;\n\t/** Used to override the default item rendering.  */\n\trenderItem?: (item: Option, inputValue: string) => ReactNode;\n\t/** Message to display when no options match the users search term. */\n\temptyResultsMessage?: string;\n};\n\ntype ComboboxBaseProps<Option extends DefaultComboboxOption> =\n\tCommonComboboxProps<Option> & {\n\t\tinputId: string;\n\t\tinputItems?: Option[];\n\t\tloading?: boolean;\n\t\tnetworkError?: boolean;\n\t\tdownshift: UseComboboxReturnValue<Option>;\n\t};\n\nexport function ComboboxBase<Option extends DefaultComboboxOption>({\n\tlabel,\n\thideOptionalLabel,\n\trequired,\n\thint,\n\tmessage,\n\tinvalid,\n\tinputId,\n\tdisabled,\n\tblock,\n\tmaxWidth: maxWidthProp = 'xl',\n\tshowDropdownTrigger = true,\n\tclearable = false,\n\trenderItem = defaultRenderItem,\n\temptyResultsMessage = 'No options found.',\n\tloading,\n\tnetworkError,\n\tdownshift,\n\tinputItems,\n}: ComboboxBaseProps<Option>) {\n\t// Popper state\n\tconst [refEl, setRefEl] = useState<HTMLDivElement | null>(null);\n\tconst [popperEl, setPopperEl] = useState<HTMLDivElement | null>(null);\n\tconst { styles, attributes } = usePopper(refEl, popperEl, {\n\t\tplacement: 'bottom-start',\n\t\tmodifiers: [{ name: 'offset', options: { offset: [0, 8] } }],\n\t});\n\n\tconst { maxWidth, ...inputStyles } = {\n\t\t...textInputStyles({ block, maxWidth: maxWidthProp, invalid }),\n\t\tpaddingRight: mapSpacing(3),\n\t};\n\n\tconst { ref: comboboxRef, ...comboboxProps } = downshift.getComboboxProps();\n\n\treturn (\n\t\t<Field\n\t\t\tlabel={label}\n\t\t\thideOptionalLabel={hideOptionalLabel}\n\t\t\trequired={Boolean(required)}\n\t\t\thint={hint}\n\t\t\tmessage={message}\n\t\t\tinvalid={invalid}\n\t\t\tid={inputId}\n\t\t>\n\t\t\t{(a11yProps) => (\n\t\t\t\t<div\n\t\t\t\t\tcss={{ position: 'relative', maxWidth }}\n\t\t\t\t\tref={mergeRefs([setRefEl, comboboxRef])}\n\t\t\t\t\t{...comboboxProps}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tcss={{ ...inputStyles, width: '100%' }}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t{...a11yProps}\n\t\t\t\t\t\t{...downshift.getInputProps({ type: 'text' })}\n\t\t\t\t\t/>\n\t\t\t\t\t{showDropdownTrigger && (\n\t\t\t\t\t\t<ComboboxDropdownTrigger\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t{...downshift.getToggleButtonProps()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{!showDropdownTrigger && clearable && downshift.selectedItem && (\n\t\t\t\t\t\t<ComboboxClearButton\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tonClick={downshift.reset}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={setPopperEl}\n\t\t\t\t\t\tstyle={styles.popper}\n\t\t\t\t\t\t{...attributes.popper}\n\t\t\t\t\t\tcss={{ maxWidth, zIndex: 1, width: '100%' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ComboboxList\n\t\t\t\t\t\t\t{...downshift.getMenuProps()}\n\t\t\t\t\t\t\tisOpen={downshift.isOpen}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{downshift.isOpen && (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t\t\t<ComboboxListLoading />\n\t\t\t\t\t\t\t\t\t) : networkError ? (\n\t\t\t\t\t\t\t\t\t\t<ComboboxListError />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{inputItems?.length ? (\n\t\t\t\t\t\t\t\t\t\t\t\tinputItems.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isActiveItem =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdownshift.highlightedIndex === index;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComboboxListItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`${item.value}${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisActiveItem={isActiveItem}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisInteractive={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...downshift.getItemProps({ item, index })}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderItem(item, downshift.inputValue)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ComboboxListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<ComboboxListEmptyResults\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={emptyResultsMessage}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ComboboxList>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Field>\n\t);\n}\n\nexport function defaultRenderItem<Option extends DefaultComboboxOption>(\n\titem: Option,\n\tinputValue: string\n) {\n\treturn splitLabel(item.label, inputValue).map((part, index) => {\n\t\tconst isHighlighted = part.toLowerCase() === inputValue.toLowerCase();\n\t\tif (isHighlighted) {\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tkey={index}\n\t\t\t\t\tas=\"mark\"\n\t\t\t\t\tcolor=\"action\"\n\t\t\t\t\tfontWeight=\"bold\"\n\t\t\t\t\tcss={{ background: 'none' }}\n\t\t\t\t>\n\t\t\t\t\t{part}\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Text key={index} as=\"span\" color=\"action\">\n\t\t\t\t{part}\n\t\t\t</Text>\n\t\t);\n\t});\n}\n","import { useState } from 'react';\nimport { useCombobox } from 'downshift';\nimport { ComboboxBase, CommonComboboxProps } from './ComboboxBase/ComboboxBase';\nimport {\n\tDefaultComboboxOption,\n\tfilterOptions,\n\tuseComboboxInputId,\n} from './utils';\n\nexport type ComboboxProps<Option extends DefaultComboboxOption> = Omit<\n\tCommonComboboxProps<Option>,\n\t'showDropdownTrigger' | 'clearable'\n> & {\n\t/** The list of options to show in the dropdown. */\n\toptions: Option[];\n};\n\nexport function Combobox<Option extends DefaultComboboxOption>(\n\tprops: ComboboxProps<Option>\n) {\n\tconst inputId = useComboboxInputId(props.id);\n\tconst [inputItems, setInputItems] = useState<Option[]>(props.options);\n\n\tconst downshift = useCombobox<Option>({\n\t\tselectedItem: props.value,\n\t\tinputId,\n\t\titems: inputItems ?? [],\n\t\titemToString: (item) => item?.label ?? '',\n\t\tonSelectedItemChange: ({ selectedItem = null }) => {\n\t\t\tprops.onChange?.(selectedItem);\n\t\t},\n\t\tonInputValueChange: ({ inputValue }) => {\n\t\t\tinputValue = inputValue?.toLowerCase() ?? '';\n\t\t\tsetInputItems(filterOptions(props.options, inputValue));\n\t\t},\n\t\t// When the menu is opened by the user, show the entire options list\n\t\t// This is common in other Combobox implementations (react-aria, react-select, etc)\n\t\tonIsOpenChange: ({ isOpen }) => {\n\t\t\tif (isOpen) setInputItems(filterOptions(props.options, ''));\n\t\t},\n\t\tstateReducer: (state, actionAndChanges) => {\n\t\t\tconst { type: actionAndChangesType, changes } = actionAndChanges;\n\t\t\tswitch (actionAndChangesType) {\n\t\t\t\t// Reset the input value when the menu is closed\n\t\t\t\tcase useCombobox.stateChangeTypes.InputBlur:\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...changes,\n\t\t\t\t\t\tinputValue: state.selectedItem?.label ?? '',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn changes;\n\t\t\t}\n\t\t},\n\t});\n\n\treturn (\n\t\t<ComboboxBase\n\t\t\tdownshift={downshift}\n\t\t\tinputItems={inputItems}\n\t\t\tinputId={inputId}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n","import{useRef as r,useEffect as n,useMemo as t,useCallback as u,useState as e}from\"react\";function c(u,e,c){var i=this,a=r(null),o=r(0),f=r(null),l=r([]),m=r(),v=r(),d=r(u),p=r(!0);n(function(){d.current=u},[u]);var g=!e&&0!==e&&\"undefined\"!=typeof window;if(\"function\"!=typeof u)throw new TypeError(\"Expected a function\");e=+e||0;var w=!!(c=c||{}).leading,s=!(\"trailing\"in c)||!!c.trailing,x=\"maxWait\"in c,y=x?Math.max(+c.maxWait||0,e):null;n(function(){return p.current=!0,function(){p.current=!1}},[]);var h=t(function(){var r=function(r){var n=l.current,t=m.current;return l.current=m.current=null,o.current=r,v.current=d.current.apply(t,n)},n=function(r,n){g&&cancelAnimationFrame(f.current),f.current=g?requestAnimationFrame(r):setTimeout(r,n)},t=function(r){if(!p.current)return!1;var n=r-a.current;return!a.current||n>=e||n<0||x&&r-o.current>=y},u=function(n){return f.current=null,s&&l.current?r(n):(l.current=m.current=null,v.current)},c=function r(){var c=Date.now();if(t(c))return u(c);if(p.current){var i=e-(c-a.current),f=x?Math.min(i,y-(c-o.current)):i;n(r,f)}},h=function(){var u=Date.now(),d=t(u);if(l.current=[].slice.call(arguments),m.current=i,a.current=u,d){if(!f.current&&p.current)return o.current=a.current,n(c,e),w?r(a.current):v.current;if(x)return n(c,e),r(a.current)}return f.current||n(c,e),v.current};return h.cancel=function(){f.current&&(g?cancelAnimationFrame(f.current):clearTimeout(f.current)),o.current=0,l.current=a.current=m.current=f.current=null},h.isPending=function(){return!!f.current},h.flush=function(){return f.current?u(Date.now()):v.current},h},[w,x,e,y,s,g]);return h}function i(r,n){return r===n}function a(r){return\"function\"==typeof r?function(){return r}:r}function o(n,t,o){var f,l,m=o&&o.equalityFn||i,v=(f=e(a(n)),l=f[1],[f[0],u(function(r){return l(a(r))},[])]),d=v[0],p=v[1],g=c(u(function(r){return p(r)},[p]),t,o),w=r(n);return m(w.current,n)||(g(n),w.current=n),[d,g]}function f(r,n,t){var u=void 0===t?{}:t,e=u.leading,i=u.trailing;return c(r,n,{maxWait:n,leading:void 0===e||e,trailing:void 0===i||i})}export{o as useDebounce,c as useDebouncedCallback,f as useThrottledCallback};\n//# sourceMappingURL=index.module.js.map\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useDebounce } from 'use-debounce';\nimport { useCombobox } from 'downshift';\nimport { ComboboxBase, CommonComboboxProps } from './ComboboxBase';\nimport {\n\tDefaultComboboxOption,\n\tfilterOptions,\n\tuseComboboxInputId,\n} from './utils';\n\nexport type ComboboxAsyncProps<Option extends DefaultComboboxOption> =\n\tCommonComboboxProps<Option> & {\n\t\t/** Function to be used when options need to be loaded over the network. */\n\t\tloadOptions: (inputValue: string) => Promise<Option[]>;\n\t};\n\nexport function ComboboxAsync<Option extends DefaultComboboxOption>({\n\tloadOptions: loadOptionsProp,\n\tshowDropdownTrigger = true,\n\t...props\n}: ComboboxAsyncProps<Option>) {\n\tconst inputId = useComboboxInputId(props.id);\n\n\tconst [state, setState] = useState<{\n\t\tinputItems: Option[] | undefined;\n\t\tloading: boolean;\n\t\tnetworkError: boolean;\n\t}>({\n\t\tinputItems: undefined,\n\t\tloading: false,\n\t\tnetworkError: false,\n\t});\n\n\tconst isInputDirty = useRef(false);\n\n\tconst downshift = useCombobox<Option>({\n\t\tselectedItem: props.value,\n\t\tinputId,\n\t\titems: state.inputItems ?? [],\n\t\titemToString: (item) => item?.label ?? '',\n\t\tonSelectedItemChange: ({ selectedItem = null }) => {\n\t\t\tprops.onChange?.(selectedItem);\n\t\t},\n\t\tonInputValueChange: () => {\n\t\t\tisInputDirty.current = true;\n\t\t},\n\t\tstateReducer: (state, actionAndChanges) => {\n\t\t\tconst { type: actionAndChangesType, changes } = actionAndChanges;\n\t\t\tswitch (actionAndChangesType) {\n\t\t\t\t// Reset the input value when the menu is closed\n\t\t\t\tcase useCombobox.stateChangeTypes.InputBlur:\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...changes,\n\t\t\t\t\t\tinputValue: state.selectedItem?.label ?? '',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn changes;\n\t\t\t}\n\t\t},\n\t});\n\n\t// Keep track of the debounced input value to prevent unnecessary network requests\n\tconst [debouncedInputValue] = useDebounce(downshift.inputValue, 300);\n\n\tconst shouldLoadOptions = useMemo(() => {\n\t\t// Do load options when...\n\t\tif (\n\t\t\t// User has just started typing, so this avoids the flicker of the empty state\n\t\t\t(!debouncedInputValue && downshift.inputValue) ||\n\t\t\t// User has manually triggered the dropdown menu open\n\t\t\t(showDropdownTrigger && downshift.isOpen && !downshift.selectedItem)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\t// Do NOT load options when...\n\t\tconst selectedItemLabel = downshift.selectedItem?.label;\n\t\tif (\n\t\t\t// Options are already being loaded\n\t\t\tstate.loading ||\n\t\t\t// Options have failed to load\n\t\t\tstate.networkError ||\n\t\t\t// Dropdown is closed\n\t\t\t!downshift.isOpen ||\n\t\t\t// If a selection has just been made, no not need to load options again\n\t\t\t(selectedItemLabel && selectedItemLabel === debouncedInputValue) ||\n\t\t\t// When there is no dropdown trigger (e.g. Autocomplete), only load the options if the user has interacted with the input\n\t\t\t(!showDropdownTrigger && !isInputDirty.current)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}, [\n\t\tdebouncedInputValue,\n\t\tdownshift.inputValue,\n\t\tdownshift.isOpen,\n\t\tdownshift.selectedItem,\n\t\tshowDropdownTrigger,\n\t\tstate.loading,\n\t\tstate.networkError,\n\t]);\n\n\t// Keep track of search terms/loaded options to prevent unnecessary network requests\n\tconst cache = useRef<Record<string, Option[]>>({});\n\n\tuseEffect(() => {\n\t\tasync function loadOptions(shouldLoadOptions: boolean) {\n\t\t\tif (!shouldLoadOptions) return;\n\t\t\t// sanitize the input value\n\t\t\tconst inputValue = debouncedInputValue?.toLowerCase() ?? '';\n\n\t\t\t// If there are cached options for the search term, use that\n\t\t\tconst cachedInputItems = cache.current[inputValue];\n\t\t\tif (cachedInputItems) {\n\t\t\t\tsetState({\n\t\t\t\t\tinputItems: cachedInputItems,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tnetworkError: false,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// No cached options found, so kick off the loading state\n\t\t\tsetState({ inputItems: undefined, loading: true, networkError: false });\n\t\t\ttry {\n\t\t\t\t// Load the options\n\t\t\t\tconst inputItems = await loadOptionsProp(inputValue);\n\t\t\t\tconst filteredInputItems = filterOptions(inputItems, inputValue);\n\t\t\t\t// Update the cache\n\t\t\t\tcache.current[inputValue] = filteredInputItems;\n\t\t\t\t// Update the UI\n\t\t\t\tsetState({\n\t\t\t\t\tinputItems: filteredInputItems,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tnetworkError: false,\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\t// An error occurred while loading options\n\t\t\t\tsetState({ inputItems: undefined, loading: false, networkError: true });\n\t\t\t}\n\t\t}\n\n\t\tloadOptions(shouldLoadOptions);\n\t}, [shouldLoadOptions, debouncedInputValue, loadOptionsProp]);\n\n\treturn (\n\t\t<ComboboxBase\n\t\t\tdownshift={downshift}\n\t\t\tinputId={inputId}\n\t\t\tloading={state.loading}\n\t\t\tnetworkError={state.networkError}\n\t\t\tinputItems={state.inputItems}\n\t\t\tshowDropdownTrigger={showDropdownTrigger}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","key","i","_extends","b","c","d","e","f","g","h","k","l","m","n","p","q","r","u","v","w","x","y","a","z","A","B","C","D","E","F","G","H","I","reactIs_production_min","module","require$$0","t","computeScrollIntoView","o","s","W","M","V","T","O","R","X","Y","L","S","j","J","K","N","P","idCounter","noop","scrollIntoView","node","menuNode","actions","_ref","el","top","left","isOrContainsNode","parent","child","environment","result","debounce","fn","time","timeoutId","cancel","wrapper","_len","args","_key","callAllEventHandlers","_len2","fns","_key2","event","_len3","_key3","handleRefs","_len4","refs","_key4","ref","generateId","getA11yStatusMessage$1","_ref2","isOpen","resultCount","previousResultCount","getState","state","props","prevState","isControlledProp","normalizeArrowKey","keyCode","getNextWrappingIndex","moveAmount","baseIndex","itemCount","getItemNodeFromIndex","circular","itemsLastIndex","newIndex","nonDisabledNewIndex","getNextNonDisabledIndex","currentElementNode","index","_index","targetWithinDownshift","downshiftElements","checkActiveElement","contextNode","cleanupStatus","documentProp","getStatusDiv","setStatus","status","div","statusDiv","_excluded$3","dropdownDefaultStateValues","callOnChangeProps","action","newState","type","changes","invokeOnChangeHandler","handler","capitalizeString","stateReducer","getA11ySelectionMessage","selectionParameters","selectedItem","itemToStringLocal","updateA11yStatus","getA11yMessage","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useElementIds","_ref$id","id","labelId","menuId","getItemId","toggleButtonId","inputId","elementIdsRef","useRef","getItemIndex","item","items","itemToString","string","useLatestRef","val","useEnhancedReducer","reducer","initialState","prevStateRef","actionRef","enhancedReducer","useCallback","_useReducer","useReducer","dispatch","propsRef","dispatchWithProps","defaultProps$3","getDefaultValue$1","propKey","defaultStateValues","defaultPropKey","getInitialValue$1","initialPropKey","getInitialState$2","highlightedIndex","inputValue","getHighlightedIndexOnOpen","offset","initialHighlightedIndex","defaultHighlightedIndex","useMouseAndTouchTracker","downshiftElementRefs","handleBlur","mouseAndTouchTrackersRef","onMouseDown","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","useGetterPropsCalledChecker","useA11yMessageSetter","dependencyArray","isInitialMount","rest","useScrollIntoView","_ref3","itemRefs","menuElement","scrollIntoViewProp","shouldScrollRef","useControlPropsValidator","downshiftCommonReducer","stateChangeTypes","PropTypes","getA11yStatusMessage","_a","__assign","InputKeyDownArrowDown","InputKeyDownArrowUp","InputKeyDownEscape","InputKeyDownHome","InputKeyDownEnd","InputKeyDownEnter","InputChange","InputBlur","MenuMouseLeave","ItemMouseMove","ItemClick","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSetHighlightedIndex","FunctionSelectItem","FunctionSetInputValue","FunctionReset$1","ControlledPropUpdatedSelectedItem","stateChangeTypes$1","getInitialState$1","useControlledReducer","previousSelectedItemRef","_useEnhancedReducer","defaultProps$1","downshiftUseComboboxReducer","shiftKey","_excluded$1","_excluded2$1","_excluded3","_excluded4","_excluded5","useCombobox","userProps","initialIsOpen","defaultIsOpen","_useControlledReducer","menuRef","inputRef","toggleButtonRef","comboboxRef","isInitialMountRef","elementIds","previousResultCountRef","latest","focusOnOpen","setGetterPropCallInfo","inputKeyDownHandlers","useMemo","latestState","getLabelProps","labelProps","getMenuProps","_temp","_temp2","_extends2","onMouseLeave","_ref$refKey","refKey","getItemProps","_temp3","_extends3","_ref4","_ref3$refKey","onMouseMove","onClick","_latest$current","latestProps","itemIndex","onSelectKey","customClickHandler","itemHandleMouseMove","itemHandleClick","itemNode","getToggleButtonProps","_temp4","_extends4","_ref5","_ref5$refKey","toggleButtonHandleClick","toggleButtonNode","getInputProps","_temp5","_temp6","_extends5","_ref6","onKeyDown","onChange","onInput","onBlur","_ref6$refKey","_ref7","inputHandleKeyDown","inputHandleChange","inputHandleBlur","onChangeKey","eventHandlers","_eventHandlers","inputNode","getComboboxProps","_temp7","_temp8","_extends6","_ref8","_ref8$refKey","_ref9","comboboxNode","toggleMenu","closeMenu","openMenu","setHighlightedIndex","newHighlightedIndex","selectItem","newSelectedItem","setInputValue","newInputValue","reset","getA11yRemovalMessage","removedSelectedItem","useComboboxInputId","idProp","autoId","useId","filterOptions","options","value","label","splitLabel","ComboboxList","forwardRef","children","jsx","Box","ComboboxListItem","isActiveItem","isInteractive","boxPalette","ComboboxListLoading","jsxs","Flex","LoadingDots","Text","ComboboxListError","AlertFilledIcon","ComboboxListEmptyResults","message","ComboboxClearButton","ComboboxIconButton","CloseIcon","ComboboxDropdownTrigger","ChevronDownIcon","disabled","Icon","BaseButton","mapSpacing","tokens","focusStyles","ComboboxBase","hideOptionalLabel","required","hint","invalid","block","maxWidthProp","showDropdownTrigger","clearable","renderItem","defaultRenderItem","emptyResultsMessage","loading","networkError","downshift","inputItems","refEl","setRefEl","useState","popperEl","setPopperEl","styles","attributes","usePopper","maxWidth","inputStyles","textInputStyles","comboboxProps","Field","a11yProps","mergeRefs","Fragment","part","Combobox","setInputItems","actionAndChanges","actionAndChangesType","ComboboxAsync","loadOptionsProp","setState","isInputDirty","state2","debouncedInputValue","useDebounce","shouldLoadOptions","selectedItemLabel","cache","loadOptions","shouldLoadOptions2","cachedInputItems","filteredInputItems"],"mappings":"6tBAAe,SAASA,GAA8BC,EAAQC,EAAU,CACtE,GAAID,GAAU,KAAM,MAAO,GAC3B,IAAIE,EAAS,CAAA,EACTC,EAAa,OAAO,KAAKH,CAAM,EAC/BI,EAAKC,EAET,IAAKA,EAAI,EAAGA,EAAIF,EAAW,OAAQE,IACjCD,EAAMD,EAAWE,CAAC,EACd,EAAAJ,EAAS,QAAQG,CAAG,GAAK,KAC7BF,EAAOE,CAAG,EAAIJ,EAAOI,CAAG,GAG1B,OAAOF,CACT,CCbe,SAASI,GAAW,CACjC,OAAAA,EAAW,OAAO,OAAS,OAAO,OAAO,KAAI,EAAK,SAAUJ,EAAQ,CAClE,QAASG,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIL,EAAS,UAAUK,CAAC,EAExB,QAASD,KAAOJ,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQI,CAAG,IAClDF,EAAOE,CAAG,EAAIJ,EAAOI,CAAG,GAK9B,OAAOF,CACX,EACSI,EAAS,MAAM,KAAM,SAAS,CACvC;;;;;;;GCPa,IAAIC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MAAMC,GAAE,MACnJ,GAAgB,OAAO,QAApB,YAA4B,OAAO,IAAI,CAAC,IAAIC,EAAE,OAAO,IAAIjB,GAAEiB,EAAE,eAAe,EAAEhB,GAAEgB,EAAE,cAAc,EAAEf,GAAEe,EAAE,gBAAgB,EAAEd,GAAEc,EAAE,mBAAmB,EAAEb,GAAEa,EAAE,gBAAgB,EAAEZ,GAAEY,EAAE,gBAAgB,EAAEX,GAAEW,EAAE,eAAe,EAAEV,GAAEU,EAAE,mBAAmB,EAAET,GAAES,EAAE,gBAAgB,EAAER,GAAEQ,EAAE,qBAAqB,EAAEP,GAAEO,EAAE,YAAY,EAAEN,GAAEM,EAAE,YAAY,EAAEL,GAAEK,EAAE,aAAa,EAAEJ,GAAEI,EAAE,oBAAoB,EAAEH,GAAEG,EAAE,mBAAmB,EAAEF,GAAEE,EAAE,wBAAwB,EAAED,GAAEC,EAAE,qBAAqB,EAChc,SAASC,EAAEC,EAAE,CAAC,GAAc,OAAOA,GAAlB,UAA4BA,IAAP,KAAS,CAAC,IAAI,EAAEA,EAAE,SAAS,OAAO,GAAG,KAAKnB,GAAE,OAAOmB,EAAEA,EAAE,KAAKA,GAAG,KAAKjB,GAAE,KAAKE,GAAE,KAAKD,GAAE,KAAKK,GAAE,KAAKC,GAAE,OAAOU,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAE,SAASA,GAAG,KAAKb,GAAE,KAAKC,GAAE,KAAKI,GAAE,KAAKD,GAAE,KAAKL,GAAE,OAAOc,EAAE,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAKlB,GAAE,OAAO,CAAC,EAAE,CAAC,IAAImB,GAAEf,GAAEgB,GAAErB,GAAEsB,GAAEf,GAAEgB,GAAErB,GAAEsB,GAAEb,GAAEc,GAAEf,GAAEgB,GAAEzB,GAAE0B,GAAEvB,GAAEwB,GAAEzB,GAAE0B,GAAErB,qBAA0BF,GAAyBwB,EAAA,gBAACV,GAAEU,EAAA,QAAgBT,gBAAqBC,GAAkBQ,EAAA,SAACP,UAAeC,GAAcM,EAAA,KAACL,GAAEK,EAAA,OAAeJ,cAAmBC,GAAoBG,EAAA,WAACF,GAClfE,EAAA,SAAiBD,GAAEC,EAAA,YAAoB,UAAU,CAAC,MAAM,EAAE,qBAA2B,UAAU,CAAC,MAAM,EAAE,EAA2BA,EAAA,kBAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIb,EAAC,EAA2BwB,EAAA,kBAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAId,EAAC,EAAmByB,EAAA,UAAC,SAASX,EAAE,CAAC,OAAiB,OAAOA,GAAlB,UAA4BA,IAAP,MAAUA,EAAE,WAAWnB,EAAC,EAAsB8B,EAAA,aAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIZ,EAAC,EAAoBuB,EAAA,WAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIjB,EAAC,EAAgB4B,EAAA,OAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIR,EAAC,EAAgBmB,EAAA,OAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIT,EAAC,EACneoB,EAAA,SAAiB,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIlB,EAAC,EAAoB6B,EAAA,WAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIf,EAAC,EAAE0B,EAAA,aAAqB,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIhB,EAAC,EAAoB2B,EAAA,WAAC,SAASX,EAAE,CAAC,OAAOD,EAAEC,CAAC,IAAIX,EAAC,uBAA6B,SAASW,EAAE,CAAC,OAAiB,OAAOA,GAAlB,UAAkC,OAAOA,GAApB,YAAuBA,IAAIjB,IAAGiB,IAAIf,IAAGe,IAAIJ,IAAGI,IAAIhB,IAAGgB,IAAIX,IAAGW,IAAIV,IAAGU,IAAIH,IAAc,OAAOG,GAAlB,UAA4BA,IAAP,OAAWA,EAAE,WAAWR,IAAGQ,EAAE,WAAWT,IAAGS,EAAE,WAAWd,IAAGc,EAAE,WAAWb,IAAGa,EAAE,WAAWZ,IAAGY,EAAE,WAAWL,IAAGK,EAAE,WAAWP,IAAGO,EAAE,CAAC,IAAIN,GAAQ,EACzeiB,EAAA,OAAeZ,eCVba,EAAA,QAAiBC,QCHnB,SAASC,GAAEA,EAAE,CAAC,OAAgB,OAAOA,GAAjB,UAA0BA,GAAN,MAAaA,EAAE,WAAN,CAAc,CAAC,SAAS9B,GAAE8B,EAAE9B,EAAE,CAAC,OAAO,CAACA,GAAc8B,IAAX,WAA2BA,IAAZ,WAAwBA,IAAT,MAAU,CAAC,SAASvB,GAAEuB,EAAEvB,EAAE,CAAC,GAAGuB,EAAE,aAAaA,EAAE,cAAcA,EAAE,YAAYA,EAAE,YAAY,CAAC,IAAIpB,EAAE,iBAAiBoB,EAAE,IAAI,EAAE,OAAO9B,GAAEU,EAAE,UAAUH,CAAC,GAAGP,GAAEU,EAAE,UAAUH,CAAC,GAAG,SAASuB,EAAE,CAAC,IAAI9B,EAAE,SAAS8B,EAAE,CAAC,GAAG,CAACA,EAAE,eAAe,CAACA,EAAE,cAAc,YAAY,OAAO,KAAK,GAAG,CAAC,OAAOA,EAAE,cAAc,YAAY,YAAY,MAAC,CAAS,OAAO,IAAI,CAAC,EAAEA,CAAC,EAAE,MAAM,CAAC,CAAC9B,IAAIA,EAAE,aAAa8B,EAAE,cAAc9B,EAAE,YAAY8B,EAAE,YAAY,EAAEA,CAAC,EAAE,MAAM,EAAE,CAAC,SAASpB,GAAEoB,EAAE9B,EAAE,EAAE,EAAE,EAAE,EAAEK,EAAEN,EAAE,CAAC,OAAO,EAAE+B,GAAGzB,EAAEL,GAAG,EAAE8B,GAAGzB,EAAEL,EAAE,EAAE,GAAG8B,GAAG/B,GAAG,GAAGM,GAAGL,GAAGD,GAAG,EAAE,EAAE+B,EAAE,EAAEzB,EAAEL,GAAGD,EAAE,GAAG,EAAE+B,GAAG/B,EAAE,EAAEM,EAAEL,EAAE,EAAE,CAAC,CAAgB,SAAA+B,GAAS,EAAEpC,EAAE,CAAC,IAAIqC,EAAE,OAAO3B,EAAEV,EAAE,WAAWI,EAAEJ,EAAE,MAAMgB,EAAEhB,EAAE,OAAOQ,EAAER,EAAE,SAASqB,EAAErB,EAAE,2BAA2BG,EAAc,OAAOK,GAAnB,WAAqBA,EAAE,SAAS2B,EAAE,CAAC,OAAOA,IAAI3B,CAAC,EAAE,GAAG,CAAC2B,GAAE,CAAC,EAAE,MAAM,IAAI,UAAU,gBAAgB,EAAE,QAAQ7B,EAAE,SAAS,kBAAkB,SAAS,gBAAgBgC,EAAE,CAAA,EAAGzB,EAAE,EAAEsB,GAAEtB,CAAC,GAAGV,EAAEU,CAAC,GAAG,CAAC,IAAIA,EAAEA,EAAE,iBAAiBP,EAAE,CAACgC,EAAE,KAAKzB,CAAC,EAAE,MAAYA,GAAN,MAASA,IAAI,SAAS,MAAMD,GAAEC,CAAC,GAAG,CAACD,GAAE,SAAS,eAAe,GAASC,GAAN,MAASD,GAAEC,EAAEQ,CAAC,GAAGiB,EAAE,KAAKzB,CAAC,EAAE,QAAQF,EAAE0B,EAAE,eAAeA,EAAE,eAAe,MAAM,WAAW9B,EAAE8B,EAAE,eAAeA,EAAE,eAAe,OAAO,YAAYnB,EAAE,OAAO,SAAS,YAAYD,EAAE,OAAO,SAAS,YAAYsB,EAAE,EAAE,wBAAwBrC,EAAEqC,EAAE,OAAOT,EAAES,EAAE,MAAMnB,EAAEmB,EAAE,IAAIZ,EAAEY,EAAE,MAAMC,EAAED,EAAE,OAAOE,EAAEF,EAAE,KAAKpB,EAAYf,IAAV,SAAyBA,IAAZ,UAAcgB,EAAUhB,IAAR,MAAUoC,EAAEpB,EAAElB,EAAE,EAAE6B,EAAaf,IAAX,SAAayB,EAAEX,EAAE,EAAUd,IAAR,MAAUW,EAAEc,EAAEhB,EAAE,CAAE,EAACiB,EAAE,EAAEA,EAAEJ,EAAE,OAAOI,IAAI,CAAC,IAAIjC,EAAE6B,EAAEI,CAAC,EAAElB,EAAEf,EAAE,sBAAqB,EAAGiB,EAAEF,EAAE,OAAOmB,EAAEnB,EAAE,MAAMoB,EAAEpB,EAAE,IAAIqB,GAAErB,EAAE,MAAMsB,GAAEtB,EAAE,OAAOuB,GAAEvB,EAAE,KAAK,GAAiBd,IAAd,aAAiBU,GAAG,GAAGqB,GAAG,GAAGD,GAAGjC,GAAGoB,GAAGhB,GAAGS,GAAGwB,GAAGJ,GAAGM,IAAGL,GAAGM,IAAGpB,GAAGkB,GAAE,OAAOpB,EAAE,IAAIuB,GAAE,iBAAiBvC,CAAC,EAAEwC,GAAE,SAASD,GAAE,gBAAgB,EAAE,EAAElC,GAAE,SAASkC,GAAE,eAAe,EAAE,EAAE1B,GAAE,SAAS0B,GAAE,iBAAiB,EAAE,EAAEzB,GAAE,SAASyB,GAAE,kBAAkB,EAAE,EAAEpB,EAAE,EAAEC,EAAE,EAAEqB,GAAE,gBAAgBzC,EAAEA,EAAE,YAAYA,EAAE,YAAYwC,GAAE3B,GAAE,EAAE6B,GAAE,iBAAiB1C,EAAEA,EAAE,aAAaA,EAAE,aAAaK,GAAES,GAAE,EAAE,GAAGjB,IAAIG,EAAEmB,EAAYxB,IAAV,QAAYe,EAAUf,IAAR,MAAUe,EAAEZ,EAAcH,IAAZ,UAAcW,GAAEE,EAAEA,EAAEV,EAAEA,EAAEO,GAAES,GAAEN,EAAEE,EAAEF,EAAEE,EAAEjB,EAAEA,CAAC,EAAEiB,EAAEZ,EAAE,EAAEsB,EAAYb,IAAV,QAAYe,EAAaf,IAAX,SAAae,EAAEpB,EAAE,EAAUK,IAAR,MAAUe,EAAEpB,EAAEI,GAAEG,EAAEA,EAAEP,EAAEA,EAAEsC,GAAE3B,GAAEJ,EAAEa,EAAEb,EAAEa,EAAED,EAAEA,CAAC,EAAEF,EAAE,KAAK,IAAI,EAAEA,EAAEX,CAAC,EAAEY,EAAE,KAAK,IAAI,EAAEA,EAAEX,CAAC,MAAM,CAACU,EAAYxB,IAAV,QAAYe,EAAEyB,EAAE9B,GAAUV,IAAR,MAAUe,EAAE2B,GAAEvB,GAAE4B,GAAc/C,IAAZ,UAAcW,GAAE6B,EAAEE,GAAEpB,EAAEZ,GAAES,GAAE4B,GAAEhC,EAAEA,EAAEjB,EAAEA,CAAC,EAAEiB,GAAGyB,EAAElB,EAAE,GAAGyB,GAAE,EAAEtB,EAAYb,IAAV,QAAYe,EAAEgB,GAAEE,GAAajC,IAAX,SAAae,GAAGgB,GAAEJ,EAAE,GAAGO,GAAE,EAAUlC,IAAR,MAAUe,EAAEc,GAAEvB,GAAE4B,GAAEnC,GAAEgC,GAAEF,GAAEF,EAAEM,GAAE3B,GAAE4B,GAAEnB,EAAEA,EAAED,EAAEA,CAAC,EAAE,IAAIsB,GAAE3C,EAAE,WAAW4C,EAAE5C,EAAE,UAAUU,GAAGkC,GAAGzB,EAAE,KAAK,IAAI,EAAE,KAAK,IAAIyB,EAAEzB,EAAEnB,EAAE,aAAaiB,EAAEyB,EAAC,CAAC,GAAGpB,GAAGqB,IAAGvB,EAAE,KAAK,IAAI,EAAE,KAAK,IAAIuB,GAAEvB,EAAEpB,EAAE,YAAYkC,EAAEO,EAAC,CAAC,GAAGzB,EAAE,KAAK,CAAC,GAAGhB,EAAE,IAAImB,EAAE,KAAKC,CAAC,CAAC,EAAE,OAAOJ,CAAC,CCUx6E,IAAI6B,GAAY,EAchB,SAASC,IAAO,CAAE,CAQlB,SAASC,GAAeC,EAAMC,EAAU,CACtC,GAAKD,EAIL,KAAIE,EAAUvB,GAAsBqB,EAAM,CACxC,SAAUC,EACV,MAAO,UACP,WAAY,WAChB,CAAG,EACDC,EAAQ,QAAQ,SAAUC,EAAM,CAC9B,IAAIC,EAAKD,EAAK,GACVE,EAAMF,EAAK,IACXG,EAAOH,EAAK,KAChBC,EAAG,UAAYC,EACfD,EAAG,WAAaE,CACpB,CAAG,EACH,CASA,SAASC,GAAiBC,EAAQC,EAAOC,EAAa,CACpD,IAAIC,EAASH,IAAWC,GAASA,aAAiBC,EAAY,MAAQF,EAAO,UAAYA,EAAO,SAASC,CAAK,EAC9G,OAAOE,CACT,CAWA,SAASC,GAASC,EAAIC,EAAM,CAC1B,IAAIC,EAEJ,SAASC,GAAS,CACZD,GACF,aAAaA,CAAS,CAEzB,CAED,SAASE,GAAU,CACjB,QAASC,EAAO,UAAU,OAAQC,EAAO,IAAI,MAAMD,CAAI,EAAGE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,CAAI,EAAI,UAAUA,CAAI,EAG7BJ,IACAD,EAAY,WAAW,UAAY,CACjCA,EAAY,KACZF,EAAG,MAAM,OAAQM,CAAI,CACtB,EAAEL,CAAI,CACR,CAED,OAAAG,EAAQ,OAASD,EACVC,CACT,CAUA,SAASI,IAAuB,CAC9B,QAASC,EAAQ,UAAU,OAAQC,EAAM,IAAI,MAAMD,CAAK,EAAGE,EAAQ,EAAGA,EAAQF,EAAOE,IACnFD,EAAIC,CAAK,EAAI,UAAUA,CAAK,EAG9B,OAAO,SAAUC,EAAO,CACtB,QAASC,EAAQ,UAAU,OAAQP,EAAO,IAAI,MAAMO,EAAQ,EAAIA,EAAQ,EAAI,CAAC,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACxGR,EAAKQ,EAAQ,CAAC,EAAI,UAAUA,CAAK,EAGnC,OAAOJ,EAAI,KAAK,SAAUV,EAAI,CAC5B,OAAIA,GACFA,EAAG,MAAM,OAAQ,CAACY,CAAK,EAAE,OAAON,CAAI,CAAC,EAGhCM,EAAM,yBAA2BA,EAAM,eAAe,aAAa,GAAKA,EAAM,YAAY,uBACvG,CAAK,CACL,CACA,CAEA,SAASG,IAAa,CACpB,QAASC,EAAQ,UAAU,OAAQC,EAAO,IAAI,MAAMD,CAAK,EAAGE,EAAQ,EAAGA,EAAQF,EAAOE,IACpFD,EAAKC,CAAK,EAAI,UAAUA,CAAK,EAG/B,OAAO,SAAU/B,EAAM,CACrB8B,EAAK,QAAQ,SAAUE,EAAK,CACtB,OAAOA,GAAQ,WACjBA,EAAIhC,CAAI,EACCgC,IACTA,EAAI,QAAUhC,EAEtB,CAAK,CACL,CACA,CAOA,SAASiC,IAAa,CACpB,OAAO,OAAOpC,IAAW,CAC3B,CAmBA,SAASqC,GAAuBC,EAAO,CACrC,IAAIC,EAASD,EAAM,OACfE,EAAcF,EAAM,YACpBG,EAAsBH,EAAM,oBAEhC,OAAKC,EAIAC,EAIDA,IAAgBC,EACXD,EAAc,WAAaA,IAAgB,EAAI,MAAQ,SAAW,iFAGpE,GAPE,4BAJA,EAYX,CAuFA,SAASE,GAASC,EAAOC,EAAO,CAC9B,OAAO,OAAO,KAAKD,CAAK,EAAE,OAAO,SAAUE,EAAWpG,EAAK,CACzD,OAAAoG,EAAUpG,CAAG,EAAIqG,GAAiBF,EAAOnG,CAAG,EAAImG,EAAMnG,CAAG,EAAIkG,EAAMlG,CAAG,EAC/DoG,CACR,EAAE,CAAE,CAAA,CACP,CAYA,SAASC,GAAiBF,EAAOnG,EAAK,CACpC,OAAOmG,EAAMnG,CAAG,IAAM,MACxB,CAQA,SAASsG,GAAkBnB,EAAO,CAChC,IAAInF,EAAMmF,EAAM,IACZoB,EAAUpB,EAAM,QAGpB,OAAIoB,GAAW,IAAMA,GAAW,IAAMvG,EAAI,QAAQ,OAAO,IAAM,EACtD,QAAUA,EAGZA,CACT,CAwBA,SAASwG,GAAqBC,EAAYC,EAAWC,EAAWC,EAAsBC,EAAU,CAK9F,GAJIA,IAAa,SACfA,EAAW,IAGTF,IAAc,EAChB,MAAO,GAGT,IAAIG,EAAiBH,EAAY,GAE7B,OAAOD,GAAc,UAAYA,EAAY,GAAKA,GAAaC,KACjED,EAAYD,EAAa,EAAI,GAAKK,EAAiB,GAGrD,IAAIC,EAAWL,EAAYD,EAEvBM,EAAW,EACbA,EAAWF,EAAWC,EAAiB,EAC9BC,EAAWD,IACpBC,EAAWF,EAAW,EAAIC,GAG5B,IAAIE,EAAsBC,GAAwBR,EAAYM,EAAUJ,EAAWC,EAAsBC,CAAQ,EAEjH,OAAIG,IAAwB,GACnBN,GAAaC,EAAY,GAAKD,EAGhCM,CACT,CAaA,SAASC,GAAwBR,EAAYC,EAAWC,EAAWC,EAAsBC,EAAU,CACjG,IAAIK,EAAqBN,EAAqBF,CAAS,EAEvD,GAAI,CAACQ,GAAsB,CAACA,EAAmB,aAAa,UAAU,EACpE,OAAOR,EAGT,GAAID,EAAa,GACf,QAASU,EAAQT,EAAY,EAAGS,EAAQR,EAAWQ,IACjD,GAAI,CAACP,EAAqBO,CAAK,EAAE,aAAa,UAAU,EACtD,OAAOA,MAIX,SAASC,EAASV,EAAY,EAAGU,GAAU,EAAGA,IAC5C,GAAI,CAACR,EAAqBQ,CAAM,EAAE,aAAa,UAAU,EACvD,OAAOA,EAKb,OAAIP,EACKJ,EAAa,EAAIQ,GAAwB,EAAG,EAAGN,EAAWC,EAAsB,EAAK,EAAIK,GAAwB,GAAIN,EAAY,EAAGA,EAAWC,EAAsB,EAAK,EAG5K,EACT,CAaA,SAASS,GAAsBvH,EAAQwH,EAAmBlD,EAAamD,EAAoB,CACzF,OAAIA,IAAuB,SACzBA,EAAqB,IAGhBD,EAAkB,KAAK,SAAUE,EAAa,CACnD,OAAOA,IAAgBvD,GAAiBuD,EAAa1H,EAAQsE,CAAW,GAAKmD,GAAsBtD,GAAiBuD,EAAapD,EAAY,SAAS,cAAeA,CAAW,EACpL,CAAG,CACH,CAqBA,IAAIqD,GAAgBnD,GAAS,SAAUoD,EAAc,CACnDC,GAAaD,CAAY,EAAE,YAAc,EAC3C,EAAG,GAAG,EAMN,SAASE,GAAUC,EAAQH,EAAc,CACvC,IAAII,EAAMH,GAAaD,CAAY,EAE9BG,IAILC,EAAI,YAAcD,EAClBJ,GAAcC,CAAY,EAC5B,CAQA,SAASC,GAAaD,EAAc,CAC9BA,IAAiB,SACnBA,EAAe,UAGjB,IAAIK,EAAYL,EAAa,eAAe,qBAAqB,EAEjE,OAAIK,IAIJA,EAAYL,EAAa,cAAc,KAAK,EAC5CK,EAAU,aAAa,KAAM,qBAAqB,EAClDA,EAAU,aAAa,OAAQ,QAAQ,EACvCA,EAAU,aAAa,YAAa,QAAQ,EAC5CA,EAAU,aAAa,gBAAiB,gBAAgB,EACxD,OAAO,OAAOA,EAAU,MAAO,CAC7B,OAAQ,IACR,KAAM,gBACN,OAAQ,MACR,OAAQ,OACR,SAAU,SACV,QAAS,IACT,SAAU,WACV,MAAO,KACX,CAAG,EACDL,EAAa,KAAK,YAAYK,CAAS,EAChCA,EACT,CA4rCA,IAAIC,GAAc,CAAC,iBAAkB,mBAAoB,QAAS,aAAa,EAC3EC,GAA6B,CAC/B,iBAAkB,GAClB,OAAQ,GACR,aAAc,KACd,WAAY,EACd,EAEA,SAASC,GAAkBC,EAAQjC,EAAOkC,EAAU,CAClD,IAAIjC,EAAQgC,EAAO,MACfE,EAAOF,EAAO,KACdG,EAAU,CAAA,EACd,OAAO,KAAKpC,CAAK,EAAE,QAAQ,SAAUlG,EAAK,CACxCuI,GAAsBvI,EAAKmI,EAAQjC,EAAOkC,CAAQ,EAE9CA,EAASpI,CAAG,IAAMkG,EAAMlG,CAAG,IAC7BsI,EAAQtI,CAAG,EAAIoI,EAASpI,CAAG,EAEjC,CAAG,EAEGmG,EAAM,eAAiB,OAAO,KAAKmC,CAAO,EAAE,QAC9CnC,EAAM,cAAcjG,EAAS,CAC3B,KAAMmI,CACZ,EAAOC,CAAO,CAAC,CAEf,CAEA,SAASC,GAAsBvI,EAAKmI,EAAQjC,EAAOkC,EAAU,CAC3D,IAAIjC,EAAQgC,EAAO,MACfE,EAAOF,EAAO,KACdK,EAAU,KAAOC,GAAiBzI,CAAG,EAAI,SAEzCmG,EAAMqC,CAAO,GAAKJ,EAASpI,CAAG,IAAM,QAAaoI,EAASpI,CAAG,IAAMkG,EAAMlG,CAAG,GAC9EmG,EAAMqC,CAAO,EAAEtI,EAAS,CACtB,KAAMmI,CACZ,EAAOD,CAAQ,CAAC,CAEhB,CAUA,SAASM,GAAanG,EAAGjB,EAAG,CAC1B,OAAOA,EAAE,OACX,CASA,SAASqH,GAAwBC,EAAqB,CACpD,IAAIC,EAAeD,EAAoB,aACnCE,EAAoBF,EAAoB,aAC5C,OAAOC,EAAeC,EAAkBD,CAAY,EAAI,sBAAwB,EAClF,CAMA,IAAIE,GAAmBzE,GAAS,SAAU0E,EAAgBC,EAAU,CAClErB,GAAUoB,IAAkBC,CAAQ,CACtC,EAAG,GAAG,EAEFC,GAA4B,OAAO,OAAW,KAAe,OAAO,OAAO,SAAa,KAAe,OAAO,OAAO,SAAS,cAAkB,IAAcC,EAAAA,gBAAkBC,EAAAA,UAEpL,SAASC,GAAcxF,EAAM,CAC3B,IAAIyF,EAAUzF,EAAK,GACf0F,EAAKD,IAAY,OAAS,aAAe3D,GAAY,EAAG2D,EACxDE,EAAU3F,EAAK,QACf4F,EAAS5F,EAAK,OACd6F,EAAY7F,EAAK,UACjB8F,EAAiB9F,EAAK,eACtB+F,EAAU/F,EAAK,QACfgG,EAAgBC,EAAAA,OAAO,CACzB,QAASN,GAAWD,EAAK,SACzB,OAAQE,GAAUF,EAAK,QACvB,UAAWG,GAAa,SAAUvC,EAAO,CACvC,OAAOoC,EAAK,SAAWpC,CACxB,EACD,eAAgBwC,GAAkBJ,EAAK,iBACvC,QAASK,GAAWL,EAAK,QAC7B,CAAG,EACD,OAAOM,EAAc,OACvB,CAEA,SAASE,GAAa5C,EAAO6C,EAAMC,EAAO,CACxC,OAAI9C,IAAU,OACLA,EAGL8C,EAAM,SAAW,EACZ,GAGFA,EAAM,QAAQD,CAAI,CAC3B,CAEA,SAASE,GAAaF,EAAM,CAC1B,OAAOA,EAAO,OAAOA,CAAI,EAAI,EAC/B,CAMA,SAASvB,GAAiB0B,EAAQ,CAChC,MAAO,GAAKA,EAAO,MAAM,EAAG,CAAC,EAAE,cAAgBA,EAAO,MAAM,CAAC,CAC/D,CAEA,SAASC,GAAaC,EAAK,CACzB,IAAI3E,EAAMoE,SAAOO,CAAG,EAMpB,OAAA3E,EAAI,QAAU2E,EACP3E,CACT,CAaA,SAAS4E,GAAmBC,EAASC,EAAcrE,EAAO,CACxD,IAAIsE,EAAeX,EAAAA,SACfY,EAAYZ,EAAAA,SACZa,EAAkBC,EAAAA,YAAY,SAAU1E,EAAOiC,EAAQ,CACzDuC,EAAU,QAAUvC,EACpBjC,EAAQD,GAASC,EAAOiC,EAAO,KAAK,EACpC,IAAIG,EAAUiC,EAAQrE,EAAOiC,CAAM,EAC/BC,EAAWD,EAAO,MAAM,aAAajC,EAAOhG,EAAS,CAAE,EAAEiI,EAAQ,CACnE,QAASG,CACV,CAAA,CAAC,EACF,OAAOF,CACX,EAAK,CAACmC,CAAO,CAAC,EAERM,EAAcC,EAAAA,WAAWH,EAAiBH,CAAY,EACtDtE,EAAQ2E,EAAY,CAAC,EACrBE,EAAWF,EAAY,CAAC,EAExBG,EAAWZ,GAAajE,CAAK,EAC7B8E,EAAoBL,cAAY,SAAUzC,EAAQ,CACpD,OAAO4C,EAAS7K,EAAS,CACvB,MAAO8K,EAAS,OACtB,EAAO7C,CAAM,CAAC,CACd,EAAK,CAAC6C,CAAQ,CAAC,EACT7C,EAASuC,EAAU,QACvBtB,OAAAA,EAAAA,UAAU,UAAY,CAChBjB,GAAUsC,EAAa,SAAWA,EAAa,UAAYvE,GAC7DgC,GAAkBC,EAAQlC,GAASwE,EAAa,QAAStC,EAAO,KAAK,EAAGjC,CAAK,EAG/EuE,EAAa,QAAUvE,CACxB,EAAE,CAACA,EAAOC,EAAOgC,CAAM,CAAC,EAClB,CAACjC,EAAO+E,CAAiB,CAClC,CAoBA,IAAIC,GAAiB,CACnB,aAAchB,GACd,aAAcxB,GACd,wBAAyBC,GACzB,eAAgBlF,GAChB,mBAAoB,GACpB,YAEA,OAAO,OAAW,IAAc,CAAA,EAAK,MACvC,EAEA,SAAS0H,EAAkBhF,EAAOiF,EAASC,EAAoB,CACzDA,IAAuB,SACzBA,EAAqBpD,IAGvB,IAAIqD,EAAiB,UAAY7C,GAAiB2C,CAAO,EAEzD,OAAIE,KAAkBnF,EACbA,EAAMmF,CAAc,EAGtBD,EAAmBD,CAAO,CACnC,CAEA,SAASG,GAAkBpF,EAAOiF,EAASC,EAAoB,CAK7D,GAJIA,IAAuB,SACzBA,EAAqBpD,IAGnBmD,KAAWjF,EACb,OAAOA,EAAMiF,CAAO,EAGtB,IAAII,EAAiB,UAAY/C,GAAiB2C,CAAO,EAEzD,OAAII,KAAkBrF,EACbA,EAAMqF,CAAc,EAGtBL,EAAkBhF,EAAOiF,EAASC,CAAkB,CAC7D,CAEA,SAASI,GAAkBtF,EAAO,CAChC,IAAI0C,EAAe0C,GAAkBpF,EAAO,cAAc,EACtDL,EAASyF,GAAkBpF,EAAO,QAAQ,EAC1CuF,EAAmBH,GAAkBpF,EAAO,kBAAkB,EAC9DwF,EAAaJ,GAAkBpF,EAAO,YAAY,EACtD,MAAO,CACL,iBAAkBuF,EAAmB,GAAK7C,GAAgB/C,EAASK,EAAM,MAAM,QAAQ0C,CAAY,EAAI6C,EACvG,OAAQ5F,EACR,aAAc+C,EACd,WAAY8C,CAChB,CACA,CAEA,SAASC,GAA0BzF,EAAOD,EAAO2F,EAAQjF,EAAsB,CAC7E,IAAIqD,EAAQ9D,EAAM,MACd2F,EAA0B3F,EAAM,wBAChC4F,EAA0B5F,EAAM,wBAChC0C,EAAe3C,EAAM,aACrBwF,EAAmBxF,EAAM,iBAE7B,OAAI+D,EAAM,SAAW,EACZ,GAIL6B,IAA4B,QAAaJ,IAAqBI,EACzDA,EAGLC,IAA4B,OACvBA,EAGLlD,EACEgD,IAAW,EACN5B,EAAM,QAAQpB,CAAY,EAG5BrC,GAAqBqF,EAAQ5B,EAAM,QAAQpB,CAAY,EAAGoB,EAAM,OAAQrD,EAAsB,EAAK,EAGxGiF,IAAW,EACN,GAGFA,EAAS,EAAI5B,EAAM,OAAS,EAAI,CACzC,CAYA,SAAS+B,GAAwBlG,EAAQmG,EAAsB7H,EAAa8H,EAAY,CACtF,IAAIC,EAA2BrC,EAAAA,OAAO,CACpC,YAAa,GACb,YAAa,EACjB,CAAG,EACDV,OAAAA,EAAAA,UAAU,UAAY,CAGpB,IAAIgD,EAAc,UAAuB,CACvCD,EAAyB,QAAQ,YAAc,EACrD,EAEQE,EAAY,SAAmBlH,EAAO,CACxCgH,EAAyB,QAAQ,YAAc,GAE3CrG,GAAU,CAACuB,GAAsBlC,EAAM,OAAQ8G,EAAqB,IAAI,SAAUvG,EAAK,CACzF,OAAOA,EAAI,OACnB,CAAO,EAAGtB,CAAW,GACb8H,GAER,EAEQI,EAAe,UAAwB,CACzCH,EAAyB,QAAQ,YAAc,EACrD,EAEQI,EAAc,UAAuB,CACvCJ,EAAyB,QAAQ,YAAc,EACrD,EAEQK,EAAa,SAAoBrH,EAAO,CACtCW,GAAU,CAACqG,EAAyB,QAAQ,aAAe,CAAC9E,GAAsBlC,EAAM,OAAQ8G,EAAqB,IAAI,SAAUvG,EAAK,CAC1I,OAAOA,EAAI,OACnB,CAAO,EAAGtB,EAAa,EAAK,GACpB8H,GAER,EAEI,OAAA9H,EAAY,iBAAiB,YAAagI,CAAW,EACrDhI,EAAY,iBAAiB,UAAWiI,CAAS,EACjDjI,EAAY,iBAAiB,aAAckI,CAAY,EACvDlI,EAAY,iBAAiB,YAAamI,CAAW,EACrDnI,EAAY,iBAAiB,WAAYoI,CAAU,EAC5C,UAAmB,CACxBpI,EAAY,oBAAoB,YAAagI,CAAW,EACxDhI,EAAY,oBAAoB,UAAWiI,CAAS,EACpDjI,EAAY,oBAAoB,aAAckI,CAAY,EAC1DlI,EAAY,oBAAoB,YAAamI,CAAW,EACxDnI,EAAY,oBAAoB,WAAYoI,CAAU,CAC5D,CACA,EAAK,CAAC1G,EAAQ1B,CAAW,CAAC,EACjB+H,CACT,CAKA,IAAIM,GAA8B,UAAuC,CACvE,OAAOjJ,EACT,EAyDA,SAASkJ,GAAqB1D,EAAgB2D,EAAiB9G,EAAO,CACpE,IAAI+G,EAAiB/G,EAAM,eACvB6F,EAAmB7F,EAAM,iBACzBoE,EAAQpE,EAAM,MACdzB,EAAcyB,EAAM,YACpBgH,EAAOlN,GAA8BkG,EAAOmC,EAAW,EAG3DoB,EAAAA,UAAU,UAAY,CAChBwD,GAIJ7D,GAAiB,UAAY,CAC3B,OAAOC,EAAe9I,EAAS,CAC7B,iBAAkBwL,EAClB,gBAAiBzB,EAAMyB,CAAgB,EACvC,YAAazB,EAAM,MAC3B,EAAS4C,CAAI,CAAC,CACd,EAAOzI,EAAY,QAAQ,CACxB,EAAEuI,CAAe,CACpB,CAEA,SAASG,GAAkBC,EAAO,CAChC,IAAIrB,EAAmBqB,EAAM,iBACzBjH,EAASiH,EAAM,OACfC,EAAWD,EAAM,SACjBnG,EAAuBmG,EAAM,qBAC7BE,EAAcF,EAAM,YACpBG,EAAqBH,EAAM,eAE3BI,EAAkBrD,SAAO,EAAI,EAEjC,OAAAZ,GAA0B,UAAY,CAChCwC,EAAmB,GAAK,CAAC5F,GAAU,CAAC,OAAO,KAAKkH,EAAS,OAAO,EAAE,SAIlEG,EAAgB,UAAY,GAC9BA,EAAgB,QAAU,GAE1BD,EAAmBtG,EAAqB8E,CAAgB,EAAGuB,CAAW,EAG5E,EAAK,CAACvB,CAAgB,CAAC,EACdyB,CACT,CAGA,IAAIC,GAA2B5J,GAuB/B,SAAS6J,GAAuBnH,EAAOiC,EAAQmF,EAAkB,CAC/D,IAAIjF,EAAOF,EAAO,KACdhC,EAAQgC,EAAO,MACfG,EAEJ,OAAQD,EAAI,CACV,KAAKiF,EAAiB,cACpBhF,EAAU,CACR,iBAAkBH,EAAO,KACjC,EACM,MAEF,KAAKmF,EAAiB,eACpBhF,EAAU,CACR,iBAAkB,EAC1B,EACM,MAEF,KAAKgF,EAAiB,kBACtB,KAAKA,EAAiB,mBACpBhF,EAAU,CACR,OAAQ,CAACpC,EAAM,OACf,iBAAkBA,EAAM,OAAS,GAAK0F,GAA0BzF,EAAOD,EAAO,CAAC,CACvF,EACM,MAEF,KAAKoH,EAAiB,iBACpBhF,EAAU,CACR,OAAQ,GACR,iBAAkBsD,GAA0BzF,EAAOD,EAAO,CAAC,CACnE,EACM,MAEF,KAAKoH,EAAiB,kBACpBhF,EAAU,CACR,OAAQ,EAChB,EACM,MAEF,KAAKgF,EAAiB,4BACpBhF,EAAU,CACR,iBAAkBH,EAAO,gBACjC,EACM,MAEF,KAAKmF,EAAiB,sBACpBhF,EAAU,CACR,WAAYH,EAAO,UAC3B,EACM,MAEF,KAAKmF,EAAiB,cACpBhF,EAAU,CACR,iBAAkB6C,EAAkBhF,EAAO,kBAAkB,EAC7D,OAAQgF,EAAkBhF,EAAO,QAAQ,EACzC,aAAcgF,EAAkBhF,EAAO,cAAc,EACrD,WAAYgF,EAAkBhF,EAAO,YAAY,CACzD,EACM,MAEF,QACE,MAAM,IAAI,MAAM,4CAA4C,CAC/D,CAED,OAAOjG,EAAS,CAAA,EAAIgG,EAAOoC,CAAO,CACpC,CAsBWiF,EAAU,MAAM,WACTA,EAAU,KACFA,EAAU,KACPA,EAAU,KACfA,EAAU,KACZA,EAAU,OACHA,EAAU,OACVA,EAAU,OAC3BA,EAAU,KACHA,EAAU,KACVA,EAAU,KACXA,EAAU,IACHA,EAAU,IACVA,EAAU,IAC3BA,EAAU,OACLA,EAAU,OACXA,EAAU,OACPA,EAAU,KACLA,EAAU,OACZA,EAAU,KACFA,EAAU,KACNA,EAAU,KACrBA,EAAU,KACTA,EAAU,KACbA,EAAU,MAAM,CACzB,iBAAkBA,EAAU,KAC5B,oBAAqBA,EAAU,KAC/B,SAAUA,EAAU,MAAM,CACtB,eAAgBA,EAAU,KAC1B,cAAeA,EAAU,IACzB,KAAMA,EAAU,GAC5B,CAAS,CACT,CAAK,EAUL,SAASC,GAAqBC,EAAI,CAC9B,IAAI3H,EAAS2H,EAAG,OAAQ1H,EAAc0H,EAAG,YAAazH,EAAsByH,EAAG,oBAC/E,OAAK3H,EAGAC,EAGDA,IAAgBC,EACTD,EAAc,WAAaA,IAAgB,EAAI,MAAQ,SAAW,+FAEtE,GALI,4BAHA,EASf,CACqB2H,GAASA,GAAS,CAAA,EAAIxC,EAAc,EAAG,CAAE,qBAAsBsC,GAAsB,EA+pB1G,IAAIG,GAAiG,EACjGC,GAA6F,EAC7FC,GAA0F,EAC1FC,GAAsF,EACtFC,GAAoF,EACpFC,GAAwF,EACxFC,GAA2E,EAC3EC,GAAuE,EACvEC,GAAkF,EAClFC,GAAgF,EAChFC,GAAuE,GACvEC,GAAuF,GACvFC,GAA0F,GAC1FC,GAAsF,GACtFC,GAAwF,GACxFC,GAA6G,GAC7GC,GAA0F,GAC1FC,GAAiG,GACjGC,GAAiF,GACjFC,GAA0H,GAE1HC,GAAkC,OAAO,OAAO,CAClD,UAAW,KACX,sBAAuBpB,GACvB,oBAAqBC,GACrB,mBAAoBC,GACpB,iBAAkBC,GAClB,gBAAiBC,GACjB,kBAAmBC,GACnB,YAAaC,GACb,UAAWC,GACX,eAAgBC,GAChB,cAAeC,GACf,UAAWC,GACX,kBAAmBC,GACnB,mBAAoBC,GACpB,iBAAkBC,GAClB,kBAAmBC,GACnB,4BAA6BC,GAC7B,mBAAoBC,GACpB,sBAAuBC,GACvB,cAAeC,GACf,kCAAmCC,EACrC,CAAC,EAED,SAASE,GAAkB7I,EAAO,CAChC,IAAIqE,EAAeiB,GAAkBtF,CAAK,EACtC0C,EAAe2B,EAAa,aAC5BmB,EAAanB,EAAa,WAE9B,OAAImB,IAAe,IAAM9C,GAAgB1C,EAAM,oBAAsB,QAAaA,EAAM,oBAAsB,QAAaA,EAAM,aAAe,SAC9IwF,EAAaxF,EAAM,aAAa0C,CAAY,GAGvC3I,EAAS,CAAE,EAAEsK,EAAc,CAChC,WAAYmB,CAChB,CAAG,CACH,CAGS4B,EAAU,MAAM,WACTA,EAAU,KACFA,EAAU,KACPA,EAAU,KACfA,EAAU,KACZA,EAAU,OACHA,EAAU,OACVA,EAAU,OAC3BA,EAAU,KACHA,EAAU,KACVA,EAAU,KACXA,EAAU,IACHA,EAAU,IACVA,EAAU,IACnBA,EAAU,OACHA,EAAU,OACVA,EAAU,OACzBA,EAAU,OACLA,EAAU,OACXA,EAAU,OACPA,EAAU,KACZA,EAAU,OACHA,EAAU,OACZA,EAAU,KACFA,EAAU,KACNA,EAAU,KACrBA,EAAU,KACTA,EAAU,KACNA,EAAU,KACjBA,EAAU,MAAM,CAC3B,iBAAkBA,EAAU,KAC5B,oBAAqBA,EAAU,KAC/B,SAAUA,EAAU,MAAM,CACxB,eAAgBA,EAAU,KAC1B,cAAeA,EAAU,IACzB,KAAMA,EAAU,GACtB,CAAK,CACL,CAAG,EAeH,SAAS0B,GAAqB1E,EAASC,EAAcrE,EAAO,CAC1D,IAAI+I,EAA0BpF,EAAAA,SAE1BqF,EAAsB7E,GAAmBC,EAASC,EAAcrE,CAAK,EACrED,EAAQiJ,EAAoB,CAAC,EAC7BpE,EAAWoE,EAAoB,CAAC,EAGpC/F,OAAAA,EAAAA,UAAU,UAAY,CAChB/C,GAAiBF,EAAO,cAAc,IACpC+I,EAAwB,UAAY/I,EAAM,cAC5C4E,EAAS,CACP,KAAM+D,GACN,WAAY3I,EAAM,aAAaA,EAAM,YAAY,CAC3D,CAAS,EAGH+I,EAAwB,QAAUhJ,EAAM,eAAiBgJ,EAAwB,QAAU/I,EAAM,aAAeD,EAAM,aAE5H,CAAG,EACM,CAACD,GAASC,EAAOC,CAAK,EAAG4E,CAAQ,CAC1C,CAYA,IAAIqE,GAAiBlP,EAAS,CAAE,EAAEgL,GAAgB,CAChD,qBAAsBtF,GACtB,mBAAoB,EACtB,CAAC,EAID,SAASyJ,GAA4BnJ,EAAOiC,EAAQ,CAClD,IAAIE,EAAOF,EAAO,KACdhC,EAAQgC,EAAO,MACfmH,EAAWnH,EAAO,SAClBG,EAEJ,OAAQD,EAAI,CACV,KAAKgG,GACH/F,EAAU,CACR,OAAQ6C,EAAkBhF,EAAO,QAAQ,EACzC,iBAAkBgF,EAAkBhF,EAAO,kBAAkB,EAC7D,aAAcA,EAAM,MAAMgC,EAAO,KAAK,EACtC,WAAYhC,EAAM,aAAaA,EAAM,MAAMgC,EAAO,KAAK,CAAC,CAChE,EACM,MAEF,KAAKwF,GACCzH,EAAM,OACRoC,EAAU,CACR,iBAAkB9B,GAAqB8I,EAAW,EAAI,EAAGpJ,EAAM,iBAAkBC,EAAM,MAAM,OAAQgC,EAAO,qBAAsBhC,EAAM,kBAAkB,CACpK,EAEQmC,EAAU,CACR,iBAAkBsD,GAA0BzF,EAAOD,EAAO,EAAGiC,EAAO,oBAAoB,EACxF,OAAQhC,EAAM,MAAM,QAAU,CACxC,EAGM,MAEF,KAAKyH,GACC1H,EAAM,OACRoC,EAAU,CACR,iBAAkB9B,GAAqB8I,EAAW,GAAK,GAAIpJ,EAAM,iBAAkBC,EAAM,MAAM,OAAQgC,EAAO,qBAAsBhC,EAAM,kBAAkB,CACtK,EAEQmC,EAAU,CACR,iBAAkBsD,GAA0BzF,EAAOD,EAAO,GAAIiC,EAAO,oBAAoB,EACzF,OAAQhC,EAAM,MAAM,QAAU,CACxC,EAGM,MAEF,KAAK6H,GACH1F,EAAUpI,EAAS,GAAIgG,EAAM,QAAUA,EAAM,kBAAoB,GAAK,CACpE,aAAcC,EAAM,MAAMD,EAAM,gBAAgB,EAChD,OAAQiF,EAAkBhF,EAAO,QAAQ,EACzC,iBAAkBgF,EAAkBhF,EAAO,kBAAkB,EAC7D,WAAYA,EAAM,aAAaA,EAAM,MAAMD,EAAM,gBAAgB,CAAC,CAC1E,CAAO,EACD,MAEF,KAAK2H,GACHvF,EAAUpI,EAAS,CACjB,OAAQ,GACR,iBAAkB,EAC1B,EAAS,CAACgG,EAAM,QAAU,CAClB,aAAc,KACd,WAAY,EACpB,CAAO,EACD,MAEF,KAAK4H,GACHxF,EAAU,CACR,iBAAkBrB,GAAwB,EAAG,EAAGd,EAAM,MAAM,OAAQgC,EAAO,qBAAsB,EAAK,CAC9G,EACM,MAEF,KAAK4F,GACHzF,EAAU,CACR,iBAAkBrB,GAAwB,GAAId,EAAM,MAAM,OAAS,EAAGA,EAAM,MAAM,OAAQgC,EAAO,qBAAsB,EAAK,CACpI,EACM,MAEF,KAAK+F,GACH5F,EAAUpI,EAAS,CACjB,OAAQ,GACR,iBAAkB,EACnB,EAAEgG,EAAM,kBAAoB,GAAKiC,EAAO,YAAc,CACrD,aAAchC,EAAM,MAAMD,EAAM,gBAAgB,EAChD,WAAYC,EAAM,aAAaA,EAAM,MAAMD,EAAM,gBAAgB,CAAC,CAC1E,CAAO,EACD,MAEF,KAAK+H,GACH3F,EAAU,CACR,OAAQ,GACR,iBAAkB6C,EAAkBhF,EAAO,kBAAkB,EAC7D,WAAYgC,EAAO,UAC3B,EACM,MAEF,KAAKwG,GACHrG,EAAU,CACR,aAAcH,EAAO,aACrB,WAAYhC,EAAM,aAAagC,EAAO,YAAY,CAC1D,EACM,MAEF,KAAK2G,GACHxG,EAAU,CACR,WAAYH,EAAO,UAC3B,EACM,MAEF,QACE,OAAOkF,GAAuBnH,EAAOiC,EAAQ4G,EAAkB,CAClE,CAED,OAAO7O,EAAS,CAAA,EAAIgG,EAAOoC,CAAO,CACpC,CAGA,IAAIiH,GAAc,CAAC,eAAgB,SAAU,KAAK,EAC9CC,GAAe,CAAC,OAAQ,QAAS,SAAU,MAAO,cAAe,UAAW,SAAS,EACrFC,GAAa,CAAC,UAAW,UAAW,SAAU,KAAK,EACnDC,GAAa,CAAC,YAAa,WAAY,UAAW,SAAU,eAAgB,SAAU,KAAK,EAC3FC,GAAa,CAAC,SAAU,KAAK,EACjCC,GAAY,iBAAmBb,GAE/B,SAASa,GAAYC,EAAW,CAC1BA,IAAc,SAChBA,EAAY,CAAA,GAKd,IAAI1J,EAAQjG,EAAS,CAAE,EAAEkP,GAAgBS,CAAS,EAE9CC,EAAgB3J,EAAM,cACtB4J,EAAgB5J,EAAM,cACtB8D,EAAQ9D,EAAM,MACd1C,EAAiB0C,EAAM,eACvB/B,EAAc+B,EAAM,YACpBqH,EAAuBrH,EAAM,qBAC7BwC,EAA0BxC,EAAM,wBAChC+D,EAAe/D,EAAM,aAErBqE,EAAewE,GAAkB7I,CAAK,EAEtC6J,EAAwBf,GAAqBI,GAA6B7E,EAAcrE,CAAK,EAC7FD,EAAQ8J,EAAsB,CAAC,EAC/BjF,EAAWiF,EAAsB,CAAC,EAElClK,EAASI,EAAM,OACfwF,EAAmBxF,EAAM,iBACzB2C,EAAe3C,EAAM,aACrByF,EAAazF,EAAM,WAEnB+J,EAAUnG,SAAO,IAAI,EACrBkD,EAAWlD,SAAO,CAAA,CAAE,EACpBoG,EAAWpG,SAAO,IAAI,EACtBqG,EAAkBrG,SAAO,IAAI,EAC7BsG,EAActG,SAAO,IAAI,EACzBuG,EAAoBvG,SAAO,EAAI,EAE/BwG,EAAajH,GAAclD,CAAK,EAEhCoK,EAAyBzG,EAAAA,SAEzB0G,EAASpG,GAAa,CACxB,MAAOlE,EACP,MAAOC,CACX,CAAG,EACGS,EAAuBgE,cAAY,SAAUzD,EAAO,CACtD,OAAO6F,EAAS,QAAQsD,EAAW,UAAUnJ,CAAK,CAAC,CACvD,EAAK,CAACmJ,CAAU,CAAC,EAGf5D,GAAqBc,EAAsB,CAAC1H,EAAQ4F,EAAkBC,EAAY1B,CAAK,EAAG/J,EAAS,CACjG,eAAgBmQ,EAAkB,QAClC,oBAAqBE,EAAuB,QAC5C,MAAOtG,EACP,YAAa7F,EACb,aAAc8F,CAClB,EAAKhE,CAAK,CAAC,EAETwG,GAAqB/D,EAAyB,CAACE,CAAY,EAAG3I,EAAS,CACrE,eAAgBmQ,EAAkB,QAClC,oBAAqBE,EAAuB,QAC5C,MAAOtG,EACP,YAAa7F,EACb,aAAc8F,CAClB,EAAKhE,CAAK,CAAC,EAET,IAAIiH,EAAkBL,GAAkB,CACtC,YAAamD,EAAQ,QACrB,iBAAkBvE,EAClB,OAAQ5F,EACR,SAAUkH,EACV,eAAgBvJ,EAChB,qBAAsBmD,CAC1B,CAAG,EACDwG,GAAyB,CACvB,eAAgBiD,EAAkB,QAClC,MAAOlK,EACP,MAAOD,CACX,CAAG,EAEDkD,EAAAA,UAAU,UAAY,CACpB,IAAIqH,EAAcX,GAAiBC,GAAiBjK,EAEhD2K,GAAeP,EAAS,SAC1BA,EAAS,QAAQ,OAGpB,EAAE,CAAE,CAAA,EACL9G,EAAAA,UAAU,UAAY,CAChBiH,EAAkB,UAItBE,EAAuB,QAAUtG,EAAM,OAC3C,CAAG,EAED,IAAIkC,EAA2BH,GAAwBlG,EAAQ,CAACsK,EAAaH,EAASE,CAAe,EAAG/L,EAAa,UAAY,CAC/H2G,EAAS,CACP,KAAMmD,GACN,WAAY,EAClB,CAAK,CACL,CAAG,EACGwC,EAAwBjE,GAA+E,EAE3GrD,EAAAA,UAAU,UAAY,CACpBiH,EAAkB,QAAU,EAC7B,EAAE,CAAE,CAAA,EAELjH,EAAAA,UAAU,UAAY,CACftD,IACHkH,EAAS,QAAU,GAEzB,EAAK,CAAClH,CAAM,CAAC,EAGX,IAAI6K,EAAuBC,EAAAA,QAAQ,UAAY,CAC7C,MAAO,CACL,UAAW,SAAmBzL,EAAO,CACnCA,EAAM,eAAc,EACpB4F,EAAS,CACP,KAAM4C,GACN,SAAUxI,EAAM,SAChB,qBAAsByB,CAChC,CAAS,CACF,EACD,QAAS,SAAiBzB,EAAO,CAC/BA,EAAM,eAAc,EACpB4F,EAAS,CACP,KAAM6C,GACN,SAAUzI,EAAM,SAChB,qBAAsByB,CAChC,CAAS,CACF,EACD,KAAM,SAAczB,EAAO,CACpBqL,EAAO,QAAQ,MAAM,SAI1BrL,EAAM,eAAc,EACpB4F,EAAS,CACP,KAAM+C,GACN,qBAAsBlH,CAChC,CAAS,EACF,EACD,IAAK,SAAazB,EAAO,CAClBqL,EAAO,QAAQ,MAAM,SAI1BrL,EAAM,eAAc,EACpB4F,EAAS,CACP,KAAMgD,GACN,qBAAsBnH,CAChC,CAAS,EACF,EACD,OAAQ,UAAkB,CACxB,IAAIiK,EAAcL,EAAO,QAAQ,OAE7BK,EAAY,QAAUA,EAAY,YAAcA,EAAY,cAAgBA,EAAY,iBAAmB,KAC7G9F,EAAS,CACP,KAAM8C,EAClB,CAAW,CAEJ,EACD,MAAO,SAAe1I,EAAO,CAC3B,IAAI0L,EAAcL,EAAO,QAAQ,MAE7B,CAACK,EAAY,QAAUA,EAAY,iBAAmB,GAAK1L,EAAM,QAAU,MAK/EA,EAAM,eAAc,EACpB4F,EAAS,CACP,KAAMiD,GACN,qBAAsBpH,CAChC,CAAS,EACF,CACP,CACG,EAAE,CAACmE,EAAUyF,EAAQ5J,CAAoB,CAAC,EAEvCkK,GAAgBlG,cAAY,SAAUmG,EAAY,CACpD,OAAO7Q,EAAS,CACd,GAAIoQ,EAAW,QACf,QAASA,EAAW,OACrB,EAAES,CAAU,CACjB,EAAK,CAACT,CAAU,CAAC,EACXU,GAAepG,EAAAA,YAAY,SAAUqG,EAAOC,EAAQ,CACtD,IAAIC,EAEAtN,EAAOoN,IAAU,OAAS,CAAE,EAAGA,EAC/BG,EAAevN,EAAK,aACpBwN,EAAcxN,EAAK,OACnByN,EAASD,IAAgB,OAAS,MAAQA,EAC1C3L,EAAM7B,EAAK,IACXgJ,EAAOlN,GAA8BkE,EAAM0L,EAAW,EAEtD1J,EAAQqL,IAAW,OAAS,CAAA,EAAKA,EACT,OAAArL,EAAM,iBAI3B3F,GAAUiR,EAAY,CAAA,EAAIA,EAAUG,CAAM,EAAIhM,GAAWI,EAAK,SAAU/B,GAAU,CACvFsM,EAAQ,QAAUtM,EACxB,CAAK,EAAGwN,EAAU,GAAKb,EAAW,OAAQa,EAAU,KAAO,UAAWA,EAAU,iBAAiB,EAAIb,EAAW,QAASa,EAAU,aAAepM,GAAqBqM,EAAc,UAAY,CAC3LrG,EAAS,CACP,KAAMoD,EACd,CAAO,CACP,CAAK,EAAGgD,GAAYtE,CAAI,CACrB,EAAE,CAAC9B,EAAU2F,EAAuBJ,CAAU,CAAC,EAC5CiB,GAAe3G,cAAY,SAAU4G,EAAQ,CAC/C,IAAIC,EAAWC,EAEX3E,EAAQyE,IAAW,OAAS,CAAE,EAAGA,EACjCxH,EAAO+C,EAAM,KACb5F,EAAQ4F,EAAM,MACd4E,EAAe5E,EAAM,OACrBuE,EAASK,IAAiB,OAAS,MAAQA,EAC3CjM,EAAMqH,EAAM,IACZ6E,EAAc7E,EAAM,YACpB8E,GAAU9E,EAAM,QAChBA,EAAM,QACN,IAAIF,GAAOlN,GAA8BoN,EAAOyC,EAAY,EAE5DsC,GAAkBtB,EAAO,QACzBuB,EAAcD,GAAgB,MAC9BjB,GAAciB,GAAgB,MAC9BE,GAAYjI,GAAa5C,EAAO6C,EAAM+H,EAAY,KAAK,EAE3D,GAAIC,GAAY,EACd,MAAM,IAAI,MAAM,iDAAiD,EAGnE,IAAIC,GAAc,UACdC,GAAqBL,GAErBM,GAAsB,UAA+B,CACnDhL,IAAU0J,GAAY,mBAI1B1D,EAAgB,QAAU,GAC1BpC,EAAS,CACP,KAAMqD,GACN,MAAOjH,CACf,CAAO,EACP,EAEQiL,GAAkB,UAA2B,CAC/CrH,EAAS,CACP,KAAMsD,GACN,MAAOlH,CACf,CAAO,EAEG+I,EAAS,SACXA,EAAS,QAAQ,OAEzB,EAEI,OAAOhQ,GAAUuR,EAAY,CAAA,EAAIA,EAAUH,CAAM,EAAIhM,GAAWI,EAAK,SAAU2M,EAAU,CACnFA,IACFrF,EAAS,QAAQsD,EAAW,UAAU0B,EAAS,CAAC,EAAIK,EAE5D,CAAK,EAAGZ,EAAU,KAAO,SAAUA,EAAU,eAAe,EAAI,IAAMO,KAAcnB,GAAY,kBAAmBY,EAAU,GAAKnB,EAAW,UAAU0B,EAAS,EAAGP,GAAY,CAAC5E,GAAK,WAAa6E,EAAQ,CACpM,YAAa3M,GAAqB6M,EAAaO,EAAmB,CACxE,EAAOT,EAAMO,EAAW,EAAIlN,GAAqBmN,GAAoBE,EAAe,EAAGV,GAAQ7E,EAAI,CAChG,EAAE,CAAC9B,EAAUyF,EAAQrD,EAAiBmD,CAAU,CAAC,EAC9CgC,GAAuB1H,cAAY,SAAU2H,EAAQ,CACvD,IAAIC,EAEAC,EAAQF,IAAW,OAAS,CAAE,EAAGA,EACjCV,EAAUY,EAAM,QAChBA,EAAM,QACN,IAAIC,EAAeD,EAAM,OACzBnB,EAASoB,IAAiB,OAAS,MAAQA,EAC3ChN,EAAM+M,EAAM,IACZ5F,EAAOlN,GAA8B8S,EAAOhD,EAAU,EAEtDkD,EAA0B,UAAmC,CAC/D5H,EAAS,CACP,KAAMuD,EACd,CAAO,EAEG,CAACkC,EAAO,QAAQ,MAAM,QAAUN,EAAS,SAC3CA,EAAS,QAAQ,OAEzB,EAEI,OAAOhQ,GAAUsS,EAAY,CAAA,EAAIA,EAAUlB,CAAM,EAAIhM,GAAWI,EAAK,SAAUkN,EAAkB,CAC/FzC,EAAgB,QAAUyC,CAC3B,CAAA,EAAGJ,EAAU,GAAKlC,EAAW,eAAgBkC,EAAU,SAAW,GAAIA,GAAY,CAAC3F,EAAK,UAAY3M,EAAS,CAAA,EAAI,CAChH,QAAS6E,GAAqB8M,EAASc,CAAuB,CACpE,CAAK,EAAG9F,CAAI,CACT,EAAE,CAAC9B,EAAUyF,EAAQF,CAAU,CAAC,EAC7BuC,GAAgBjI,EAAAA,YAAY,SAAUkI,EAAQC,EAAQ,CACxD,IAAIC,EAEAC,EAAQH,IAAW,OAAS,CAAE,EAAGA,EACjCI,EAAYD,EAAM,UAClBE,EAAWF,EAAM,SACjBG,EAAUH,EAAM,QAChBI,EAASJ,EAAM,OACfA,EAAM,aACN,IAAIK,EAAeL,EAAM,OACzB3B,EAASgC,IAAiB,OAAS,MAAQA,EAC3C5N,GAAMuN,EAAM,IACZpG,GAAOlN,GAA8BsT,EAAOvD,EAAU,EAEtD6D,GAAQR,IAAW,OAAS,CAAA,EAAKA,EACTQ,GAAM,iBAIlC,IAAI1C,EAAcL,EAAO,QAAQ,MAE7BgD,GAAqB,SAA4BrO,GAAO,CAC1D,IAAInF,GAAMsG,GAAkBnB,EAAK,EAE7BnF,IAAO2Q,EAAqB3Q,EAAG,GACjC2Q,EAAqB3Q,EAAG,EAAEmF,EAAK,CAEvC,EAEQsO,GAAoB,SAA2BtO,GAAO,CACxD4F,EAAS,CACP,KAAMkD,GACN,WAAY9I,GAAM,OAAO,KACjC,CAAO,CACP,EAEQuO,GAAkB,UAA2B,CAE3C7C,EAAY,QAAU,CAAC1E,EAAyB,QAAQ,aAC1DpB,EAAS,CACP,KAAMmD,GACN,WAAY,EACtB,CAAS,CAET,EAIQyF,GAAc,WACdC,GAAgB,CAAA,EAEpB,GAAI,CAAC/G,GAAK,SAAU,CAClB,IAAIgH,GAEJD,IAAiBC,GAAiB,GAAIA,GAAeF,EAAW,EAAI5O,GAAqBoO,EAAUC,EAASK,EAAiB,EAAGI,GAAe,UAAY9O,GAAqBmO,EAAWM,EAAkB,EAAGK,GAAe,OAAS9O,GAAqBsO,EAAQK,EAAe,EAAGG,IAGzR,OAAO3T,GAAU8S,EAAY,CAAA,EAAIA,EAAU1B,CAAM,EAAIhM,GAAWI,GAAK,SAAUoO,EAAW,CACxF5D,EAAS,QAAU4D,CACzB,CAAK,EAAGd,EAAU,GAAK1C,EAAW,QAAS0C,EAAU,mBAAmB,EAAI,OAAQA,EAAU,eAAe,EAAI1C,EAAW,OAAQ0C,GAAYnC,EAAY,QAAUA,EAAY,iBAAmB,IAAM,CACrM,wBAAyBP,EAAW,UAAUO,EAAY,gBAAgB,CAChF,EAAO,CACD,kBAAmBP,EAAW,QAG9B,aAAc,MACd,MAAOO,EAAY,UACzB,EAAO+C,GAAe/G,EAAI,CAC1B,EAAK,CAAC9B,EAAU4F,EAAsBH,EAAQrE,EAA0BuE,EAAuBJ,CAAU,CAAC,EACpGyD,GAAmBnJ,EAAAA,YAAY,SAAUoJ,EAAQC,EAAQ,CAC3D,IAAIC,EAEAC,EAAQH,IAAW,OAAS,CAAE,EAAGA,EACjCI,EAAeD,EAAM,OACrB7C,EAAS8C,IAAiB,OAAS,MAAQA,EAC3C1O,EAAMyO,EAAM,IACZtH,EAAOlN,GAA8BwU,EAAOxE,EAAU,EAEtD0E,EAAQJ,IAAW,OAAS,CAAA,EAAKA,EACT,OAAAI,EAAM,iBAI3BnU,GAAUgU,EAAY,CAAA,EAAIA,EAAU5C,CAAM,EAAIhM,GAAWI,EAAK,SAAU4O,EAAc,CAC3FlE,EAAY,QAAUkE,CAC5B,CAAK,EAAGJ,EAAU,KAAO,WAAYA,EAAU,eAAe,EAAI,UAAWA,EAAU,WAAW,EAAI5D,EAAW,OAAQ4D,EAAU,eAAe,EAAI1D,EAAO,QAAQ,MAAM,OAAQ0D,GAAYrH,CAAI,CAChM,EAAE,CAAC2D,EAAQE,EAAuBJ,CAAU,CAAC,EAE1CiE,GAAa3J,EAAAA,YAAY,UAAY,CACvCG,EAAS,CACP,KAAMwD,EACZ,CAAK,CACL,EAAK,CAACxD,CAAQ,CAAC,EACTyJ,GAAY5J,EAAAA,YAAY,UAAY,CACtCG,EAAS,CACP,KAAM0D,EACZ,CAAK,CACL,EAAK,CAAC1D,CAAQ,CAAC,EACT0J,EAAW7J,EAAAA,YAAY,UAAY,CACrCG,EAAS,CACP,KAAMyD,EACZ,CAAK,CACL,EAAK,CAACzD,CAAQ,CAAC,EACT2J,EAAsB9J,cAAY,SAAU+J,EAAqB,CACnE5J,EAAS,CACP,KAAM2D,GACN,iBAAkBiG,CACxB,CAAK,CACL,EAAK,CAAC5J,CAAQ,CAAC,EACT6J,GAAahK,cAAY,SAAUiK,EAAiB,CACtD9J,EAAS,CACP,KAAM4D,GACN,aAAckG,CACpB,CAAK,CACL,EAAK,CAAC9J,CAAQ,CAAC,EACT+J,GAAgBlK,cAAY,SAAUmK,EAAe,CACvDhK,EAAS,CACP,KAAM6D,GACN,WAAYmG,CAClB,CAAK,CACL,EAAK,CAAChK,CAAQ,CAAC,EACTiK,GAAQpK,EAAAA,YAAY,UAAY,CAClCG,EAAS,CACP,KAAM8D,EACZ,CAAK,CACL,EAAK,CAAC9D,CAAQ,CAAC,EACb,MAAO,CAEL,aAAcwG,GACd,cAAeT,GACf,aAAcE,GACd,cAAe6B,GACf,iBAAkBkB,GAClB,qBAAsBzB,GAEtB,WAAYiC,GACZ,SAAUE,EACV,UAAWD,GACX,oBAAqBE,EACrB,cAAeI,GACf,WAAYF,GACZ,MAAOI,GAEP,iBAAkBtJ,EAClB,OAAQ5F,EACR,aAAc+C,EACd,WAAY8C,CAChB,CACA,CAkFA,SAASsJ,GAAsBrM,EAAqB,CAClD,IAAIsM,EAAsBtM,EAAoB,oBAC1CE,EAAoBF,EAAoB,aAC5C,OAAOE,EAAkBoM,CAAmB,EAAI,oBAClD,CAGiB3H,EAAU,MACHA,EAAU,MACVA,EAAU,MAClBA,EAAU,KACDA,EAAU,KACnBA,EAAU,KACXA,EAAU,OACHA,EAAU,OACVA,EAAU,OACTA,EAAU,KACRA,EAAU,KACdA,EAAU,OACNA,EAAU,OACpBA,EAAU,MAAM,CAC3B,iBAAkBA,EAAU,KAC5B,oBAAqBA,EAAU,KAC/B,SAAUA,EAAU,MAAM,CACxB,eAAgBA,EAAU,KAC1B,cAAeA,EAAU,IACzB,KAAMA,EAAU,GACtB,CAAK,CACL,CAAG,EAGarC,GAAe,aACfA,GAAe,aAChBA,GAAe,YCtvHvB,SAASiK,GAAmBC,EAAiB,CACnD,MAAMC,EAASC,KACf,OAAOF,GAAU,kBAAkBC,GACpC,CAIgB,SAAAE,GACfC,EACA7J,EACC,CACD,OAAAA,EAAaA,EAAW,cACjB6J,EAAQ,OACd,CAAC,CAAE,MAAAC,EAAO,MAAAC,KACTD,EAAM,YAAc,EAAA,SAAS9J,CAAU,GACvC+J,EAAM,YAAY,EAAE,SAAS/J,CAAU,CAAA,CAE1C,CAEgB,SAAAgK,GAAWD,EAAe/J,EAAoB,CAC7D,OAAKA,EACE+J,EAAM,MAAM,IAAI,OAAO,IAAI/J,KAAe,IAAI,CAAC,EAAE,OAAO,OAAO,EAD9C,CAAC+J,CAAK,CAE/B,CCjBO,MAAAE,GAAAC,EAAA,WAAqB,SAAA,CAAA,SAAAC,EAAA,OAAAhQ,EAAA,GAAAK,CAAA,EAAAT,EAAA,CAE1B,OAAAqQ,EACCC,GAAC,CAAA,IAAAtQ,EACA,GAAA,KACG,WAAA,OACQ,OAAA,GACL,YAAA,QACM,QAAA,GACL,GAAAS,EACH,IAAA,CACC,QAAAL,EAAA,EAAA,EACkB,SAAA,WACZ,UAAA,SACC,UAAA,GACA,EACZ,SAAAgQ,CAEC,CAAA,CACF,CAGH,yMCpBO,MAAAG,GAAAJ,EAAA,WAAA,SAAA,CAAA,SAAAC,EAAA,aAAAI,EAAA,cAAAC,EAAA,GAAA,GAAAhQ,CAAA,EAAAT,EAAA,CAON,OAAAqQ,EACCC,GAAC,CAAA,IAAAtQ,EACA,GAAA,KACG,WAAAwQ,EAAA,QAAA,OACkC,SAAA,EAC3B,SAAA,IACA,aAAA,GACE,YAAA,QACA,IAAA,CACP,OAAAC,EAAA,UAAA,OACgC,UAAA,CACzB,gBAAAA,EAAAC,GAAA,gBAAA,MAGP,EACJ,iBAAA,CAAA,aAAA,MAAA,CACyC,EAC1C,GAAAjQ,EACI,SAAA2P,CAEH,CAAA,CAGJ,CAAA,+UClCO,SAASO,IAAsB,CAEpC,OAAAN,EAACE,GAAiB,CAAA,aAAc,GAAO,cAAe,GACrD,SAAAK,GAACC,GAAK,CAAA,IAAK,EAAG,WAAW,SACxB,SAAA,CAAAR,EAACS,GAAY,CAAA,KAAK,KAAK,aAAW,UAAU,EAC5CT,EAACU,IAAK,SAAO,SAAA,CAAA,CAAA,CACd,CAAA,CACD,CAAA,CAEF,CCTO,SAASC,IAAoB,CAElC,OAAAX,EAACE,GAAiB,CAAA,aAAc,GAAO,cAAe,GACrD,SAAAK,GAACC,GAAK,CAAA,WAAW,SAAS,IAAK,GAC9B,SAAA,CAAAR,EAACY,IAAgB,MAAM,QAAQ,IAAK,CAAE,WAAY,GAAK,EACvDZ,EAACU,IAAK,SAAqB,uBAAA,CAAA,CAAA,CAC5B,CAAA,CACD,CAAA,CAEF,CCTO,SAAAG,GAAA,CAAkC,QAAAC,CAEzC,EAAA,CACC,OAAAd,EAAAE,GAAA,CAAA,aAAA,GAAA,cAAA,GAAA,SAAAF,EAAAU,GAAA,CAAA,SAAAI,CAAA,CAAA,CAAA,CAAA,CAKD,iOCPO,MAAAC,GAAAjB,EAAAA,WAAA,SAAA1P,EAAAT,EAAA,CAIN,OAAAqQ,EACCgB,GAAC,CAAA,IAAArR,EACA,aAAA,cACW,KAAAsR,GACL,GAAA7Q,CACF,CAAA,CAGP,CAAA,EAEO8Q,GAAApB,EAAAA,WAAA,SAAA1P,EAAAT,EAAA,CAIN,OAAAqQ,EACCgB,GAAC,CAAA,IAAArR,EACA,aAAA,cACW,KAAAwR,GACL,GAAA/Q,CACF,CAAA,CAGP,CAAA,EAMA4Q,GAAAlB,EAAA,WAA2B,SAAA,CAAA,SAAAsB,EAAA,KAAAC,EAAA,GAAAjR,CAAA,EAAAT,EAAA,CAEzB,OAAAqQ,EACCsB,GAAC,CAAA,IAAA3R,EACA,SAAAyR,EACA,IAAA,CACK,QAAA,OACK,WAAA,SACG,eAAA,SACI,MAAA,OACT,OAAA,OACC,SAAA,WACE,IAAA,MACL,MAAA,QAAAG,GAAA,EAAA,OAAAC,GAAA,YAAA,QACkD,UAAA,mBAC5C,QAAAJ,EAAA,GAAA,OACe,MAAAf,GAAA,iBACR,UAAA,CAAA,MAAAA,GAAA,cAAA,EAC4B,GAAAoB,EAC3C,EACJ,GAAArR,EACI,SAAA4P,EAAAqB,EAAA,CAAA,KAAA,KAAA,OAAA,OAAA,MAAA,UAAA,CAE0C,CAAA,CAC/C,CAGH,kQCDO,SAAAK,GAAA,CAA4D,MAAA/B,EAClE,kBAAAgC,EACA,SAAAC,EACA,KAAAC,EACA,QAAAf,EACA,QAAAgB,EACA,QAAAjO,EACA,SAAAuN,EACA,MAAAW,EACA,SAAAC,EAAA,KACyB,oBAAAC,EAAA,GACH,UAAAC,EAAA,GACV,WAAAC,EAAAC,GACC,oBAAAC,EAAA,oBACS,QAAAC,EACtB,aAAAC,EACA,UAAAC,EACA,WAAAC,CAED,EAAA,CAEC,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,IAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,IAAA,EACA,CAAA,OAAAG,EAAA,WAAAC,CAAA,EAAAC,GAAAP,EAAAG,EAAA,CAA0D,UAAA,eAC9C,UAAA,CAAA,CAAA,KAAA,SAAA,QAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CACgD,CAAA,EAG5D,CAAA,SAAAK,EAAA,GAAAC,GAAA,CAAqC,GAAAC,GAAA,CAAA,MAAArB,EAAA,SAAAC,EAAA,QAAAF,CAAA,CAAA,EACyB,aAAAP,GAAA,CAAA,CACnC,EAG3B,CAAA,IAAAlH,EAAA,GAAAgJ,CAAA,EAAAb,EAAA,mBAEA,OAAAxC,EACCsD,GAAC,CAAA,MAAA3D,EACA,kBAAAgC,EACA,SAAA,EAAAC,EAC0B,KAAAC,EAC1B,QAAAf,EACA,QAAAgB,EACA,GAAAjO,EACI,SAAA0P,GAAAhD,GAGH,MAAC,CAAA,IAAA,CAAA,SAAA,WAAA,SAAA2C,CAAA,EACsC,IAAAM,GAAA,CAAAb,EAAAtI,CAAA,CAAA,EACA,GAAAgJ,EAClC,SAAA,CAEJrD,EAAA,QAAC,CAAA,IAAA,CAAA,GAAAmD,EAAA,MAAA,MAAA,EACqC,SAAA/B,EACrC,GAAAmC,EACI,GAAAf,EAAA,cAAA,CAAA,KAAA,MAAA,CAAA,CACwC,CAAA,EAC7CP,GAAAjC,EAECkB,GAAC,CAAA,SAAAE,EACA,GAAAoB,EAAA,qBAAA,CACmC,CAAA,EACpC,CAAAP,GAAAC,GAAAM,EAAA,cAAAxC,EAGAe,GAAC,CAAA,SAAAK,EACA,QAAAoB,EAAA,KACmB,CAAA,EACpBxC,EAED,MAAC,CAAA,IAAA8C,EACK,MAAAC,EAAA,OACS,GAAAC,EAAA,OACC,IAAA,CAAA,SAAAE,EAAA,OAAA,EAAA,MAAA,MAAA,EAC2B,SAAAlD,EAE1CH,GAAC,CAAA,GAAA2C,EAAA,aAAA,EAC2B,OAAAA,EAAA,OACT,SAAAA,EAAA,QAAAxC,EAAAyD,EAAAA,SAAA,CAAA,SAAAnB,EAAAtC,EAAAM,GAAA,CAAA,CAAA,EAAAiC,EAAAvC,EAAAW,GAAA,EAAA,EAAAX,EAAAyD,EAAAA,SAAA,CAAA,SAAAhB,GAAA,MAAAA,EAAA,OAAAA,EAAA,IAAA,CAAAxO,EAAA7C,IAAA,CAYZ,MAAA+O,EAAAqC,EAAA,mBAAApR,EAEA,OAAA4O,EACCE,GAAC,CAAA,aAAAC,EAEA,cAAA,GACe,GAAAqC,EAAA,aAAA,CAAA,KAAAvO,EAAA,MAAA7C,CAAA,CAAA,EAC2B,SAAA+Q,EAAAlO,EAAAuO,EAAA,UAAA,CAEJ,EAAA,GAAAvO,EAAA,QAAA7C,GALjB,CAMtB,CAAA,EAAA4O,EAIFa,GAAC,CAAA,QAAAwB,CACS,CAAA,CAAA,CAAA,CAAA,CAAA,CAKd,CAAA,CAEF,CAAA,CACD,CAAA,CAAA,CACD,CAAA,CAIJ,CAEO,SAAAD,GAAAnO,EAAA2B,EAAA,CAIN,OAAAgK,GAAA3L,EAAA,MAAA2B,CAAA,EAAA,IAAA,CAAA8N,EAAAtS,IACCsS,EAAA,YAAA,IAAA9N,EAAA,YAAA,EAECoK,EACCU,GAAC,CAAA,GAAA,OAEG,MAAA,SACG,WAAA,OACK,IAAA,CAAA,WAAA,MAAA,EACe,SAAAgD,CAEzB,EAAAtS,CANI,EAUR4O,EAAAU,GAAA,CAAA,GAAA,OAAA,MAAA,SAAA,SAAAgD,CAAA,EAAAtS,CAAA,CAGC,CAGH,+tGC/LO,SAAAuS,GAAAvT,EAAA,CAGN,MAAAyD,EAAAuL,GAAAhP,EAAA,EAAA,EACA,CAAAqS,EAAAmB,CAAA,EAAAhB,EAAAA,SAAAxS,EAAA,OAAA,EAEAoS,EAAA3I,GAAA,CAAsC,aAAAzJ,EAAA,MACjB,QAAAyD,EACpB,MAAA4O,GAAA,CAAA,EACsB,aAAAxO,IAAAA,GAAA,YAAAA,EAAA,QAAA,GACiB,qBAAA,CAAA,CAAA,aAAAnB,EAAA,QAAA,QAEtC4E,EAAAtH,EAAA,WAAA,MAAAsH,EAAA,KAAAtH,EAAA0C,EAA6B,EAC9B,mBAAA,CAAA,CAAA,WAAA8C,KAAA,CAECA,GAAAA,GAAA,YAAAA,EAAA,gBAAA,GACAgO,EAAApE,GAAApP,EAAA,QAAAwF,CAAA,CAAA,CAAsD,EACvD,eAAA,CAAA,CAAA,OAAA7F,KAAA,CAICA,GAAY6T,EAAApE,GAAApP,EAAA,QAAA,EAAA,CAAA,CAA8C,EAC3D,aAAA,CAAAD,EAAA0T,IAAA,OAEC,KAAA,CAAA,KAAAC,EAAA,QAAAvR,CAAA,EAAAsR,EACA,OAAAC,EAAA,CAA8B,KAAAjK,GAAA,iBAAA,UAG5B,MAAA,CAAO,GAAAtH,EACH,aAAAmF,EAAAvH,EAAA,eAAA,YAAAuH,EAAA,QAAA,EACsC,EAC1C,QAEA,OAAAnF,CAAO,CACT,CACD,CAAA,EAGD,OAAAyN,EACC0B,GAAC,CAAA,UAAAc,EACA,WAAAC,EACA,QAAA5O,EACA,GAAAzD,CACI,CAAA,CAGP,o6EC/D0F,SAAS/F,GAAEa,EAAEX,EAAEF,EAAE,CAAC,IAAIH,EAAE,KAAKqB,EAAEN,EAAC,OAAC,IAAI,EAAE,EAAEA,EAAC,OAAC,CAAC,EAAET,EAAES,EAAAA,OAAE,IAAI,EAAEL,EAAEK,EAAAA,OAAE,CAAE,CAAA,EAAEJ,EAAEI,EAAAA,SAAIE,EAAEF,EAAAA,OAAG,EAACX,EAAEW,EAAAA,OAAEC,CAAC,EAAEH,EAAEE,EAAC,OAAC,EAAE,EAAEH,EAAAA,UAAE,UAAU,CAACR,EAAE,QAAQY,CAAC,EAAE,CAACA,CAAC,CAAC,EAAE,IAAIT,EAAE,CAACF,GAAOA,IAAJ,GAAoB,OAAO,OAApB,IAA2B,GAAe,OAAOW,GAAnB,WAAqB,MAAM,IAAI,UAAU,qBAAqB,EAAEX,EAAE,CAACA,GAAG,EAAE,IAAIa,EAAE,CAAC,EAAEf,EAAEA,GAAG,CAAE,GAAE,QAAQmC,EAAE,EAAE,aAAanC,IAAI,CAAC,CAACA,EAAE,SAASgB,EAAE,YAAYhB,EAAE,EAAEgB,EAAE,KAAK,IAAI,CAAChB,EAAE,SAAS,EAAEE,CAAC,EAAE,KAAKO,EAAC,UAAC,UAAU,CAAC,OAAOC,EAAE,QAAQ,GAAG,UAAU,CAACA,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,IAAIL,EAAE2B,EAAAA,QAAE,UAAU,CAAC,IAAIpB,EAAE,SAASA,EAAE,CAAC,IAAIH,EAAEF,EAAE,QAAQyB,EAAExB,EAAE,QAAQ,OAAOD,EAAE,QAAQC,EAAE,QAAQ,KAAK,EAAE,QAAQI,EAAEE,EAAE,QAAQb,EAAE,QAAQ,MAAM+B,EAAEvB,CAAC,CAAC,EAAEA,EAAE,SAASG,EAAEH,EAAE,CAACL,GAAG,qBAAqBD,EAAE,OAAO,EAAEA,EAAE,QAAQC,EAAE,sBAAsBQ,CAAC,EAAE,WAAWA,EAAEH,CAAC,CAAC,EAAEuB,EAAE,SAASpB,EAAE,CAAC,GAAG,CAACF,EAAE,QAAQ,MAAM,GAAG,IAAID,EAAEG,EAAEM,EAAE,QAAQ,MAAM,CAACA,EAAE,SAAST,GAAGP,GAAGO,EAAE,GAAGO,GAAGJ,EAAE,EAAE,SAAS,CAAC,EAAEC,EAAE,SAASJ,EAAE,CAAC,OAAON,EAAE,QAAQ,KAAKgC,GAAG5B,EAAE,QAAQK,EAAEH,CAAC,GAAGF,EAAE,QAAQC,EAAE,QAAQ,KAAKM,EAAE,QAAQ,EAAEd,EAAE,SAASY,GAAG,CAAC,IAAIZ,EAAE,KAAK,IAAK,EAAC,GAAGgC,EAAEhC,CAAC,EAAE,OAAOa,EAAEb,CAAC,EAAE,GAAGU,EAAE,QAAQ,CAAC,IAAIb,EAAEK,GAAGF,EAAEkB,EAAE,SAASf,EAAEa,EAAE,KAAK,IAAInB,EAAE,GAAGG,EAAE,EAAE,QAAQ,EAAEH,EAAEY,EAAEG,EAAET,CAAC,EAAE,EAAEE,EAAE,UAAU,CAAC,IAAIQ,EAAE,KAAK,IAAK,EAACZ,EAAE+B,EAAEnB,CAAC,EAAE,GAAGN,EAAE,QAAQ,CAAE,EAAC,MAAM,KAAK,SAAS,EAAEC,EAAE,QAAQX,EAAEqB,EAAE,QAAQL,EAAEZ,EAAE,CAAC,GAAG,CAACE,EAAE,SAASO,EAAE,QAAQ,OAAO,EAAE,QAAQQ,EAAE,QAAQT,EAAET,EAAEE,CAAC,EAAEa,EAAEH,EAAEM,EAAE,OAAO,EAAEJ,EAAE,QAAQ,GAAGE,EAAE,OAAOP,EAAET,EAAEE,CAAC,EAAEU,EAAEM,EAAE,OAAO,EAAE,OAAOf,EAAE,SAASM,EAAET,EAAEE,CAAC,EAAEY,EAAE,OAAO,EAAE,OAAOT,EAAE,OAAO,UAAU,CAACF,EAAE,UAAUC,EAAE,qBAAqBD,EAAE,OAAO,EAAE,aAAaA,EAAE,OAAO,GAAG,EAAE,QAAQ,EAAEI,EAAE,QAAQW,EAAE,QAAQV,EAAE,QAAQL,EAAE,QAAQ,IAAI,EAAEE,EAAE,UAAU,UAAU,CAAC,MAAM,CAAC,CAACF,EAAE,OAAO,EAAEE,EAAE,MAAM,UAAU,CAAC,OAAOF,EAAE,QAAQU,EAAE,KAAK,IAAG,CAAE,EAAEC,EAAE,OAAO,EAAET,CAAC,EAAE,CAACU,EAAEC,EAAEd,EAAE,EAAEiC,EAAE/B,CAAC,CAAC,EAAE,OAAOC,CAAC,CAAC,SAASR,GAAEe,EAAEH,EAAE,CAAC,OAAOG,IAAIH,CAAC,CAAC,SAASS,GAAEN,EAAE,CAAC,OAAkB,OAAOA,GAAnB,WAAqB,UAAU,CAAC,OAAOA,CAAC,EAAEA,CAAC,CAAC,SAASsB,GAAEzB,EAAE,EAAEyB,EAAE,CAAC,IAAI/B,EAAEI,EAAEC,EAAE0B,GAAGA,EAAE,YAAYrC,GAAEiB,GAAGX,EAAED,EAAAA,SAAEgB,GAAET,CAAC,CAAC,EAAEF,EAAEJ,EAAE,CAAC,EAAE,CAACA,EAAE,CAAC,EAAEU,cAAE,SAASD,EAAE,CAAC,OAAOL,EAAEW,GAAEN,CAAC,CAAC,CAAC,EAAE,CAAA,CAAE,CAAC,GAAGX,EAAEa,EAAE,CAAC,EAAEJ,EAAEI,EAAE,CAAC,EAAEV,EAAEJ,GAAEa,EAAAA,YAAE,SAASD,EAAE,CAAC,OAAOF,EAAEE,CAAC,CAAC,EAAE,CAACF,CAAC,CAAC,EAAE,EAAEwB,CAAC,EAAEnB,EAAEH,EAAAA,OAAEH,CAAC,EAAE,OAAOD,EAAEO,EAAE,QAAQN,CAAC,IAAIL,EAAEK,CAAC,EAAEM,EAAE,QAAQN,GAAG,CAACR,EAAEG,CAAC,CAAC,CCgBj4D,SAAAsZ,GAAA,CAA6D,YAAAC,EACtD,oBAAA/B,EAAA,GACS,GAAA7R,CAEvB,EAAA,CACC,MAAAyD,EAAAuL,GAAAhP,EAAA,EAAA,EAEA,CAAAD,EAAA8T,CAAA,EAAArB,WAAA,CAIG,WAAA,OACU,QAAA,GACH,aAAA,EACK,CAAA,EAGfsB,EAAAnQ,SAAA,EAAA,EAEAyO,EAAA3I,GAAA,CAAsC,aAAAzJ,EAAA,MACjB,QAAAyD,EACpB,MAAA1D,EAAA,YAAA,CAAA,EAC4B,aAAA8D,IAAAA,GAAA,YAAAA,EAAA,QAAA,GACW,qBAAA,CAAA,CAAA,aAAAnB,EAAA,QAAA,QAEtC4E,EAAAtH,EAAA,WAAA,MAAAsH,EAAA,KAAAtH,EAAA0C,EAA6B,EAC9B,mBAAA,IAAA,CAECoR,EAAA,QAAA,EAAuB,EACxB,aAAA,CAAAC,EAAAN,IAAA,OAEC,KAAA,CAAA,KAAAC,EAAA,QAAAvR,CAAA,EAAAsR,EACA,OAAAC,EAAA,CAA8B,KAAAjK,GAAA,iBAAA,UAG5B,MAAA,CAAO,GAAAtH,EACH,aAAAmF,EAAAyM,EAAA,eAAA,YAAAzM,EAAA,QAAA,EACsC,EAC1C,QAEA,OAAAnF,CAAO,CACT,CACD,CAAA,EAID,CAAA6R,CAAA,EAAAC,GAAA7B,EAAA,WAAA,GAAA,EAEA8B,EAAAzJ,EAAAA,QAAA,IAAA,OAEC,GAAA,CAAAuJ,GAAA5B,EAAA,YAEoCP,GAAAO,EAAA,QAAA,CAAAA,EAAA,aAInC,MAAA,GAGD,MAAA+B,GAAA7M,EAAA8K,EAAA,eAAA,YAAA9K,EAAA,MACA,MAAA,EAAAvH,EAAA,SAEOA,EAAA,cAEA,CAAAqS,EAAA,QAEK+B,GAAAA,IAAAH,GAEiC,CAAAnC,GAAA,CAAAiC,EAAA,QAMtC,EAAA,CACLE,EACF5B,EAAA,WACUA,EAAA,OACAA,EAAA,aACAP,EACV9R,EAAA,QACMA,EAAA,YACA,CAAA,EAIPqU,EAAAzQ,SAAA,CAAA,CAAA,EAEAV,OAAAA,EAAAA,UAAA,IAAA,CACC,eAAAoR,EAAAC,EAAA,CACC,GAAA,CAAAA,EAAwB,OAExB,MAAA9O,GAAAwO,GAAA,YAAAA,EAAA,gBAAA,GAGAO,EAAAH,EAAA,QAAA5O,CAAA,EACA,GAAA+O,EAAA,CACCV,EAAA,CAAS,WAAAU,EACI,QAAA,GACH,aAAA,EACK,CAAA,EAEf,OAIDV,EAAA,CAAA,WAAA,OAAA,QAAA,GAAA,aAAA,EAAA,CAAA,EACA,GAAA,CAEC,MAAAxB,EAAA,MAAAuB,EAAApO,CAAA,EACAgP,EAAApF,GAAAiD,EAAA7M,CAAA,EAEA4O,EAAA,QAAA5O,CAAA,EAAAgP,EAEAX,EAAA,CAAS,WAAAW,EACI,QAAA,GACH,aAAA,EACK,CAAA,CACd,MAAA,CAGDX,EAAA,CAAA,WAAA,OAAA,QAAA,GAAA,aAAA,EAAA,CAAA,CAAsE,CACvE,CAGDQ,EAAAH,CAAA,CAA6B,EAAA,CAAAA,EAAAF,EAAAJ,CAAA,CAAA,EAG9BhE,EACC0B,GAAC,CAAA,UAAAc,EACA,QAAA3O,EACA,QAAA1D,EAAA,QACe,aAAAA,EAAA,aACK,WAAAA,EAAA,WACF,oBAAA8R,EAClB,GAAA7R,CACI,CAAA,CAGP","x_google_ignoreList":[0,1,2,3,4,5,15]}