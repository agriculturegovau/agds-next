{"version":3,"file":"StatusBadge-31570fd0.js","sources":["../../../../packages/react/src/badge/StatusBadge.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Box, Flex } from '../box';\nimport { boxPalette, mapSpacing } from '../core';\nimport { SuccessIcon, AlertIcon, InfoIcon, WarningIcon } from '../icon';\nimport { Text } from '../text';\n\nexport type StatusBadgeProps = {\n\t/** The status that is printed in the text label. */\n\tlabel: ReactNode;\n\t/** The colour tone to apply. */\n\ttone: StatusBadgeTone;\n};\n\nexport const StatusBadge = ({ label, tone }: StatusBadgeProps) => {\n\tconst { borderColor, icon: Icon } = toneMap[tone];\n\treturn (\n\t\t<Flex\n\t\t\tdisplay=\"inline-flex\"\n\t\t\talignItems=\"center\"\n\t\t\tgap={0.5}\n\t\t\theight={height}\n\t\t\tpaddingX={0.75}\n\t\t\tbackground=\"body\"\n\t\t\tborder\n\t\t\tcss={{\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tborderRadius,\n\t\t\t\tborderColor,\n\t\t\t\t'& svg': {\n\t\t\t\t\tflexShrink: 0,\n\t\t\t\t\twidth: iconWidth,\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<Icon />\n\t\t\t<Text\n\t\t\t\tas=\"span\"\n\t\t\t\tfontSize=\"sm\"\n\t\t\t\tlineHeight=\"nospace\"\n\t\t\t\tcss={{ whiteSpace: 'nowrap' }}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Text>\n\t\t</Flex>\n\t);\n};\n\nconst height = mapSpacing(2); // 32px\nconst borderRadius = mapSpacing(1); // 16px\nconst iconWidth = '1.375rem'; // 22px\n\nexport type StatusBadgeTone = keyof typeof toneMap;\n\nconst NeutralDot = () => (\n\t<Box\n\t\thighContrastOutline\n\t\tcss={{\n\t\t\twidth: 8,\n\t\t\theight: 8,\n\t\t\tborderRadius: 4,\n\t\t\tbackgroundColor: boxPalette.foregroundMuted,\n\t\t}}\n\t/>\n);\n\nconst toneMap = {\n\tneutral: {\n\t\tborderColor: boxPalette.border,\n\t\ticon: () => <NeutralDot />,\n\t},\n\tsuccess: {\n\t\tborderColor: boxPalette.systemSuccess,\n\t\ticon: () => <SuccessIcon color=\"success\" />,\n\t},\n\terror: {\n\t\tborderColor: boxPalette.systemError,\n\t\ticon: () => <AlertIcon color=\"error\" />,\n\t},\n\n\tinfo: {\n\t\tborderColor: boxPalette.systemInfo,\n\t\ticon: () => <InfoIcon color=\"info\" />,\n\t},\n\twarning: {\n\t\tborderColor: boxPalette.systemWarning,\n\t\ticon: () => <WarningIcon color=\"warning\" />,\n\t},\n} as const;\n"],"names":["StatusBadge","label","tone","borderColor","Icon","toneMap","jsxs","Flex","height","borderRadius","iconWidth","jsx","Text","mapSpacing","NeutralDot","Box","boxPalette","SuccessIcon","AlertIcon","InfoIcon","WarningIcon"],"mappings":"mRAaO,MAAAA,EAAA,CAAA,CAAA,MAAAC,EAAA,KAAAC,KAAA,CACN,KAAA,CAAA,YAAAC,EAAA,KAAAC,CAAA,EAAAC,EAAAH,CAAA,EACA,OAAAI,EACCC,EAAC,CAAA,QAAA,cACQ,WAAA,SACG,IAAA,GACN,OAAAC,EACL,SAAA,IACU,WAAA,OACC,OAAA,GACL,IAAA,CACD,SAAA,SACM,aAAAC,EACV,YAAAN,EACA,QAAA,CACS,WAAA,EACI,MAAAO,CACL,CACR,EACD,SAAA,CAEAC,EAAAP,EAAA,EAAA,EAAMO,EACNC,EAAC,CAAA,GAAA,OACG,SAAA,KACM,WAAA,UACE,IAAA,CAAA,WAAA,QAAA,EACiB,SAAAX,CAE3B,CAAA,CACF,CAAA,CAAA,CAGH,EAEAO,EAAAK,EAAA,CAAA,EACAJ,EAAAI,EAAA,CAAA,EACAH,EAAA,WAIAI,EAAA,IAAAH,EACCI,EAAC,CAAA,oBAAA,GACmB,IAAA,CACd,MAAA,EACG,OAAA,EACC,aAAA,EACM,gBAAAC,EAAA,eACc,CAC7B,CACD,EAGDX,EAAA,CAAgB,QAAA,CACN,YAAAW,EAAA,OACgB,KAAA,IAAAL,EAAAG,EAAA,EAAA,CACA,EACzB,QAAA,CACS,YAAAE,EAAA,cACgB,KAAA,IAAAL,EAAAM,EAAA,CAAA,MAAA,SAAA,CAAA,CACiB,EAC1C,MAAA,CACO,YAAAD,EAAA,YACkB,KAAA,IAAAL,EAAAO,EAAA,CAAA,MAAA,OAAA,CAAA,CACa,EACtC,KAAA,CAEM,YAAAF,EAAA,WACmB,KAAA,IAAAL,EAAAQ,EAAA,CAAA,MAAA,MAAA,CAAA,CACW,EACpC,QAAA,CACS,YAAAH,EAAA,cACgB,KAAA,IAAAL,EAAAS,EAAA,CAAA,MAAA,SAAA,CAAA,CACiB,CAE3C"}