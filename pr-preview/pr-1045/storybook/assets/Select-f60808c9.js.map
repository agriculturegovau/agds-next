{"version":3,"file":"Select-f60808c9.js","sources":["../../../../packages/react/src/select/Select.tsx"],"sourcesContent":["import {\n\tFragment,\n\tforwardRef,\n\tPropsWithChildren,\n\tSelectHTMLAttributes,\n} from 'react';\nimport { Field } from '../field';\nimport { packs, boxPalette, mapSpacing, tokens, FieldMaxWidth } from '../core';\nimport { ChevronDownIcon } from '../icon';\n\nexport type Option = {\n\tlabel: string;\n\tvalue: string;\n\tdisabled?: boolean;\n};\nexport type OptionGroup = {\n\tlabel: string;\n\tdisabled?: boolean;\n\toptions: Option[];\n};\nexport type Options = (Option | OptionGroup)[];\n\ntype NativeSelectProps = SelectHTMLAttributes<HTMLSelectElement>;\n\ntype BaseSelectProps = {\n\tautoFocus?: NativeSelectProps['autoFocus'];\n\tdisabled?: NativeSelectProps['disabled'];\n\tid?: NativeSelectProps['id'];\n\tname?: NativeSelectProps['name'];\n\tonBlur?: NativeSelectProps['onBlur'];\n\tonChange?: NativeSelectProps['onChange'];\n\tonFocus?: NativeSelectProps['onFocus'];\n\tplaceholder?: NativeSelectProps['placeholder'];\n\tvalue?: NativeSelectProps['value'];\n};\n\ntype SelectMaxWidth = Extract<FieldMaxWidth, 'sm' | 'md' | 'lg' | 'xl'>;\n\nexport type SelectProps = BaseSelectProps & {\n\t/** Describes the purpose of the field. */\n\tlabel: string;\n\t/** If true, \"(optional)\" will never be appended to the label. */\n\thideOptionalLabel?: boolean;\n\t/** The list of options to display in the drop-down list. */\n\toptions: Options;\n\t/** If false, \"(optional)\" will be appended to the label. */\n\trequired?: boolean;\n\t/** Provides extra information about the field. */\n\thint?: string;\n\t/** Message to show when the field is invalid. */\n\tmessage?: string;\n\t/** If true, the invalid state will be rendered. */\n\tinvalid?: boolean;\n\t/** If true, the field will stretch to the fill the width of its container. */\n\tblock?: boolean;\n\t/** The maximum width of the field. */\n\tmaxWidth?: SelectMaxWidth;\n};\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n\tfunction Select(\n\t\t{\n\t\t\tlabel,\n\t\t\thideOptionalLabel,\n\t\t\trequired,\n\t\t\thint,\n\t\t\tmessage,\n\t\t\tinvalid,\n\t\t\tblock,\n\t\t\tmaxWidth = 'md',\n\t\t\toptions,\n\t\t\tplaceholder,\n\t\t\tid,\n\t\t\t...props\n\t\t},\n\t\tref\n\t) {\n\t\tconst styles = selectStyles({ block, invalid });\n\t\treturn (\n\t\t\t<Field\n\t\t\t\tlabel={label}\n\t\t\t\thideOptionalLabel={hideOptionalLabel}\n\t\t\t\trequired={Boolean(required)}\n\t\t\t\thint={hint}\n\t\t\t\tmessage={message}\n\t\t\t\tinvalid={invalid}\n\t\t\t\tid={id}\n\t\t\t>\n\t\t\t\t{(a11yProps) => (\n\t\t\t\t\t<SelectContainer block={block} maxWidth={maxWidth}>\n\t\t\t\t\t\t<select ref={ref} css={styles} {...a11yProps} {...props}>\n\t\t\t\t\t\t\t<SelectOptions options={options} placeholder={placeholder} />\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<SelectIcon disabled={props.disabled} />\n\t\t\t\t\t</SelectContainer>\n\t\t\t\t)}\n\t\t\t</Field>\n\t\t);\n\t}\n);\n\nconst SelectContainer = ({\n\tchildren,\n\tblock,\n\tmaxWidth,\n}: PropsWithChildren<{\n\tblock?: boolean;\n\tmaxWidth: SelectMaxWidth;\n}>) => (\n\t<div\n\t\tcss={{\n\t\t\tposition: 'relative',\n\t\t\t...(!block && {\n\t\t\t\tmaxWidth: tokens.maxWidth.field[maxWidth],\n\t\t\t}),\n\t\t}}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst SelectOptions = ({\n\toptions,\n\tplaceholder,\n}: {\n\toptions: Options;\n\tplaceholder?: string;\n}) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t{placeholder ? <option value=\"\">{placeholder}</option> : null}\n\t\t\t{options.map((opt) => {\n\t\t\t\tif ('options' in opt) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<optgroup key={opt.label} label={opt.label} disabled={opt.disabled}>\n\t\t\t\t\t\t\t{opt.options.map(({ value, label, disabled }) => (\n\t\t\t\t\t\t\t\t<option key={value} value={value} disabled={disabled}>\n\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<option key={opt.value} value={opt.value} disabled={opt.disabled}>\n\t\t\t\t\t\t{opt.label}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Fragment>\n\t);\n};\n\nconst SelectIcon = ({ disabled }: { disabled?: boolean }) => (\n\t<ChevronDownIcon\n\t\tsize=\"sm\"\n\t\tweight=\"bold\"\n\t\tcss={{\n\t\t\tposition: 'absolute',\n\t\t\ttop: '50%',\n\t\t\tright: mapSpacing(1),\n\t\t\ttransform: 'translateY(-50%)',\n\t\t\topacity: disabled ? 0.3 : undefined,\n\t\t\tpointerEvents: 'none',\n\t\t\tcolor: boxPalette.foregroundAction,\n\t\t}}\n\t/>\n);\n\nconst selectStyles = ({\n\tblock,\n\tinvalid,\n}: {\n\tblock?: boolean;\n\tinvalid?: boolean;\n}) =>\n\t({\n\t\tposition: 'relative',\n\t\tappearance: 'none',\n\t\tboxSizing: 'border-box',\n\t\tpaddingLeft: mapSpacing(1),\n\t\tpaddingRight: mapSpacing(3),\n\t\tmargin: 0,\n\t\tbackground: boxPalette.backgroundBody,\n\t\tborderWidth: tokens.borderWidth.lg,\n\t\tborderStyle: 'solid',\n\t\tborderColor: boxPalette.border,\n\t\tborderRadius: tokens.borderRadius,\n\t\tcolor: boxPalette.foregroundText,\n\t\twidth: '100%',\n\t\tfontFamily: tokens.font.body,\n\t\t...packs.input.md,\n\t\tlineHeight: tokens.lineHeight.default,\n\n\t\t...(block && {\n\t\t\tmaxWidth: 'none',\n\t\t\tdisplay: 'block',\n\t\t}),\n\n\t\t...(invalid && {\n\t\t\tbackgroundColor: boxPalette.systemErrorMuted,\n\t\t\tborderColor: boxPalette.systemError,\n\t\t}),\n\n\t\t'&:disabled': {\n\t\t\topacity: 1, // Overwrites default browser styles\n\t\t\tcursor: 'not-allowed',\n\t\t\tborderColor: boxPalette.borderMuted,\n\t\t\tbackgroundColor: boxPalette.backgroundShade,\n\t\t\tcolor: boxPalette.foregroundMuted,\n\t\t},\n\n\t\t'&:focus': packs.outline,\n\t} as const);\n"],"names":["Select","forwardRef","label","hideOptionalLabel","required","hint","message","invalid","block","maxWidth","options","placeholder","id","props","ref","styles","selectStyles","jsx","Field","a11yProps","jsxs","SelectContainer","SelectOptions","SelectIcon","children","tokens","Fragment","opt","value","disabled","ChevronDownIcon","mapSpacing","boxPalette","packs"],"mappings":"iQA2DO,MAAAA,EAAAC,EAAA,WAAe,SAAA,CAEpB,MAAAC,EACC,kBAAAC,EACA,SAAAC,EACA,KAAAC,EACA,QAAAC,EACA,QAAAC,EACA,MAAAC,EACA,SAAAC,EAAA,KACW,QAAAC,EACX,YAAAC,EACA,GAAAC,EACA,GAAAC,CACG,EAAAC,EAAA,CAIJ,MAAAC,EAAAC,EAAA,CAAA,MAAAR,EAAA,QAAAD,CAAA,CAAA,EACA,OAAAU,EACCC,EAAC,CAAA,MAAAhB,EACA,kBAAAC,EACA,SAAA,EAAAC,EAC0B,KAAAC,EAC1B,QAAAC,EACA,QAAAC,EACA,GAAAK,EACA,SAAAO,GAAAC,EAAAC,EAAA,CAAA,MAAAb,EAAA,SAAAC,EAAA,SAAA,CAIEQ,EAAA,SAAA,CAAA,IAAAH,EAAA,IAAAC,EAAA,GAAAI,EAAA,GAAAN,EAAA,SAAAI,EAAAK,EAAA,CAAA,QAAAZ,EAAA,YAAAC,CAAA,CAAA,EAAA,EAEAM,EAAAM,EAAA,CAAA,SAAAV,EAAA,QAAA,CAAA,CACsC,EAAA,CACvC,CAAA,CAEF,CAGH,EAEAQ,EAAA,CAAA,CAAyB,SAAAG,EACxB,MAAAhB,EACA,SAAAC,CAED,IAAAQ,EAIC,MAAC,CAAA,IAAA,CACK,SAAA,WACM,GAAA,CAAAT,GAAA,CACI,SAAAiB,EAAA,SAAA,MAAAhB,CAAA,CAC2B,CACzC,EACD,SAAAe,CAEC,CACF,EAGDF,EAAA,CAAA,CAAuB,QAAAZ,EACtB,YAAAC,CAED,IAICS,EAAAM,WAAA,CAAA,SAAA,CAEGf,EAAAM,EAAA,SAAA,CAAA,MAAA,GAAA,SAAAN,CAAA,CAAA,EAAA,KAAwDD,EAAA,IAAAiB,GAExD,YAAAA,EACCV,EAAA,WAAA,CAAA,MAAAU,EAAA,MAAA,SAAAA,EAAA,SAAA,SAAAA,EAAA,QAAA,IAAA,CAAA,CAAA,MAAAC,EAAA,MAAA1B,EAAA,SAAA2B,CAAA,IAAAZ,EAAA,SAAA,CAAA,MAAAW,EAAA,SAAAC,EAAA,SAAA3B,CAAA,EAAA0B,CAAA,CAAA,CAAA,EAAAD,EAAA,KAAA,EAUDV,EAAA,SAAA,CAAA,MAAAU,EAAA,MAAA,SAAAA,EAAA,SAAA,SAAAA,EAAA,KAAA,EAAAA,EAAA,KAAA,CAGC,CAED,CAAA,CAAA,EAKJJ,EAAA,CAAA,CAAA,SAAAM,CAAA,IAAAZ,EACCa,EAAC,CAAA,KAAA,KACK,OAAA,OACE,IAAA,CACF,SAAA,WACM,IAAA,MACL,MAAAC,EAAA,CAAA,EACc,UAAA,mBACR,QAAAF,EAAA,GAAA,OACe,cAAA,OACX,MAAAG,EAAA,gBACG,CACnB,CACD,EAGDhB,EAAA,CAAA,CAAsB,MAAAR,EACrB,QAAAD,CAED,KAAA,CAIE,SAAA,WACU,WAAA,OACE,UAAA,aACD,YAAAwB,EAAA,CAAA,EACc,aAAAA,EAAA,CAAA,EACC,OAAA,EAClB,WAAAC,EAAA,eACe,YAAAP,EAAA,YAAA,GACS,YAAA,QACnB,YAAAO,EAAA,OACW,aAAAP,EAAA,aACH,MAAAO,EAAA,eACH,MAAA,OACX,WAAAP,EAAA,KAAA,KACiB,GAAAQ,EAAA,MAAA,GACT,WAAAR,EAAA,WAAA,QACe,GAAAjB,GAAA,CAEjB,SAAA,OACF,QAAA,OACD,EACV,GAAAD,GAAA,CAEe,gBAAAyB,EAAA,iBACc,YAAAA,EAAA,WACJ,EACzB,aAAA,CAEc,QAAA,EACJ,OAAA,cACD,YAAAA,EAAA,YACgB,gBAAAA,EAAA,gBACI,MAAAA,EAAA,eACV,EACnB,UAAAC,EAAA,OAGD"}