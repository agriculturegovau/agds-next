{"version":3,"file":"filesize.esm-100d58b1.js","sources":["../../../../node_modules/filesize/lib/filesize.esm.js"],"sourcesContent":["/**\n * filesize\n *\n * @copyright 2022 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 8.0.7\n */\nconst b = /^(b|B)$/,\r\n\tsymbol = {\r\n\t\tiec: {\r\n\t\t\tbits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\r\n\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t},\r\n\t\tjedec: {\r\n\t\t\tbits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\r\n\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t}\r\n\t},\r\n\tfullform = {\r\n\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t},\r\n\troundingFuncs = {\r\n\t\tfloor: Math.floor,\r\n\t\tceil: Math.ceil\r\n\t};\r\n\r\n/**\r\n * filesize\r\n *\r\n * @method filesize\r\n * @param  {Mixed}   arg        String, Int or Float to transform\r\n * @param  {Object}  descriptor [Optional] Flags\r\n * @return {String}             Readable file size String\r\n */\r\nfunction filesize (arg, descriptor = {}) {\r\n\tlet result = [],\r\n\t\tval = 0,\r\n\t\te, base, bits, ceil, full, fullforms, locale, localeOptions, neg, num, output, pad, round, u, unix, separator, spacer, standard, symbols, roundingFunc, precision;\r\n\r\n\tif (isNaN(arg)) {\r\n\t\tthrow new TypeError(\"Invalid number\");\r\n\t}\r\n\r\n\tbits = descriptor.bits === true;\r\n\tunix = descriptor.unix === true;\r\n\tpad = descriptor.pad === true;\r\n\tbase = descriptor.base || 10;\r\n\tround = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\r\n\tlocale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\r\n\tlocaleOptions = descriptor.localeOptions || {};\r\n\tseparator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\r\n\tspacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\r\n\tsymbols = descriptor.symbols || {};\r\n\tstandard = base === 2 ? descriptor.standard || \"iec\" : \"jedec\";\r\n\toutput = descriptor.output || \"string\";\r\n\tfull = descriptor.fullform === true;\r\n\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\r\n\te = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\r\n\troundingFunc = roundingFuncs[descriptor.roundingMethod] || Math.round;\r\n\tnum = Number(arg);\r\n\tneg = num < 0;\r\n\tceil = base > 2 ? 1000 : 1024;\r\n\tprecision = isNaN(descriptor.precision) === false ? parseInt(descriptor.precision, 10) : 0;\r\n\r\n\t// Flipping a negative number to determine the size\r\n\tif (neg) {\r\n\t\tnum = -num;\r\n\t}\r\n\r\n\t// Determining the exponent\r\n\tif (e === -1 || isNaN(e)) {\r\n\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\tif (e < 0) {\r\n\t\t\te = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Exceeding supported length, time to reduce & multiply\r\n\tif (e > 8) {\r\n\t\tif (precision > 0) {\r\n\t\t\tprecision += 8 - e;\r\n\t\t}\r\n\r\n\t\te = 8;\r\n\t}\r\n\r\n\tif (output === \"exponent\") {\r\n\t\treturn e;\r\n\t}\r\n\r\n\t// Zero is now a special case because bytes divide by 1\r\n\tif (num === 0) {\r\n\t\tresult[0] = 0;\r\n\t\tu = result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t} else {\r\n\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\tif (bits) {\r\n\t\t\tval = val * 8;\r\n\r\n\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\tval = val / ceil;\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst p = Math.pow(10, e > 0 ? round : 0);\r\n\t\tresult[0] = roundingFunc(val * p) / p;\r\n\r\n\t\tif (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\r\n\t\t\tresult[0] = 1;\r\n\t\t\te++;\r\n\t\t}\r\n\r\n\t\tu = result[1] = base === 10 && e === 1 ? bits ? \"kbit\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\r\n\t\tif (unix) {\r\n\t\t\tresult[1] = result[1].charAt(0);\r\n\r\n\t\t\tif (b.test(result[1])) {\r\n\t\t\t\tresult[0] = Math.floor(result[0]);\r\n\t\t\t\tresult[1] = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Decorating a 'diff'\r\n\tif (neg) {\r\n\t\tresult[0] = -result[0];\r\n\t}\r\n\r\n\t// Setting optional precision\r\n\tif (precision > 0) {\r\n\t\tresult[0] = result[0].toPrecision(precision);\r\n\t}\r\n\r\n\t// Applying custom symbol\r\n\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\tif (locale === true) {\r\n\t\tresult[0] = result[0].toLocaleString();\r\n\t} else if (locale.length > 0) {\r\n\t\tresult[0] = result[0].toLocaleString(locale, localeOptions);\r\n\t} else if (separator.length > 0) {\r\n\t\tresult[0] = result[0].toString().replace(\".\", separator);\r\n\t}\r\n\r\n\tif (pad && Number.isInteger(result[0]) === false && round > 0) {\r\n\t\tconst x = separator || \".\",\r\n\t\t\ttmp = result[0].toString().split(x),\r\n\t\t\ts = tmp[1] || \"\",\r\n\t\t\tl = s.length,\r\n\t\t\tn = round - l;\r\n\r\n\t\tresult[0] = `${tmp[0]}${x}${s.padEnd(l + n, \"0\")}`;\r\n\t}\r\n\r\n\tif (full) {\r\n\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t}\r\n\r\n\t// Returning Array, Object, or String (default)\r\n\treturn output === \"array\" ? result : output === \"object\" ? {value: result[0], symbol: result[1], exponent: e, unit: u} : result.join(spacer);\r\n}\r\n\r\n// Partial application for functional programming\r\nfilesize.partial = opt => arg => filesize(arg, opt);\n\nexport { filesize as default };\n"],"names":["b","symbol","fullform","roundingFuncs","filesize","arg","descriptor","result","val","base","bits","ceil","full","fullforms","locale","localeOptions","neg","num","output","pad","round","u","unix","separator","spacer","standard","symbols","roundingFunc","precision","p","x","tmp","s","l","n","opt"],"mappings":"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","x_google_ignoreList":[0]}