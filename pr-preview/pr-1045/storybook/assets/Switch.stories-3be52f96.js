import{p as a,j as n,B as y,b as s,a as p}from"./Box-3d8e40b9.js";import{r as S}from"./index-42611d8b.js";import{v as C}from"./VisuallyHidden-9a073e6e.js";import{T as v}from"./Text-76115ace.js";import{F as w}from"./Stack-88a94cf9.js";import{a as x,u as T,b as V}from"./react-spring-web.esm-92c11c75.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-7a46b491.js";const m={sm:{borderWidth:a.control.sm.borderWidth,height:a.control.sm.height,thumbCheckedPos:"1.25rem",width:"2.75rem"},md:{borderWidth:a.control.md.borderWidth,height:a.control.md.height,thumbCheckedPos:"1.5rem",width:"3.5rem"}},l=({children:e,size:r})=>{const{width:o,height:t}=m[r];return n(y,{as:"span",width:o,height:t,css:{position:"relative",flexShrink:0},children:e})},u=({checked:e,size:r})=>{const{borderWidth:o,height:t}=m[r];return n(y,{as:"span",css:{borderWidth:o,borderStyle:"solid",borderRadius:t,position:"absolute",inset:0,...e?{backgroundColor:s.foregroundAction,borderColor:s.foregroundAction}:{borderColor:s.border,backgroundColor:s.backgroundShade}}})},q=x(w),h=({checked:e,size:r})=>{const{thumbCheckedPos:o,borderWidth:t,height:c}=m[r],_=T(),k=V({from:{left:"0rem"},to:{left:e?o:"0rem"},immediate:_});return n(q,{as:"span",alignItems:"center",justifyContent:"center",style:k,height:c,width:c,background:"body",css:{borderRadius:c,borderWidth:t,borderStyle:"solid",borderColor:s.foregroundAction,position:"absolute"},children:e&&n(I,{size:r})})},z={md:{width:18,height:14,stroke:3},sm:{width:10,height:7,stroke:4}},I=({size:e})=>{const{height:r,width:o,stroke:t}=z[e];return n("svg",{width:"18",height:"14",viewBox:"0 0 18 14",fill:"none",css:{width:o,height:r},stroke:s.foregroundAction,strokeWidth:t,strokeLinecap:"round",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:n("path",{d:"M2 7.71429L6.15385 12L15.8462 2"})})};try{l.displayName="SwitchContainer",l.__docgenInfo={description:"",displayName:"SwitchContainer",props:{size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'}]}}}}}catch{}try{u.displayName="SwitchTrack",u.__docgenInfo={description:"",displayName:"SwitchTrack",props:{checked:{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'}]}}}}}catch{}try{h.displayName="SwitchThumb",h.__docgenInfo={description:"",displayName:"SwitchThumb",props:{checked:{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'}]}}}}}catch{}const d=({size:e="md",label:r,onChange:o,checked:t})=>p(w,{as:"label",gap:.75,alignItems:"center",css:{cursor:"pointer","&:hover":{"& input:not(:focus) ~ span:first-of-type":{borderColor:s.foregroundText,backgroundColor:t?s.foregroundText:s.backgroundShadeAlt},"& input:not(:focus) ~ span:last-of-type":{borderColor:s.foregroundText,"& svg":{stroke:t?s.foregroundText:void 0}}}},children:[p(l,{size:e,children:[n("input",{type:"checkbox",role:"switch",checked:t,onChange:()=>o(!t),css:{...C,"&:focus ~ span:first-of-type":a.outline}}),n(u,{size:e,checked:t}),n(h,{size:e,checked:t})]}),n(v,{children:r})]});try{d.displayName="Switch",d.__docgenInfo={description:"",displayName:"Switch",props:{checked:{defaultValue:null,description:"The current checked state.",name:"checked",required:!0,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Handle change events.",name:"onChange",required:!0,type:{name:"(newValue: boolean) => void"}},size:{defaultValue:{value:"md"},description:"The size of the switch.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'}]}},label:{defaultValue:null,description:"The associated label for the switch.",name:"label",required:!0,type:{name:"string"}}}}}catch{}const R={title:"forms/Switch",component:d},i=e=>{const[r,o]=S.useState(!1);return n(d,{...e,checked:r,onChange:o})};i.args={size:"md",label:"Show establishments"};var g,f,b;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`args => {
  const [isChecked, setChecked] = useState(false);
  return <Switch {...args} checked={isChecked} onChange={setChecked} />;
}`,...(b=(f=i.parameters)==null?void 0:f.docs)==null?void 0:b.source}}};const F=["Basic"];export{i as Basic,F as __namedExportsOrder,R as default};
//# sourceMappingURL=Switch.stories-3be52f96.js.map
