{"version":3,"file":"Avatar.stories-abc6ab9e.js","sources":["../../../../packages/react/src/avatar/utils.ts","../../../../packages/react/src/avatar/Avatar.tsx"],"sourcesContent":["export function getInitialsFromName(name: string) {\n\tconst matches = Array.from(\n\t\tname.matchAll(new RegExp(/(\\p{L}{1})\\p{L}+/, 'gu'))\n\t);\n\tif (!matches.length) return '?';\n\tconst firstInitial = matches.shift()?.[1] || '';\n\tconst lastInitial = matches.pop()?.[1] || '';\n\treturn (firstInitial + lastInitial).toUpperCase();\n}\n","import { HTMLAttributes } from 'react';\nimport { Flex } from '../box';\nimport { boxPalette, tokens } from '../core';\nimport { getInitialsFromName } from './utils';\n\ntype NativeDivProps = HTMLAttributes<HTMLDivElement>;\n\nexport type AvatarProps = {\n\t/** The name of the person represented by the avatar. */\n\tname: string;\n\t/** The colour tone to apply. */\n\ttone?: AvatarTone;\n\t/** The size to apply. */\n\tsize?: AvatarSize;\n\t/** If true, the element will be hidden from assistive technologies. */\n\t'aria-hidden'?: NativeDivProps['aria-hidden'];\n\t/** Describes the element to assistive technologies. */\n\t'aria-label'?: NativeDivProps['aria-label'];\n};\n\nexport function Avatar({\n\tname,\n\ttone: toneProp = 'neutral',\n\tsize: sizeProp = 'md',\n\t'aria-hidden': ariaHidden,\n\t'aria-label': ariaLabel,\n}: AvatarProps) {\n\tconst initials = getInitialsFromName(name);\n\tconst color = TONE_PROP[toneProp];\n\tconst { size, fontSize } = SIZE_MAP[sizeProp];\n\treturn (\n\t\t<Flex\n\t\t\tas=\"span\"\n\t\t\talignItems=\"center\"\n\t\t\tjustifyContent=\"center\"\n\t\t\tflexShrink={0}\n\t\t\tcss={{\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\theight: `${size}rem`,\n\t\t\t\twidth: `${size}rem`,\n\t\t\t\tborderRadius: '50%',\n\t\t\t\tborderStyle: 'solid',\n\t\t\t\tborderWidth: tokens.borderWidth.sm,\n\t\t\t\tborderColor: color,\n\t\t\t\tcolor: color,\n\t\t\t}}\n\t\t\tfontSize={fontSize}\n\t\t\tfontWeight=\"bold\"\n\t\t\taria-hidden={ariaHidden}\n\t\t\taria-label={ariaLabel}\n\t\t>\n\t\t\t{initials}\n\t\t</Flex>\n\t);\n}\n\nconst TONE_PROP = {\n\tneutral: boxPalette.foregroundMuted,\n\taction: boxPalette.foregroundAction,\n};\n\ntype AvatarTone = keyof typeof TONE_PROP;\n\nconst SIZE_MAP = {\n\tsm: { fontSize: 'xs', size: 2 },\n\tmd: { fontSize: 'sm', size: 2.5 },\n\tlg: { fontSize: 'md', size: 3 },\n\txl: { fontSize: 'lg', size: 4 },\n\txxl: { fontSize: 'xl', size: 4.5 },\n\txxxl: { fontSize: 'xl', size: 5 },\n} as const;\n\ntype AvatarSize = keyof typeof SIZE_MAP;\n"],"names":["getInitialsFromName","name","matches","firstInitial","_a","lastInitial","_b","Avatar","toneProp","sizeProp","ariaHidden","ariaLabel","initials","color","TONE_PROP","size","fontSize","SIZE_MAP","jsx","Flex","tokens","boxPalette"],"mappings":"oNAAO,SAASA,EAAoBC,EAAc,SACjD,MAAMC,EAAU,MAAM,KACrBD,EAAK,SAAS,IAAI,OAAO,mBAAoB,IAAI,CAAC,CAAA,EAEnD,GAAI,CAACC,EAAQ,OAAe,MAAA,IAC5B,MAAMC,IAAeC,EAAAF,EAAQ,MAAM,IAAd,YAAAE,EAAkB,KAAM,GACvCC,IAAcC,EAAAJ,EAAQ,IAAI,IAAZ,YAAAI,EAAgB,KAAM,GAClC,OAAAH,EAAeE,GAAa,aACrC,CCYO,SAAAE,EAAA,CAAgB,KAAAN,EACtB,KAAAO,EAAA,UACiB,KAAAC,EAAA,KACA,cAAAC,EACF,aAAAC,CAEhB,EAAA,CACC,MAAAC,EAAAZ,EAAAC,CAAA,EACAY,EAAAC,EAAAN,CAAA,EACA,CAAA,KAAAO,EAAA,SAAAC,CAAA,EAAAC,EAAAR,CAAA,EACA,OAAAS,EACCC,EAAC,CAAA,GAAA,OACG,WAAA,SACQ,eAAA,SACI,WAAA,EACH,IAAA,CACP,eAAA,OACY,OAAA,GAAAJ,OACL,MAAA,GAAAA,OACD,aAAA,MACI,YAAA,QACD,YAAAK,EAAA,YAAA,GACmB,YAAAP,EACnB,MAAAA,CACb,EACD,SAAAG,EACA,WAAA,OACW,cAAAN,EACE,aAAAC,EACD,SAAAC,CAEX,CAAA,CAGJ,CAEA,MAAAE,EAAA,CAAkB,QAAAO,EAAA,gBACG,OAAAA,EAAA,gBAErB,EAIAJ,EAAA,CAAiB,GAAA,CAAA,SAAA,KAAA,KAAA,CAAA,EACc,GAAA,CAAA,SAAA,KAAA,KAAA,GAAA,EACE,GAAA,CAAA,SAAA,KAAA,KAAA,CAAA,EACF,GAAA,CAAA,SAAA,KAAA,KAAA,CAAA,EACA,IAAA,CAAA,SAAA,KAAA,KAAA,GAAA,EACG,KAAA,CAAA,SAAA,KAAA,KAAA,CAAA,CAElC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}