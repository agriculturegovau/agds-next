{"version":3,"file":"Column-81a5e170.js","sources":["../../../../packages/react/src/columns/Columns.tsx","../../../../packages/react/src/columns/Column.tsx"],"sourcesContent":["import { PropsWithChildren } from 'react';\nimport {\n\tforwardRefWithAs,\n\tResponsiveProp,\n\tmapResponsiveProp,\n\tmq,\n} from '../core';\nimport { Box, BoxProps } from '../box';\nimport { ColumnRange } from './utils';\n\nexport type ColumnsProps = PropsWithChildren<{\n\t/** The amount of space between each column or row. */\n\tgap?: BoxProps['gap'];\n\t/** The amount of space between each column. */\n\tcolumnGap?: BoxProps['columnGap'];\n\t/** The amount of space between each row. */\n\trowGap?: BoxProps['rowGap'];\n\t/** Position children within their cell in the Grid. */\n\talignItems?: BoxProps['alignItems'];\n\t/** The amount of columns that should be created. */\n\tcols?: ResponsiveProp<ColumnRange>;\n}>;\n\nexport const Columns = forwardRefWithAs<'div', ColumnsProps>(function Columns(\n\t{ gap = 1.5, cols = 12, ...props },\n\tref\n) {\n\tconst styles = columnsStyles({ cols });\n\treturn <Box ref={ref} gap={gap} css={styles} {...props} />;\n});\n\nconst columnsStyles = ({ cols }: { cols: ResponsiveProp<ColumnRange> }) => {\n\treturn mq({\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: mapResponsiveProp(\n\t\t\tcols,\n\t\t\t(val) => `repeat(${val}, 1fr)`\n\t\t),\n\t});\n};\n","import {\n\tforwardRefWithAs,\n\tResponsiveProp,\n\tmapResponsiveProp,\n\tmq,\n} from '../core';\nimport { Box } from '../box';\nimport { ColumnRange } from './utils';\n\nexport type ColumnProps = {\n\tcolumnSpan?: ResponsiveProp<ColumnRange>;\n\tcolumnStart?: ResponsiveProp<ColumnRange | 'first' | 'last'>;\n\tcolumnEnd?: ResponsiveProp<ColumnRange | 'first' | 'last'>;\n};\n\nexport const Column = forwardRefWithAs<'div', ColumnProps>(function Column(\n\t{ columnSpan, columnStart, columnEnd, ...props },\n\tref\n) {\n\tconst styles = columnStyles({ columnSpan, columnStart, columnEnd });\n\treturn <Box ref={ref} css={styles} {...props} />;\n});\n\nconst columnStyles = ({\n\tcolumnSpan,\n\tcolumnStart,\n\tcolumnEnd,\n}: Pick<ColumnProps, 'columnSpan' | 'columnStart' | 'columnEnd'>) => {\n\treturn mq({\n\t\tgridColumn: mapResponsiveProp(columnSpan, (v) => `span ${v}/span ${v}`),\n\t\tgridColumnStart: mapResponsiveProp(columnStart),\n\t\tgridColumnEnd: mapResponsiveProp(columnEnd),\n\t});\n};\n"],"names":["Columns","forwardRefWithAs","gap","cols","props","ref","styles","columnsStyles","jsx","Box","mq","mapResponsiveProp","val","Column","columnSpan","columnStart","columnEnd","columnStyles","v"],"mappings":"0HAuBO,MAAAA,EAAAC,EAAA,SAAA,CAAA,IAAAC,EAAA,IAAA,KAAAC,EAAA,GAAA,GAAAC,CAAA,EAAAC,EAAA,CAIN,MAAAC,EAAAC,EAAA,CAAA,KAAAJ,CAAA,CAAA,EACA,OAAAK,EAAAC,EAAA,CAAA,IAAAJ,EAAA,IAAAH,EAAA,IAAAI,EAAA,GAAAF,CAAA,CAAA,CACD,CAAA,EAEAG,EAAA,CAAA,CAAA,KAAAJ,KACCO,EAAA,CAAU,QAAA,OACA,oBAAAC,EACYR,EACpBS,GAAA,UAAAA,SACmB,CACpB,CAAA,o3CCtBK,MAAAC,EAAAZ,EAAA,SAAA,CAAA,WAAAa,EAAA,YAAAC,EAAA,UAAAC,EAAA,GAAAZ,CAAA,EAAAC,EAAA,CAIN,MAAAC,EAAAW,EAAA,CAAA,WAAAH,EAAA,YAAAC,EAAA,UAAAC,CAAA,CAAA,EACA,OAAAR,EAAAC,EAAA,CAAA,IAAAJ,EAAA,IAAAC,EAAA,GAAAF,CAAA,CAAA,CACD,CAAA,EAEAa,EAAA,CAAA,CAAsB,WAAAH,EACrB,YAAAC,EACA,UAAAC,CAED,IACCN,EAAA,CAAU,WAAAC,EAAAG,EAAAI,GAAA,QAAAA,UAAAA,GAAA,EAC6D,gBAAAP,EAAAI,CAAA,EACxB,cAAAJ,EAAAK,CAAA,CACJ,CAAA"}