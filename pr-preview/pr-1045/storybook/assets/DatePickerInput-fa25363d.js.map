{"version":3,"file":"DatePickerInput-fa25363d.js","sources":["../../../../packages/react/src/core/utils/useClickOutside.ts","../../../../node_modules/date-fns/esm/_lib/assign/index.js","../../../../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../../../../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../../../../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../../../../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../../../../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../../../../node_modules/date-fns/esm/parse/index.js","../../../../packages/react/src/date-picker/utils.ts","../../../../packages/react/src/date-picker/DatePickerInput.tsx"],"sourcesContent":["import { RefObject, useEffect } from 'react';\n\nexport function useClickOutside<T extends HTMLElement = HTMLElement>(\n\tref: RefObject<T>,\n\thandler: (event: MouseEvent) => void\n) {\n\tuseEffect(() => {\n\t\tconst listener = (event: MouseEvent) => {\n\t\t\tconst el = ref?.current;\n\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!el || el.contains(event.target as Node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thandler(event);\n\t\t};\n\n\t\twindow.addEventListener('mousedown', listener);\n\n\t\treturn () => window.removeEventListener('mousedown', listener);\n\t}, [handler, ref]);\n}\n","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import { isDate, format, parse, isValid, isBefore, isAfter } from 'date-fns';\n\n// Date format is not configurable\nconst dateFormat = 'dd/MM/yyyy';\n\nexport const formatDate = (date: Date) => format(date, dateFormat);\n\nexport const formatHumanReadableDate = (date: Date) =>\n\tformat(date, 'eeee MMMM do, yyyy');\n\n// https://github.com/date-fns/date-fns/issues/942\nexport const parseDate = (value: string) => {\n\tif (value.length !== dateFormat.length) return undefined;\n\n\tconst parsed = parse(value, dateFormat, new Date());\n\tif (isValidDate(parsed)) return parsed;\n\n\treturn undefined;\n};\n\nfunction isValidDate(value: Date) {\n\treturn isDate(value) && isValid(value);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#min\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#max\nexport function constrainDate(\n\tdate: Date | undefined,\n\tminDate: Date | undefined,\n\tmaxDate: Date | undefined\n) {\n\tif (!date) return date;\n\tif (minDate && isBefore(date, minDate)) return minDate;\n\tif (maxDate && isAfter(date, maxDate)) return maxDate;\n\treturn date;\n}\n\n// Ensure a valid date range is always sent back to the consumer\nexport function getValidDateRange(\n\tinputMode: 'from' | 'to',\n\tselectedDay: Date,\n\tcurrentRange: { from: Date | undefined; to: Date | undefined }\n) {\n\t// The user is selecting a start date\n\tif (inputMode === 'from') {\n\t\t// If a start date has not been set, we can continue on\n\t\tif (!currentRange.to) return { from: selectedDay, to: undefined };\n\n\t\t// Ensure the start date is before the end date\n\t\treturn isBefore(selectedDay, currentRange.to)\n\t\t\t? { from: selectedDay, to: currentRange.to }\n\t\t\t: { from: selectedDay, to: undefined };\n\t}\n\n\t// The user is selecting a end date\n\t// If a start date has not been set, we can continue on\n\tif (!currentRange.from) return { from: undefined, to: selectedDay };\n\n\t// Ensure the end date is after the start date\n\treturn isAfter(selectedDay, currentRange.from)\n\t\t? { from: currentRange.from, to: selectedDay }\n\t\t: { from: selectedDay, to: undefined };\n}\n\n// Since the `value` prop can either be a date object, undefined or a string (which represents the text input value)\n// we need to be able to take that value and transform it into the display value of the text input\n// For example, if a `Date` object is passed we need to convert to to formatted date string (dd/mm/yyyy)\n// If `undefined` if passed, we need to convert to an empty string\nexport function transformValuePropToInputValue(\n\tvalueProp: Date | string | undefined\n): string {\n\tif (typeof valueProp === 'string') return valueProp;\n\tif (typeof valueProp === 'undefined') return '';\n\tif (isValidDate(valueProp)) return formatDate(valueProp);\n\treturn '';\n}\n","import { forwardRef, MouseEventHandler, RefObject, useMemo } from 'react';\nimport { Flex } from '../box';\nimport { CalendarIcon } from '../icon';\nimport { TextInputProps, textInputStyles } from '../text-input';\nimport { mapSpacing } from '../core';\nimport { Button } from '../button';\nimport { Field } from '../field';\nimport { parseDate, formatHumanReadableDate } from './utils';\n\nexport type DateInputProps = Omit<TextInputProps, 'invalid'> & {\n\tinvalid: {\n\t\t/** If true, the entire field will be rendered in an invalid state.  */\n\t\tfield: boolean;\n\t\t/** If true, only the input element will be rendered in an invalids state. */\n\t\tinput: boolean;\n\t};\n\tbuttonRef: RefObject<HTMLButtonElement>;\n\tbuttonOnClick: MouseEventHandler<HTMLButtonElement>;\n};\n\nexport const DateInput = forwardRef<HTMLInputElement, DateInputProps>(\n\tfunction DateInput(\n\t\t{\n\t\t\tlabel,\n\t\t\thideOptionalLabel,\n\t\t\trequired,\n\t\t\thint,\n\t\t\tmessage,\n\t\t\tinvalid,\n\t\t\tblock,\n\t\t\tid,\n\t\t\tbuttonRef,\n\t\t\tmaxWidth: maxWidthProp = 'md',\n\t\t\tbuttonOnClick,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\t...props\n\t\t},\n\t\tref\n\t) {\n\t\tconst { maxWidth, ...styles } = {\n\t\t\t...textInputStyles({\n\t\t\t\tblock,\n\t\t\t\tinvalid: invalid.input,\n\t\t\t\tmaxWidth: maxWidthProp,\n\t\t\t}),\n\t\t\twidth: '100%',\n\t\t\tborderRight: 'none',\n\t\t\tborderTopRightRadius: 0,\n\t\t\tborderBottomRightRadius: 0,\n\t\t};\n\n\t\tconst ariaLabel = useMemo(() => {\n\t\t\tif (typeof value !== 'string') return 'Choose date';\n\t\t\tconst parsed = parseDate(value);\n\t\t\tif (!parsed) return 'Choose date';\n\t\t\treturn `Change Date, ${formatHumanReadableDate(parsed)}`;\n\t\t}, [value]);\n\n\t\treturn (\n\t\t\t<Field\n\t\t\t\tlabel={label}\n\t\t\t\tsecondaryLabel=\"(dd/mm/yyyy)\"\n\t\t\t\thideOptionalLabel={hideOptionalLabel}\n\t\t\t\trequired={Boolean(required)}\n\t\t\t\thint={hint}\n\t\t\t\tmessage={message}\n\t\t\t\tinvalid={invalid.field}\n\t\t\t\tid={id}\n\t\t\t>\n\t\t\t\t{(a11yProps) => (\n\t\t\t\t\t<Flex alignItems=\"flex-end\" css={{ maxWidth }}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcss={{ ...styles, maxWidth: 'unset' }}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t{...a11yProps}\n\t\t\t\t\t\t\taria-invalid={Boolean(invalid.field || invalid.input)}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tref={buttonRef}\n\t\t\t\t\t\t\tonClick={buttonOnClick}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\t\t\tcss={{\n\t\t\t\t\t\t\t\tborderTopLeftRadius: 0,\n\t\t\t\t\t\t\t\tborderBottomLeftRadius: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: mapSpacing(1),\n\t\t\t\t\t\t\t\tpaddingRight: mapSpacing(1),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CalendarIcon size=\"md\" css={{ display: 'block' }} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Flex>\n\t\t\t\t)}\n\t\t\t</Field>\n\t\t);\n\t}\n);\n"],"names":["useClickOutside","ref","handler","useEffect","listener","event","el","assign","target","dirtyObject","property","setUTCDay","dirtyDate","dirtyDay","dirtyOptions","requiredArgs","options","locale","localeWeekStartsOn","defaultWeekStartsOn","toInteger","weekStartsOn","date","toDate","day","currentDay","remainder","dayIndex","diff","setUTCISODay","setUTCISOWeek","dirtyISOWeek","isoWeek","getUTCISOWeek","setUTCWeek","dirtyWeek","week","getUTCWeek","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_SECOND","numericPatterns","timezonePatterns","parseNumericPattern","pattern","string","valueCallback","matchResult","value","parseTimezonePattern","sign","hours","minutes","seconds","parseAnyDigitsSigned","parseNDigits","n","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","result","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","year","parsers","token","match","_options","flags","_date","normalizedTwoDigitYear","getUTCWeekYear","startOfUTCWeek","_match","_flags","firstWeekOfYear","startOfUTCISOWeek","isLeapYear","month","wholeWeekDays","isPM","_token","parsers$1","TIMEZONE_UNIT_PRIORITY","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","parse","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","defaultLocale","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekContainsDate","subFnOptions","setters","dateToSystemTimezone","i","tokens","substring","firstCharacter","longFormatter","longFormatters","usedTokens","isProtectedWeekYearToken","throwProtectedError","isProtectedDayOfYearToken","parser","incompatibleTokens","incompatibleToken","_i","usedToken","parseResult","cleanEscapedString","uniquePrioritySetters","setter","a","b","priority","index","array","setterArray","utcDate","subMilliseconds","getTimezoneOffsetInMilliseconds","convertedDate","input","dateFormat","formatDate","format","formatHumanReadableDate","parseDate","parsed","isValidDate","isDate","isValid","constrainDate","minDate","maxDate","isBefore","isAfter","getValidDateRange","inputMode","selectedDay","currentRange","transformValuePropToInputValue","valueProp","DateInput","forwardRef","label","hideOptionalLabel","required","hint","message","invalid","block","id","buttonRef","maxWidthProp","buttonOnClick","disabled","props","maxWidth","styles","textInputStyles","ariaLabel","useMemo","jsx","Field","a11yProps","jsxs","Flex","Button","mapSpacing","CalendarIcon"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7]}