{"version":3,"file":"Field-795f8947.js","sources":["../../../../packages/react/src/field/FieldContainer.tsx","../../../../packages/react/src/field/FieldLabel.tsx","../../../../packages/react/src/field/FieldHint.tsx","../../../../packages/react/src/field/FieldMessage.tsx","../../../../packages/react/src/field/Field.tsx"],"sourcesContent":["import { PropsWithChildren } from 'react';\nimport { Stack } from '../box';\nimport { boxPalette } from '../core';\n\nexport type FieldContainerProps = PropsWithChildren<{\n\t/** If true, the invalid state will be rendered. */\n\tinvalid?: boolean;\n\t/** Defines an identifier (ID) which must be unique. */\n\tid?: string;\n}>;\n\nexport const FieldContainer = ({\n\tchildren,\n\tinvalid,\n\tid,\n}: FieldContainerProps) => (\n\t<Stack\n\t\tgap={0.5}\n\t\tpaddingLeft={invalid ? 1 : undefined}\n\t\tborderLeft={invalid}\n\t\tborderLeftWidth=\"xl\"\n\t\tid={id}\n\t\tcss={{\n\t\t\tborderLeftColor: invalid ? boxPalette.systemError : undefined,\n\t\t}}\n\t>\n\t\t{children}\n\t</Stack>\n);\n","import { ElementType, PropsWithChildren, useMemo } from 'react';\nimport { Box } from '../box';\nimport { Text } from '../text';\n\nexport type FieldLabelProps = PropsWithChildren<{\n\tas?: ElementType;\n\t/** The ID of the form element this label relates to. */\n\thtmlFor?: string;\n\t/** The CSS class name, typically generated from the `css` prop. */\n\tclassName?: string;\n\t/** If false, \"(optional)\" will be appended to the label. */\n\trequired: boolean;\n\t/** If true, \"(optional)\" will never be appended to the label even when `required` is `false`. */\n\thideOptionalLabel?: boolean;\n\t/** Text to prepend to the default secondary label. */\n\tsecondaryLabel?: string;\n}>;\n\nexport const FieldLabel = ({\n\tas = 'label',\n\tchildren,\n\tclassName,\n\thtmlFor,\n\trequired,\n\tsecondaryLabel: secondaryLabelProp,\n\thideOptionalLabel,\n}: FieldLabelProps) => {\n\tconst secondaryLabel = useMemo(() => {\n\t\treturn [\n\t\t\tsecondaryLabelProp,\n\t\t\thideOptionalLabel || required ? null : '(optional)',\n\t\t]\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ');\n\t}, [required, secondaryLabelProp, hideOptionalLabel]);\n\treturn (\n\t\t<Box as={as} htmlFor={htmlFor} className={className}>\n\t\t\t<Text as=\"span\" fontWeight=\"bold\">\n\t\t\t\t{children}\n\t\t\t</Text>\n\t\t\t{secondaryLabel ? (\n\t\t\t\t<Text as=\"span\" color=\"muted\">\n\t\t\t\t\t{' '}\n\t\t\t\t\t{secondaryLabel}\n\t\t\t\t</Text>\n\t\t\t) : null}\n\t\t</Box>\n\t);\n};\n","import { PropsWithChildren } from 'react';\nimport { Text } from '../text';\n\nexport type FieldHintProps = PropsWithChildren<{\n\t/** Defines an identifier (ID) which must be unique. */\n\tid: string;\n}>;\n\nexport const FieldHint = ({ children, id }: FieldHintProps) => (\n\t<Text display=\"block\" color=\"muted\" id={id}>\n\t\t{children}\n\t</Text>\n);\n","import { PropsWithChildren } from 'react';\nimport { Box, Flex } from '../box';\nimport { AlertFilledIcon } from '../icon';\nimport { Text } from '../text';\n\nexport type FieldMessageProps = PropsWithChildren<{\n\t/** Defines an identifier (ID) which must be unique. */\n\tid: string;\n}>;\n\nexport const FieldMessage = ({ children, id }: FieldMessageProps) => (\n\t<Flex gap={0.5} alignItems=\"center\">\n\t\t<Box flexShrink={0}>\n\t\t\t<AlertFilledIcon\n\t\t\t\tcolor=\"error\"\n\t\t\t\tsize=\"md\"\n\t\t\t\taria-label=\"Error\"\n\t\t\t\taria-hidden=\"false\"\n\t\t\t\tcss={{ display: 'block' }}\n\t\t\t/>\n\t\t</Box>\n\t\t<Text display=\"block\" fontWeight=\"bold\" color=\"error\" id={id}>\n\t\t\t{children}\n\t\t</Text>\n\t</Flex>\n);\n","import { ReactNode } from 'react';\nimport { useId } from '../core';\nimport { FieldContainer } from './FieldContainer';\nimport { FieldLabel } from './FieldLabel';\nimport { FieldHint } from './FieldHint';\nimport { FieldMessage } from './FieldMessage';\n\nexport type FieldProps = {\n\tchildren: ((a11yProps: A11yProps) => ReactNode) | ReactNode;\n\t/** Provides extra information about the field. */\n\thint: string | undefined;\n\t/** Defines an identifier (ID) which must be unique. */\n\tid?: string;\n\t/** If true, the invalid state will be rendered. */\n\tinvalid?: boolean;\n\t/** Describes the purpose of the field. */\n\tlabel: string;\n\t/** Text to prepend to the default secondary label. */\n\tsecondaryLabel?: string;\n\t/** If true, \"(optional)\" will never be appended to the label even when `required` is `false`. */\n\thideOptionalLabel?: boolean;\n\t/** Message to show when the field is invalid. */\n\tmessage: string | undefined;\n\t/** If false, \"(optional)\" will be appended to the label. */\n\trequired: boolean;\n};\n\nexport const Field = ({\n\tchildren,\n\thint,\n\tid,\n\tinvalid,\n\tlabel,\n\tsecondaryLabel,\n\thideOptionalLabel,\n\tmessage,\n\trequired,\n}: FieldProps) => {\n\tconst { fieldId, hintId, messageId } = useFieldIds(id);\n\n\tconst a11yProps = useFieldA11yProps({\n\t\trequired,\n\t\tfieldId,\n\t\tmessage,\n\t\tmessageId,\n\t\thint,\n\t\thintId,\n\t\tinvalid,\n\t});\n\n\treturn (\n\t\t<FieldContainer invalid={invalid}>\n\t\t\t<FieldLabel\n\t\t\t\thtmlFor={fieldId}\n\t\t\t\tsecondaryLabel={secondaryLabel}\n\t\t\t\thideOptionalLabel={hideOptionalLabel}\n\t\t\t\trequired={required}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</FieldLabel>\n\t\t\t{hint ? <FieldHint id={hintId}>{hint}</FieldHint> : null}\n\t\t\t{message && invalid ? (\n\t\t\t\t<FieldMessage id={messageId}>{message}</FieldMessage>\n\t\t\t) : null}\n\t\t\t{typeof children === 'function' ? children(a11yProps) : children}\n\t\t</FieldContainer>\n\t);\n};\n\nexport const useFieldIds = (idProp?: string) => {\n\tconst autoId = useId(idProp);\n\tconst fieldId = idProp ? idProp : `field-${autoId}`;\n\tconst hintId = `field-${autoId}-hint`;\n\tconst messageId = `field-${autoId}-message`;\n\treturn { fieldId, hintId, messageId };\n};\n\ntype A11yProps = {\n\t'aria-required': boolean;\n\t'aria-invalid': boolean;\n\t'aria-describedby': string | undefined;\n\tid: string;\n};\n\nexport const useFieldA11yProps = ({\n\trequired,\n\tfieldId,\n\tmessage,\n\tmessageId,\n\thint,\n\thintId,\n\tinvalid,\n}: {\n\trequired?: boolean;\n\tfieldId: string;\n\tmessage?: string;\n\tmessageId: string;\n\thint?: string;\n\thintId: string;\n\tinvalid?: boolean;\n}): A11yProps => {\n\tconst describedByIds = [\n\t\tmessage ? messageId : null,\n\t\thint ? hintId : null,\n\t].filter(Boolean);\n\tconst describedBy = describedByIds.length\n\t\t? describedByIds.join(' ')\n\t\t: undefined;\n\treturn {\n\t\t'aria-required': Boolean(required),\n\t\t'aria-invalid': Boolean(invalid),\n\t\t'aria-describedby': describedBy,\n\t\tid: fieldId,\n\t};\n};\n"],"names":["FieldContainer","children","invalid","id","jsx","Stack","boxPalette","FieldLabel","as","className","htmlFor","required","secondaryLabelProp","hideOptionalLabel","secondaryLabel","useMemo","jsxs","Box","Text","FieldHint","FieldMessage","Flex","AlertFilledIcon","Field","hint","label","message","fieldId","hintId","messageId","useFieldIds","a11yProps","useFieldA11yProps","idProp","autoId","useId","describedByIds","describedBy"],"mappings":"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"}