{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/foundations","label":"Foundations"},{"label":"Icons"}],"foundation":{"slug":"icons","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Usage guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When using an icon, always provide a label and accessible name. Don't use icons without labels because you will confuse some users - even the simplest icons will be new or uncommon to some users\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each icon in our library is meaningful and universal, to ensure users understand them. Icons should not be too detailed, to ensure it's clear at all sizes.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"order":2,"title":"Icons","description":"The Agriculture Design System supports the use of universal system icons."}},"data":{"order":2,"title":"Icons","description":"The Agriculture Design System supports the use of universal system icons."},"title":"Icons","description":"The Agriculture Design System supports the use of universal system icons."}},"__N_SSG":true}