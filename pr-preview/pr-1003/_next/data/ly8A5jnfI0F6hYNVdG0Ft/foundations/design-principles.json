{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/foundations","label":"Foundations"},{"label":"Design principles"}],"foundation":{"slug":"design-principles","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Design principles\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"This is for everyone\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Our design system is inspired by the original Australian Government Design System (GOLD) which was built on principles of simplicity and accessibility. We do the hard work to make a simple and easy to use system because people who use government services generally don’t have a choice, they can’t go to an alternative service provider. We have an obligation to make our government services simple and fast to use, inclusive and accessible to all users in the location and context they need to use them.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If something is decorative, adds cognitive load, adds unnecessary bloat, or may create challenges for some users - rethink it to make the experience simple and intuitive for all.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"User’s needs come first\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are two main user groups of AgDS we consider - the internal users (designers, developers and researchers) who develop government services, and the end users of those services. We want the Design System to be easy to apply to the everyday problems encountered by digital practitioners in government, giving them inclusive and high-quality tools, which allow them to serve their end users’ needs to access inclusive government services.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Consistent, not uniform\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We aim to provide a consistent appearance and behaviour of common components and templates across digital government services, minimising the learning curve for users moving between services. Developers and designers that use the Design System can customise the system theme (colour schemes, typography and sub-logos) while maintaining a consistent visual language and user experience.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Function over fashion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Delivering highly accessible, highly usable digital services requires doing the basics simply, clearly and quickly. We aim to respect our users’ time and bandwidth, avoiding complexity, anti-patterns or faddish design trends that may delay or disrupt them. We communicate, not decorate, by removing any details or elements from the system that aren’t necessary to improve the experience for the end user.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Evidence over opinion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We believe that consulting with many sources creates better insights, so we aim to involve the design community in everything we do. We are open in our processes and research, seeking feedback where possible, documenting decisions and producing rationale for published work.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Design Guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Placement of actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Align actions to the left margin or as close to supporting content as possible - it will ensure users of screen magnifiers can easily see and use them.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Avoid aligning actions and links to the right margin, as this could impact users of screen magnifiers.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Use the simplest pattern that works\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Users understand conventional form inputs and buttons. Don't reinvent the wheel and design new components when current ones meet the needs of the user.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Progressive Disclosure\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Progressive disclosure is a design pattern that allows users to access more information or functionality as they need it. It is a way of reducing cognitive load by only showing the user the information they need to see at any given time.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Avoid placing important information inside Progressive Disclosure patterns such as Accordions, Tabs or Details. This information should be visible to the user without having to expand the content.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Modals is another form of progressive disclosure. They are used in AgDS to confirm actions that are potentially destructive. They are also used in certain cases for displaying a list of fields to enable data filtering, when the amount of space needed isn't practical to display on the main app page. Modals should be used sparingly and only when other patterns, such as accordions, details or another page, are not suitable. Don't use a modal to contain a user flow such as a form or content.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdowns and Tooltips\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Avoid using dropdowns and tooltips as they can be difficult to use on mobile devices and for those with fine motor skill disabilities.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Always explore more simple solutions to fly outs and pop ups and make sure the solution works on desktop and touch devices.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to provide additional information, consider using a \", _jsx(_components.a, {\n        href: \"/components/details\",\n        children: \"Details\"\n      }), \" component instead.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Navigation patterns\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When designing navigation components always consider small devices to make sure the solution is responsive and scalable.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don't rely on sideways scroll on nav bars unless you provide sufficient affordance that content is off the page\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Design principles","description":"How we design."}},"data":{"title":"Design principles","description":"How we design."},"title":"Design principles","description":"How we design."}},"__N_SSG":true}