{"pageProps":{"pkg":{"slug":"modal","name":"modal","title":"Modal","description":"A modal is a dialog box that appears above the parent page and provides advance notice of a destructive action and consequence. They tell users a decision is needed.","storybookPath":"/story/content-modal--basic","figmaGalleryNodeId":"11981%3A101667","subNavItems":[{"label":"Overview","href":"/components/modal","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/overview.mdx"},{"label":"Rationale","href":"/components/modal/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/rationale.mdx"},{"label":"Code","href":"/components/modal/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/code.mdx"}],"relatedComponents":["drawer"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Modal"}],"toc":[{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isModalOpen, openModal, closeModal] = useTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openModal}>Open modal</Button>\\n\\t\\t\\t<Modal\\n\\t\\t\\t\\tisOpen={isModalOpen}\\n\\t\\t\\t\\tonClose={closeModal}\\n\\t\\t\\t\\ttitle=\\\"This is the title of the modal dialog, it can span lines but should not be too long.\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeModal}>Primary button</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeModal}>\\n\\t\\t\\t\\t\\t\\t\\tSecondary button\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeModal}>\\n\\t\\t\\t\\t\\t\\t\\tTertiary button\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\tThis is the Modal Body paragraph, it provides detailed instruction and\\n\\t\\t\\t\\t\\tcontext for the the modal action. It can also span lines but long form\\n\\t\\t\\t\\t\\tcontent should be avoided.\\n\\t\\t\\t\\t</Text>\\n\\t\\t\\t</Modal>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Modals advise users an action may be destructive, detrimental or irreversible. They are triggered by a user interaction and announce important or critical information that requires a decision. For other uses, other patterns are preferred.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Modals require a clear explanation of what will happen if the user proceeds, an alternative option, and an easy way to dismiss.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The user must act or dismiss the modal before they can return to the parent page.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Primary button should support the user to achieve what they initially elected to do – for example, cancel out of a form.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use to confirm a destructive action – for example, when cancelling a form and user input will be lost\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use modals to inform people if:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"an account or information is about to be deleted\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"work or data is about to be lost\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"an error will occur\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"of a cost increase\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use sparingly as they disrupt the user flow\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"make sure the modal experience is a brief interaction with no more than two action buttons and a dismiss option (X in the top right corner)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a Button or Button group for actions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a Close button in the top right corner\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ensure the modal closes when the action is completed.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"change the Button group order\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"remove the Close button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"change default behaviour\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a Modal to explain why a user cannot continue in a flow. Use PageAlert instead\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use to guiding navigation patterns unless the outcome will result in lost data\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"embed forms in a modal\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for error, success or loading messages.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Modal","description":"A modal is a dialog box that appears above the parent page and provides advance notice of a destructive action and consequence. They tell users a decision is needed.","group":"Content","storybookPath":"/story/content-modal--basic","figmaGalleryNodeId":"11981%3A101667","relatedComponents":["drawer"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"drawer","name":"drawer","title":"Drawer","description":"A drawer is a panel that slides in from the right side of the screen. The Drawer is overlayed on top of the main area of the page to capture the user’s attention while keeping the context of the current task.","storybookPath":"/story/layout-drawer--basic","figmaGalleryNodeId":"18684%3A85147","subNavItems":[{"label":"Overview","href":"/components/drawer","path":"/home/runner/work/agds-next/agds-next/packages/react/src/drawer/docs/overview.mdx"},{"label":"Code","href":"/components/drawer/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/drawer/docs/code.mdx"}],"relatedComponents":["modal"],"relatedPatterns":["search-filters"],"deprecated":false,"unreleased":false}]},"__N_SSG":true}