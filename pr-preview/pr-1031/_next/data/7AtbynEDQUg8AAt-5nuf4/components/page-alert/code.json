{"pageProps":{"pkg":{"slug":"page-alert","content":"\nTypically page alerts appear at the top of a page following a submit action.\n\n<DoHeading />\n\n- use constructive, no-blame language, avoid vague descriptions and always provide a solution\n- keep it short â€“ content should be understood at a glance\n- error alerts (red) must be actioned before the user can continue\n- warning alerts (orange) tell the user how to avoid a problem\n- success alerts (green) confirm a task is completed\n- information alerts (blue) are used for important messaging the user can simply acknowledge before moving on.\n\n<DontHeading />\n\n- repeat the title in the description\n- if the alert title is enough to convey the message a description may not be necessary\n- don't use for common actions such as deleting an email or tasks where an action can be undone.\n\n## Tones\n\nChoosing a tone for a PageAlert allows the user to understand the importance and severity of the message at a glance.\n\nThe four supported tones are `info`, `success`, `error` and `warning`.\n\n### Info\n\nPage alerts are intended for important time-sensitive information only and should be used sparingly.\n\n```jsx live\n<PageAlert tone=\"info\" title=\"Notice\">\n\t<Text as=\"p\">\n\t\tAll vacancies close on the advertised closing date unless otherwise\n\t\tspecified.\n\t</Text>\n</PageAlert>\n```\n\n### Success\n\nThe success page alert is used for notifying the user that a task is fully completed.\n\n```jsx live\n<PageAlert tone=\"success\" title=\"Submission successful\">\n\t<Text as=\"p\">Your application has been successfully submitted.</Text>\n</PageAlert>\n```\n\n### Error\n\nThe error page alert should be used with form validation errors or other errors which will block the user from completing their task.\n\n```jsx live\n<PageAlert tone=\"error\" title=\"There is a problem\">\n\t<Text as=\"p\">\n\t\t<a href=\"#\">Full name must not be empty</a>\n\t</Text>\n</PageAlert>\n```\n\n### Warning\n\nUse warning page alerts to tell the user something urgent. Only use an alert if the information will help the user avoid a problem.\n\n```jsx live\n<PageAlert tone=\"warning\" title=\"Browser out of date\">\n\t<Text as=\"p\">Your web browser is out of date.</Text>\n</PageAlert>\n```\n\n## Composition\n\nYou can take advantage of our `Prose` component to ensure consistant spacing between HTML elements.\n\n```jsx live\n<PageAlert tone=\"error\" title=\"There is a problem\">\n\t<Prose>\n\t\t<p>Please correct the following fields and try again</p>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<a href=\"#\">Full name must not be empty</a>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a href=\"#\">Email must not be empty</a>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a href=\"#\">Description must not be empty</a>\n\t\t\t</li>\n\t\t</ul>\n\t</Prose>\n</PageAlert>\n```\n","data":{"title":"Page alert","description":"Page alerts are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages at relevant times during the user journey. They should not be confused with Callouts.","group":"Content","storybookPath":"/story/content-pagealert--basic","figmaGalleryNodeId":"11981%3A101690"},"name":"page-alert","version":"1.3.0","title":"Page alert","description":"Page alerts are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages at relevant times during the user journey. They should not be confused with Callouts.","storybookPath":"/story/content-pagealert--basic","figmaGalleryNodeId":"11981%3A101690","subNavItems":[{"label":"Overview","href":"/components/page-alert","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/overview.mdx"},{"label":"Code","href":"/components/page-alert/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/code.mdx"},{"label":"Accessibility","href":"/components/page-alert/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/accessibility.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/page-alert","label":"Page alert"},{"label":"Code"}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"PageAlert\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"PageAlertTitle\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"toc":[{"id":"props","title":"Props","level":2,"slug":"props","items":[]}]},"__N_SSG":true}