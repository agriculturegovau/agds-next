{"pageProps":{"pkg":{"slug":"skeleton","content":"\n<DoHeading />\n\n- use to reduce page jumpiness as different parts of the page load\n- map the size of the Skeleton to the shape of the final user interface\n- use an animation to indicate something is happening.\n\n<DontHeading />\n\n- use a Skeleton to represent components that contain other components such as cards, tables, accordions etc.\n\n## SkeletonHeading\n\nThe `SkeletonHeading` component can be used as a placeholder for any [Heading component](/components/heading).\n\nThe height of the component is determined by the `type` property.\n\nThe width of the element can be customised using the `width` property.\n\n```jsx live\n<Stack gap={1.5}>\n\t<SkeletonHeading type=\"h1\" />\n\t<SkeletonHeading type=\"h2\" />\n\t<SkeletonHeading type=\"h3\" />\n\t<SkeletonHeading type=\"h4\" />\n\t<SkeletonHeading type=\"h5\" />\n\t<SkeletonHeading type=\"h6\" />\n</Stack>\n```\n\n## SkeletonText\n\nThe `SkeletonHeading` component can be used as a placeholder for any [Text component](/components/text).\n\nThe height of the component can be controlled using using the `fontSize` and `lineHeight` properties.\n\nThe width of the element can be customised using the `width` property.\n\n```jsx live\n<Stack gap={1.5}>\n\t<SkeletonText fontSize=\"xxxl\" lineHeight=\"default\" />\n\t<SkeletonText fontSize=\"xxl\" lineHeight=\"default\" />\n\t<SkeletonText fontSize=\"xl\" lineHeight=\"default\" />\n\t<SkeletonText fontSize=\"lg\" lineHeight=\"default\" />\n\t<SkeletonText fontSize=\"md\" lineHeight=\"default\" />\n\t<SkeletonText fontSize=\"sm\" lineHeight=\"default\" />\n\t<SkeletonText fontSize=\"xs\" lineHeight=\"default\" />\n</Stack>\n```\n\n## SkeletonBox\n\nThe `SkeletonBox` component allows you to create custom shapes by providing full control over both the width and height.\n\n```jsx live\n<Stack gap={1.5}>\n\t<SkeletonBox width=\"150px\" height=\"150px\" />\n\t<SkeletonBox width=\"50%\" height=\"50px\" />\n</Stack>\n```\n","data":{"title":"Skeleton","description":"Skeletons are visual placeholders for information while data is still loading.","group":"Content","storybookPath":"/story/content-skeleton-skeletonheading--basic","figmaGalleryNodeId":"11981%3A101691"},"name":"skeleton","version":"1.3.0","title":"Skeleton","description":"Skeletons are visual placeholders for information while data is still loading.","storybookPath":"/story/content-skeleton-skeletonheading--basic","figmaGalleryNodeId":"11981%3A101691","subNavItems":[{"label":"Overview","href":"/components/skeleton","path":"/home/runner/work/agds-next/agds-next/packages/react/src/skeleton/docs/overview.mdx"},{"label":"Code","href":"/components/skeleton/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/skeleton/docs/code.mdx"},{"label":"Accessibility","href":"/components/skeleton/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/skeleton/docs/accessibility.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/skeleton","label":"Skeleton"},{"label":"Code"}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"SkeletonHeading\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"SkeletonText\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"SkeletonBox\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"toc":[{"id":"props","title":"Props","level":2,"slug":"props","items":[]}]},"__N_SSG":true}