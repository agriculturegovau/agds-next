{"pageProps":{"pkg":{"slug":"select","content":"\n```jsx live\n<Select\n\tlabel=\"What option?\"\n\tplaceholder=\"Please select\"\n\toptions={[\n\t\t{ value: 'a', label: 'Option A' },\n\t\t{ value: 'b', label: 'Option B' },\n\t\t{ value: 'c', label: 'Option C' },\n\t]}\n/>\n```\n\nSelect boxes (drop-down lists) allow users to select a value from a list.\n\nBy default, the `Select` component does not expand to fill the available space.\n\n<DoHeading />\n\n- implement to help users enter a value into a form field\n- use when selecting from a list of options is required\n- use concise labels\n- indicate whether input is optional\n- use for alphabetical or numerical lists\n- present list items in a logical way (alphabetic or numeric)\n- group options into similar categories if possible for larger lists.\n\n<DontHeading />\n\n- use for small lists – use Radio input\n- use for long lists – consider using Combobox.\n\n## Hint\n\nUse the `hint` prop to provide help that’s relevant to the majority of users, like how their information will be used, or where to find it.\n\nDon't use long paragraphs and lists in hint text. Screen readers read out the entire text when users interact with the form element. This could frustrate users if the text is long.\n\nDon't include links within hint text. While screen readers will read out the link text when describing the field, they will not tell users that the text is a link.\n\n```jsx live\n<Select\n\tlabel=\"What option?\"\n\thint=\"Hint text\"\n\tplaceholder=\"Please select\"\n\toptions={[\n\t\t{ value: 'a', label: 'Option A' },\n\t\t{ value: 'b', label: 'Option B' },\n\t\t{ value: 'c', label: 'Option C' },\n\t]}\n/>\n```\n\n## Required\n\nThe `required` prop can be used to indicate that user input is required on the field before a form can be submitted.\n\nUsing the `required` prop, this component will automatically append \"(optional)\" to the label as well as using [aria-required](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required) to indicate to screen reader user that the field is required.\n\n### Hide optional label\n\nThe `hideOptionalLabel` prop can be used in situations where you want to indiciate to screen reader users that a field is optional but don't want to show the \"(optional)\" label.\n\nThe usage of `hideOptionalLabel` should be reserved for inputs that filter data in a table or chart, and should never be used in standard forms for submitting information.\n\n```jsx live\n<Stack gap={1}>\n\t<Select\n\t\tlabel=\"Required\"\n\t\tplaceholder=\"Please select\"\n\t\trequired\n\t\toptions={[\n\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t{ value: 'c', label: 'Option C' },\n\t\t]}\n\t/>\n\t<Select\n\t\tlabel=\"Optional\"\n\t\tplaceholder=\"Please select\"\n\t\trequired={false}\n\t\toptions={[\n\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t{ value: 'c', label: 'Option C' },\n\t\t]}\n\t/>\n\t<Select\n\t\tlabel=\"Optional with hideOptionalLabel\"\n\t\trequired={false}\n\t\thideOptionalLabel={true}\n\t\tplaceholder=\"Please select\"\n\t\toptions={[\n\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t{ value: 'c', label: 'Option C' },\n\t\t]}\n\t/>\n</Stack>\n```\n\n## Invalid\n\nUse the `invalid` prop to indicate if the user input is invalid (does not validate according to the elements settings).\n\n```jsx live\n<Select\n\tlabel=\"Invalid\"\n\tplaceholder=\"Please select\"\n\tinvalid\n\tmessage=\"This select is invalid\"\n\toptions={[\n\t\t{ value: 'a', label: 'Option A' },\n\t\t{ value: 'b', label: 'Option B' },\n\t\t{ value: 'c', label: 'Option C' },\n\t]}\n/>\n```\n\n## Disabled\n\nDisabled select elements are unusable and can not be clicked. This prevents a user from interacting with the select element until another action is complete. Disabled select elements in a form will not be submitted.\n\n```jsx live\n<Select\n\tlabel=\"What option?\"\n\tplaceholder=\"Please select\"\n\tdisabled\n\toptions={[\n\t\t{ value: 'a', label: 'Option A' },\n\t\t{ value: 'b', label: 'Option B' },\n\t\t{ value: 'c', label: 'Option C' },\n\t]}\n/>\n```\n\n## Groups\n\n```jsx live\n<Select\n\tlabel=\"What option?\"\n\tplaceholder=\"Please select\"\n\toptions={[\n\t\t{\n\t\t\tlabel: 'Group A',\n\t\t\toptions: [\n\t\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t\t{ value: 'c', label: 'Option C' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tlabel: 'Group B',\n\t\t\toptions: [\n\t\t\t\t{ value: 'd', label: 'Option D' },\n\t\t\t\t{ value: 'e', label: 'Option E' },\n\t\t\t\t{ value: 'f', label: 'Option F' },\n\t\t\t],\n\t\t},\n\t]}\n/>\n```\n\n## Maximum widths\n\nUse the `maxWidth` prop to set the maximum width of the select box.\nThe small size is reserved for use cases where the value is no more than 3 characters long, such as setting how many items to display in a list.\n\n```jsx live\n<Stack gap={1}>\n\t<Select\n\t\tlabel=\"Items per page (sm)\"\n\t\tmaxWidth=\"sm\"\n\t\thideOptionalLabel={true}\n\t\toptions={[\n\t\t\t{ value: '10', label: '10' },\n\t\t\t{ value: '25', label: '25' },\n\t\t\t{ value: '50', label: '50' },\n\t\t\t{ value: '100', label: '100' },\n\t\t]}\n\t/>\n\t<Select\n\t\tlabel=\"What option? (md)\"\n\t\tmaxWidth=\"md\"\n\t\tplaceholder=\"Please select\"\n\t\toptions={[\n\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t{ value: 'c', label: 'Option C' },\n\t\t]}\n\t/>\n\t<Select\n\t\tlabel=\"What option? (lg)\"\n\t\tmaxWidth=\"lg\"\n\t\tplaceholder=\"Please select\"\n\t\toptions={[\n\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t{ value: 'c', label: 'Option C' },\n\t\t]}\n\t/>\n\t<Select\n\t\tlabel=\"What option? (xl)\"\n\t\tmaxWidth=\"xl\"\n\t\tplaceholder=\"Please select\"\n\t\toptions={[\n\t\t\t{ value: 'a', label: 'Option A' },\n\t\t\t{ value: 'b', label: 'Option B' },\n\t\t\t{ value: 'c', label: 'Option C' },\n\t\t]}\n\t/>\n</Stack>\n```\n\n## Block\n\nUse the `block` prop to expand the component to fill the available space.\n\n```jsx live\n<Select\n\tlabel=\"What option?\"\n\tplaceholder=\"Please select\"\n\toptions={[\n\t\t{ value: 'a', label: 'Option A' },\n\t\t{ value: 'b', label: 'Option B' },\n\t\t{ value: 'c', label: 'Option C' },\n\t]}\n\tblock\n/>\n```\n","data":{"title":"Select","description":"Select provides a way for users to choose one item from a collapsible list. It helps reduce input errors and screen space.","group":"Forms","storybookPath":"/story/forms-select--basic","figmaGalleryNodeId":"12444%3A100538"},"name":"select","version":"1.3.0","title":"Select","description":"Select provides a way for users to choose one item from a collapsible list. It helps reduce input errors and screen space.","storybookPath":"/story/forms-select--basic","figmaGalleryNodeId":"12444%3A100538","subNavItems":[{"label":"Overview","href":"/components/select","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/overview.mdx"},{"label":"Code","href":"/components/select/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/select","label":"Select"},{"label":"Code"}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"Select\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"toc":[{"id":"props","title":"Props","level":2,"slug":"props","items":[]}]},"__N_SSG":true}