{"pageProps":{"pkg":{"slug":"tags","content":"\n<DoHeading />\n\n- use when content has multiple categories\n- use with or without links\n- add to a page to improve SEO\n- use links to filter/group data types\n- include a Tags heading\n\n<DontHeading />\n\n- use as a status indicator â€“ use StatusBadge\n- overwrite Tag colours or fills.\n- use Tags with links and remove buttons together, as it is confusing for users.\n\n## Tags with links\n\nA list of related tags that use links.\n\nNote: An appropriate heading level should be used to introduce the purpose of the list.\n\n```jsx live\n<Tags\n\theading={\n\t\t<Text as=\"h2\" fontWeight=\"bold\">\n\t\t\tTags:\n\t\t</Text>\n\t}\n\titems={[\n\t\t{ href: '#', label: 'Foo' },\n\t\t{ href: '#', label: 'Bar' },\n\t\t{ href: '#', label: 'Baz' },\n\t]}\n/>\n```\n\n## Tags without links\n\nA list of related tags without links.\n\n```jsx live\n<Tags\n\theading={\n\t\t<Text as=\"h2\" fontWeight=\"bold\">\n\t\t\tTags:\n\t\t</Text>\n\t}\n\titems={[{ label: 'Foo' }, { label: 'Bar' }, { label: 'Baz' }]}\n/>\n```\n\n## Removable tags\n\nTags can be removed from a list, if you add an `onRemove` function.\n\nPlease avoid using Tags with links and remove buttons together, as it is confusing for users.\n\n```jsx live\n<Tags\n\theading={\n\t\t<Text as=\"h2\" fontWeight=\"bold\">\n\t\t\tTags:\n\t\t</Text>\n\t}\n\titems={[\n\t\t{\n\t\t\tlabel: 'Foo',\n\t\t\tonRemove: console.log,\n\t\t},\n\t\t{\n\t\t\tlabel: 'Bar',\n\t\t\tonRemove: console.log,\n\t\t},\n\t\t{\n\t\t\tlabel: 'Baz',\n\t\t\tonRemove: console.log,\n\t\t},\n\t]}\n/>\n```\n","data":{"title":"Tags","description":"Tags classify content using keywords or labels. They are added to a web page, asset or content to help users search for related content quickly and easily.","group":"Content","storybookPath":"/story/content-tags--basic","figmaGalleryNodeId":"11981%3A101715"},"name":"tags","version":"1.3.0","title":"Tags","description":"Tags classify content using keywords or labels. They are added to a web page, asset or content to help users search for related content quickly and easily.","storybookPath":"/story/content-tags--basic","figmaGalleryNodeId":"11981%3A101715","subNavItems":[{"label":"Overview","href":"/components/tags","path":"/home/runner/work/agds-next/agds-next/packages/react/src/tags/docs/overview.mdx"},{"label":"Code","href":"/components/tags/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/tags/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/tags","label":"Tags"},{"label":"Code"}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"Tags\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"toc":[{"id":"props","title":"Props","level":2,"slug":"props","items":[]}]},"__N_SSG":true}