{"pageProps":{"pkg":{"slug":"callout","name":"callout","title":"Callout","description":"Callouts are an excerpt of text used to draw attention to important or interesting information. They should not be confused with Page alerts.","storybookPath":"/story/content-callout--basic","figmaGalleryNodeId":"11981%3A101425","subNavItems":[{"label":"Overview","href":"/components/callout","path":"/home/runner/work/agds-next/agds-next/packages/react/src/callout/docs/overview.mdx"},{"label":"Code","href":"/components/callout/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/callout/docs/code.mdx"}],"relatedComponents":["global-alert","page-alert"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Callout"}],"toc":[{"id":"tones","title":"Tones","level":2,"slug":"tones","items":[{"id":"neutral-callout","title":"Neutral Callout","level":3,"slug":"neutral-callout","items":[]},{"id":"information-callout","title":"Information Callout","level":3,"slug":"information-callout","items":[]}]},{"id":"compact","title":"Compact","level":2,"slug":"compact","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Callout title=\\\"Callout heading\\\">\\n\\t<Text as=\\\"p\\\">Description of the callout.</Text>\\n</Callout>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use callout to notify and alert users of important snippets of information.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use sparingly as they are intrusive - use to help users quickly scan\\nto find essential information in a long text page\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use to reiterate important content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for quotes in long-form content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for additional content formats not included in the main text such as support and contact details, checklists, definitions and\\nDid you know? content.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"embed in forms\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"make the focus of content, they are a supporting tool\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for errors and alerts â€“ use a Page alert instead\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for primary content as it may be missed\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"mix colour palettes.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tones\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Callouts can be used to convey different tones of information. The tone of a callout is conveyed through the background colour and icon.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Neutral Callout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The normal tone of a callout is \", _jsx(_components.code, {\n        children: \"neutral\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Callout title=\\\"Callout heading\\\">\\n\\t<Text as=\\\"p\\\">Description of the callout.</Text>\\n</Callout>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, neutral Callouts make use of the \", _jsx(_components.code, {\n        children: \"shade\"\n      }), \" \", _jsx(_components.a, {\n        href: \"/foundations/tokens/colour#background-colours\",\n        children: \"background token\"\n      }), \", which must be paired with the normal \", _jsx(_components.code, {\n        children: \"body\"\n      }), \" background.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If a neutral Callout is placed on an area with a \", _jsx(_components.code, {\n        children: \"bodyAlt\"\n      }), \" background, you must set the \", _jsx(_components.code, {\n        children: \"tone\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"neutralAlt\"\n      }), \" to ensure the Callout uses the correct \", _jsx(_components.code, {\n        children: \"shadeAlt\"\n      }), \" background. This is to ensure correct contrast and a consistent visual style.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack background=\\\"bodyAlt\\\" padding={2} gap={1}>\\n\\t<Text>An area with `bodyAlt` background</Text>\\n\\t<Callout title=\\\"Callout heading\\\" tone=\\\"neutralAlt\\\">\\n\\t\\t<Text as=\\\"p\\\">Description of the callout.</Text>\\n\\t</Callout>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Information Callout\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use an information callout to notify and alert users of important information.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Callout title=\\\"Callout heading\\\" tone=\\\"info\\\">\\n\\t<Text as=\\\"p\\\">Description of the callout.</Text>\\n</Callout>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Compact\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Compact version of the callout can be used when there is limited space, such as inside of a Control group to let the user know that, based on their response, they may need to provide additional information.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ControlGroup label=\\\"Control group label\\\" required block>\\n\\t<Radio checked={false}>Radio option one</Radio>\\n\\t<Radio checked={true}>Radio option two</Radio>\\n\\t<ConditionalFieldContainer>\\n\\t\\t<Callout title=\\\"Callout heading\\\" tone=\\\"info\\\" variant=\\\"compact\\\">\\n\\t\\t\\t<Text as=\\\"p\\\">Description of the callout.</Text>\\n\\t\\t</Callout>\\n\\t</ConditionalFieldContainer>\\n\\t<Radio checked={false}>Text message</Radio>\\n</ControlGroup>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Callout","description":"Callouts are an excerpt of text used to draw attention to important or interesting information. They should not be confused with Page alerts.","group":"Content","storybookPath":"/story/content-callout--basic","figmaGalleryNodeId":"11981%3A101425","relatedComponents":["global-alert","page-alert"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"global-alert","name":"global-alert","title":"Global alert","description":"Global alerts display prominent service or system wide messages at the top of the screen.","storybookPath":"/story/content-globalalert--basic","figmaGalleryNodeId":"15243%3A46718","subNavItems":[{"label":"Overview","href":"/components/global-alert","path":"/home/runner/work/agds-next/agds-next/packages/react/src/global-alert/docs/overview.mdx"},{"label":"Code","href":"/components/global-alert/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/global-alert/docs/code.mdx"}],"relatedComponents":["callout","page-alert"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"page-alert","name":"page-alert","title":"Page alert","description":"Page alerts are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages at relevant times during the user journey. They should not be confused with Callouts.","storybookPath":"/story/content-pagealert--basic","figmaGalleryNodeId":"11981%3A101690","subNavItems":[{"label":"Overview","href":"/components/page-alert","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/overview.mdx"},{"label":"Code","href":"/components/page-alert/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/code.mdx"},{"label":"Accessibility","href":"/components/page-alert/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/accessibility.mdx"}],"relatedComponents":["callout","global-alert"],"relatedPatterns":["accessible-form-validation-and-recovery"],"deprecated":false,"unreleased":false}]},"__N_SSG":true}