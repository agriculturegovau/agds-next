{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/patterns","label":"Patterns"},{"label":"Selecting an option from a list"}],"navLinks":[{"href":"/patterns/accessible-form-validation-and-recovery","label":"Accessible form validation and error recovery"},{"href":"/patterns/ask-users-for-dates-and-times","label":"Ask users for dates and times"},{"href":"/patterns/conditional-reveal","label":"Conditionally revealed form content"},{"href":"/patterns/crud-data-tables","label":"Create, read, update and delete data in tables"},{"href":"/patterns/focus-mode","label":"Focus mode"},{"href":"/patterns/loading-error-empty-states","label":"Loading, empty and error states"},{"href":"/patterns/messaging","label":"Messaging"},{"href":"/patterns/multi-task-form","label":"Multi-task form"},{"href":"/patterns/search-filters","label":"Search filters"},{"href":"/patterns/selectable-table-with-batch-actions","label":"Selectable tables with batch actions"},{"href":"/patterns/selecting-an-option-from-a-list","label":"Selecting an option from a list"},{"href":"/patterns/selecting-multiple-options-from-a-list","label":"Selecting multiple options from a list"},{"href":"/patterns/yourgov-example-application","label":"yourGov example application"}],"pattern":{"slug":"selecting-an-option-from-a-list","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Small lists\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use a \", _jsx(_components.a, {\n        href: \"/components/control-group\",\n        children: \"Control group\"\n      }), \" with a list of \", _jsx(_components.a, {\n        href: \"/components/checkbox\",\n        children: \"Checkboxes\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/components/radio\",\n        children: \"Radio buttons\"\n      }), \" when there are 8 or fewer options.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Users can make choices faster when they can see the full list and not have to a dropdown or scroll to find options.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ControlGroup hideOptionalLabel label=\\\"Fruits\\\" hint=\\\"Hint text\\\" block>\\n\\t<Checkbox value=\\\"apple\\\">Apple</Checkbox>\\n\\t<Checkbox value=\\\"banana\\\">Banana</Checkbox>\\n\\t<Checkbox value=\\\"mango\\\">Mango</Checkbox>\\n\\t<Checkbox value=\\\"peach\\\">Peach</Checkbox>\\n</ControlGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Lists with more than 8 items\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use a \", _jsx(_components.a, {\n        href: \"/components/select\",\n        children: \"Select\"\n      }), \" menu or \", _jsx(_components.a, {\n        href: \"/components/combobox\",\n        children: \"Combobox\"\n      }), \" with a list of 8 items or more. The task and complexity of the list will determine which option is most suitable.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A select menu works best when users can see all options without excessive scrolling. A key benefit of using a select is that mobile devices handle them natively. This provides familiar, accessible and space-efficient controls.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use a combobox for longer lists where searching or filtering items will help users find the options they want.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Combobox is an efficient tool for power users, but less experienced users may still scroll to find and select an option. They are often not aware that they can use the input to type and filter.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Combobox\\n\\thint=\\\"Start typing to see results\\\"\\n\\tlabel=\\\"Food served\\\"\\n\\tonChange={console.log}\\n\\toptions={[\\n\\t\\t{ value: 'asian noodle bowls', label: 'Asian noodle bowls' },\\n\\t\\t{ value: 'banh mi sandwiches', label: 'Banh mi sandwiches' },\\n\\t\\t{ value: 'bbq ribs', label: 'BBQ ribs' },\\n\\t\\t{ value: 'burgers', label: 'Burgers' },\\n\\t\\t{ value: 'cake', label: 'Cake' },\\n\\t\\t{ value: 'coffee', label: 'Coffee' },\\n\\t\\t{ value: 'cookies', label: 'Cookies' },\\n\\t\\t{ value: 'falafel pitas', label: 'Falafel pitas' },\\n\\t\\t{ value: 'fish and chips', label: 'Fish and chips' },\\n\\t\\t{ value: 'fried chicken', label: 'Fried chicken' },\\n\\t\\t{ value: 'fries', label: 'Fries' },\\n\\t\\t{ value: 'grilled cheese sandwiches', label: 'Grilled cheese sandwiches' },\\n\\t\\t{ value: 'ice cream', label: 'Ice cream' },\\n\\t\\t{ value: 'mexican', label: 'Mexican' },\\n\\t\\t{ value: 'pasta', label: 'Pasta' },\\n\\t\\t{ value: 'pulled pork', label: 'Pulled pork' },\\n\\t\\t{ value: 'soft drinks', label: 'Soft drinks' },\\n\\t\\t{ value: 'veggie wraps', label: 'Veggie wraps' },\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Picking an option that is not listed\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Picking an option that is not available in a small list\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If users need to enter a value that isn’t in the list, include an ‘Other’ option at the end of the group. When they select it, conditionally review a text field so they can input their own answer.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If users need to give more than one custom answer, include an ‘Add another’ button below the conditionally revealed input. This lets them add more fields as needed. Each new input should have a unique, descriptive label to ensure they’re accessible and identifiable – for example, ‘Other option 2’. This pattern should only be used with Checkbox groups, not radio buttons.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Limit the number of additional fields where possible to avoid overwhelming the form.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FormStack>\\n\\t<ControlGroup hideOptionalLabel label=\\\"Fruits\\\" hint=\\\"Hint text\\\" block>\\n\\t\\t<Checkbox value=\\\"apple\\\">Apple</Checkbox>\\n\\t\\t<Checkbox value=\\\"banana\\\">Banana</Checkbox>\\n\\t\\t<Checkbox value=\\\"mango\\\">Mango</Checkbox>\\n\\t\\t<Checkbox value=\\\"peach\\\">Peach</Checkbox>\\n\\t\\t<Checkbox checked value=\\\"other\\\">\\n\\t\\t\\tOther\\n\\t\\t</Checkbox>\\n\\t</ControlGroup>\\n\\t<ConditionalFieldContainer visible>\\n\\t\\t<TextInput label=\\\"Other fruit\\\" required value=\\\"Plum\\\" />\\n\\t\\t<Button alignSelf=\\\"start\\\" iconBefore={PlusIcon} variant=\\\"text\\\">\\n\\t\\t\\tAdd another fruit\\n\\t\\t</Button>\\n\\t</ConditionalFieldContainer>\\n</FormStack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Picking an option that is not available in a list with more than 8 items\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add another option to a large list, compose a pattern of \", _jsx(_components.a, {\n        href: \"/components/select\",\n        children: \"Select\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/components/combobox\",\n        children: \"Combobox\"\n      }), \" with an ‘Other’ option. When ‘Other’ is selected:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"the field will show ‘Other’ as the selected value\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"a secondary text input will be conditionally revealed below the select/combobox\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"focus will be immediately moved to the newly revealed input field.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FormStack>\\n\\t<Combobox\\n\\t\\thint=\\\"Start typing to see results\\\"\\n\\t\\tlabel=\\\"Food served\\\"\\n\\t\\tonChange={console.log}\\n\\t\\toptions={[\\n\\t\\t\\t{ value: 'asian noodle bowls', label: 'Asian noodle bowls' },\\n\\t\\t\\t{ value: 'banh mi sandwiches', label: 'Banh mi sandwiches' },\\n\\t\\t\\t{ value: 'bbq ribs', label: 'BBQ ribs' },\\n\\t\\t\\t{ value: 'burgers', label: 'Burgers' },\\n\\t\\t\\t{ value: 'cake', label: 'Cake' },\\n\\t\\t\\t{ value: 'coffee', label: 'Coffee' },\\n\\t\\t\\t{ value: 'cookies', label: 'Cookies' },\\n\\t\\t\\t{ value: 'falafel pitas', label: 'Falafel pitas' },\\n\\t\\t\\t{ value: 'fish and chips', label: 'Fish and chips' },\\n\\t\\t\\t{ value: 'fried chicken', label: 'Fried chicken' },\\n\\t\\t\\t{ value: 'fries', label: 'Fries' },\\n\\t\\t\\t{\\n\\t\\t\\t\\tvalue: 'grilled cheese sandwiches',\\n\\t\\t\\t\\tlabel: 'Grilled cheese sandwiches',\\n\\t\\t\\t},\\n\\t\\t\\t{ value: 'ice cream', label: 'Ice cream' },\\n\\t\\t\\t{ value: 'mexican', label: 'Mexican' },\\n\\t\\t\\t{ value: 'pasta', label: 'Pasta' },\\n\\t\\t\\t{ value: 'pulled pork', label: 'Pulled pork' },\\n\\t\\t\\t{ value: 'soft drinks', label: 'Soft drinks' },\\n\\t\\t\\t{ value: 'veggie wraps', label: 'Veggie wraps' },\\n\\t\\t\\t{ value: 'other', label: 'Other' },\\n\\t\\t]}\\n\\t\\tvalue={{ value: 'other', label: 'Other' }}\\n\\t/>\\n\\t<ConditionalFieldContainer visible>\\n\\t\\t<TextInput\\n\\t\\t\\thint=\\\"Add another type of food served that was not previously listed\\\"\\n\\t\\t\\tlabel=\\\"Other food served\\\"\\n\\t\\t\\trequired\\n\\t\\t\\tvalue=\\\"Pizza\\\"\\n\\t\\t/>\\n\\t</ConditionalFieldContainer>\\n</FormStack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Selecting an option from a list","description":"The type of list component to use is determined by the task, the experience level of the user, and the number of items in the list. Selecting the appropriate input type helps users make choices more easily and accessibly.","relatedComponents":["checkbox","combobox","conditional-field-container","radio","select","text-input"]}},"content":"\n## Small lists\n\nUse a [Control group](/components/control-group) with a list of [Checkboxes](/components/checkbox) or [Radio buttons](/components/radio) when there are 8 or fewer options.\n\nUsers can make choices faster when they can see the full list and not have to a dropdown or scroll to find options.\n\n```jsx live\n<ControlGroup hideOptionalLabel label=\"Fruits\" hint=\"Hint text\" block>\n\t<Checkbox value=\"apple\">Apple</Checkbox>\n\t<Checkbox value=\"banana\">Banana</Checkbox>\n\t<Checkbox value=\"mango\">Mango</Checkbox>\n\t<Checkbox value=\"peach\">Peach</Checkbox>\n</ControlGroup>\n```\n\n## Lists with more than 8 items\n\nUse a [Select](/components/select) menu or [Combobox](/components/combobox) with a list of 8 items or more. The task and complexity of the list will determine which option is most suitable.\n\nA select menu works best when users can see all options without excessive scrolling. A key benefit of using a select is that mobile devices handle them natively. This provides familiar, accessible and space-efficient controls.\n\nUse a combobox for longer lists where searching or filtering items will help users find the options they want.\n\nCombobox is an efficient tool for power users, but less experienced users may still scroll to find and select an option. They are often not aware that they can use the input to type and filter.\n\n```jsx live\n<Combobox\n\thint=\"Start typing to see results\"\n\tlabel=\"Food served\"\n\tonChange={console.log}\n\toptions={[\n\t\t{ value: 'asian noodle bowls', label: 'Asian noodle bowls' },\n\t\t{ value: 'banh mi sandwiches', label: 'Banh mi sandwiches' },\n\t\t{ value: 'bbq ribs', label: 'BBQ ribs' },\n\t\t{ value: 'burgers', label: 'Burgers' },\n\t\t{ value: 'cake', label: 'Cake' },\n\t\t{ value: 'coffee', label: 'Coffee' },\n\t\t{ value: 'cookies', label: 'Cookies' },\n\t\t{ value: 'falafel pitas', label: 'Falafel pitas' },\n\t\t{ value: 'fish and chips', label: 'Fish and chips' },\n\t\t{ value: 'fried chicken', label: 'Fried chicken' },\n\t\t{ value: 'fries', label: 'Fries' },\n\t\t{ value: 'grilled cheese sandwiches', label: 'Grilled cheese sandwiches' },\n\t\t{ value: 'ice cream', label: 'Ice cream' },\n\t\t{ value: 'mexican', label: 'Mexican' },\n\t\t{ value: 'pasta', label: 'Pasta' },\n\t\t{ value: 'pulled pork', label: 'Pulled pork' },\n\t\t{ value: 'soft drinks', label: 'Soft drinks' },\n\t\t{ value: 'veggie wraps', label: 'Veggie wraps' },\n\t]}\n/>\n```\n\n## Picking an option that is not listed\n\n### Picking an option that is not available in a small list\n\nIf users need to enter a value that isn’t in the list, include an ‘Other’ option at the end of the group. When they select it, conditionally review a text field so they can input their own answer.\n\nIf users need to give more than one custom answer, include an ‘Add another’ button below the conditionally revealed input. This lets them add more fields as needed. Each new input should have a unique, descriptive label to ensure they’re accessible and identifiable – for example, ‘Other option 2’. This pattern should only be used with Checkbox groups, not radio buttons.\n\nLimit the number of additional fields where possible to avoid overwhelming the form.\n\n```jsx live\n<FormStack>\n\t<ControlGroup hideOptionalLabel label=\"Fruits\" hint=\"Hint text\" block>\n\t\t<Checkbox value=\"apple\">Apple</Checkbox>\n\t\t<Checkbox value=\"banana\">Banana</Checkbox>\n\t\t<Checkbox value=\"mango\">Mango</Checkbox>\n\t\t<Checkbox value=\"peach\">Peach</Checkbox>\n\t\t<Checkbox checked value=\"other\">\n\t\t\tOther\n\t\t</Checkbox>\n\t</ControlGroup>\n\t<ConditionalFieldContainer visible>\n\t\t<TextInput label=\"Other fruit\" required value=\"Plum\" />\n\t\t<Button alignSelf=\"start\" iconBefore={PlusIcon} variant=\"text\">\n\t\t\tAdd another fruit\n\t\t</Button>\n\t</ConditionalFieldContainer>\n</FormStack>\n```\n\n### Picking an option that is not available in a list with more than 8 items\n\nTo add another option to a large list, compose a pattern of [Select](/components/select) or [Combobox](/components/combobox) with an ‘Other’ option. When ‘Other’ is selected:\n\n- the field will show ‘Other’ as the selected value\n- a secondary text input will be conditionally revealed below the select/combobox\n- focus will be immediately moved to the newly revealed input field.\n\n```jsx live\n<FormStack>\n\t<Combobox\n\t\thint=\"Start typing to see results\"\n\t\tlabel=\"Food served\"\n\t\tonChange={console.log}\n\t\toptions={[\n\t\t\t{ value: 'asian noodle bowls', label: 'Asian noodle bowls' },\n\t\t\t{ value: 'banh mi sandwiches', label: 'Banh mi sandwiches' },\n\t\t\t{ value: 'bbq ribs', label: 'BBQ ribs' },\n\t\t\t{ value: 'burgers', label: 'Burgers' },\n\t\t\t{ value: 'cake', label: 'Cake' },\n\t\t\t{ value: 'coffee', label: 'Coffee' },\n\t\t\t{ value: 'cookies', label: 'Cookies' },\n\t\t\t{ value: 'falafel pitas', label: 'Falafel pitas' },\n\t\t\t{ value: 'fish and chips', label: 'Fish and chips' },\n\t\t\t{ value: 'fried chicken', label: 'Fried chicken' },\n\t\t\t{ value: 'fries', label: 'Fries' },\n\t\t\t{\n\t\t\t\tvalue: 'grilled cheese sandwiches',\n\t\t\t\tlabel: 'Grilled cheese sandwiches',\n\t\t\t},\n\t\t\t{ value: 'ice cream', label: 'Ice cream' },\n\t\t\t{ value: 'mexican', label: 'Mexican' },\n\t\t\t{ value: 'pasta', label: 'Pasta' },\n\t\t\t{ value: 'pulled pork', label: 'Pulled pork' },\n\t\t\t{ value: 'soft drinks', label: 'Soft drinks' },\n\t\t\t{ value: 'veggie wraps', label: 'Veggie wraps' },\n\t\t\t{ value: 'other', label: 'Other' },\n\t\t]}\n\t\tvalue={{ value: 'other', label: 'Other' }}\n\t/>\n\t<ConditionalFieldContainer visible>\n\t\t<TextInput\n\t\t\thint=\"Add another type of food served that was not previously listed\"\n\t\t\tlabel=\"Other food served\"\n\t\t\trequired\n\t\t\tvalue=\"Pizza\"\n\t\t/>\n\t</ConditionalFieldContainer>\n</FormStack>\n```\n","data":{"title":"Selecting an option from a list","description":"The type of list component to use is determined by the task, the experience level of the user, and the number of items in the list. Selecting the appropriate input type helps users make choices more easily and accessibly.","relatedComponents":["checkbox","combobox","conditional-field-container","radio","select","text-input"]},"title":"Selecting an option from a list","description":"The type of list component to use is determined by the task, the experience level of the user, and the number of items in the list. Selecting the appropriate input type helps users make choices more easily and accessibly.","figmaTemplateNodeId":null,"githubTemplatePath":null,"storybookPath":null,"relatedComponents":["checkbox","combobox","conditional-field-container","radio","select","text-input"],"relatedPatterns":null},"relatedComponents":[{"slug":"checkbox","name":"checkbox","title":"Checkbox","description":"Checkboxes allow users to select one or more options from a list.","storybookPath":"/story/forms-checkbox--basic","figmaGalleryNodeId":"18834%3A97097","subNavItems":[{"label":"Overview","href":"/components/checkbox","path":"/home/runner/work/agds-next/agds-next/packages/react/src/checkbox/docs/overview.mdx"},{"label":"Code","href":"/components/checkbox/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/checkbox/docs/code.mdx"},{"label":"Accessibility","href":"/components/checkbox/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/checkbox/docs/accessibility.mdx"}],"relatedComponents":["control-group","radio","switch"],"relatedPatterns":["conditional-reveal","selecting-multiple-options-from-a-list"],"deprecated":false,"unreleased":false},{"slug":"combobox","name":"combobox","title":"Combobox","description":"This component allows users to select from a list of options. It’s especially useful when there are many options to choose from.","storybookPath":"/story/forms-combobox-combobox--basic","figmaGalleryNodeId":"12925%3A104632","subNavItems":[{"label":"Overview","href":"/components/combobox","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/overview.mdx"},{"label":"Code","href":"/components/combobox/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/code.mdx"},{"label":"Accessibility","href":"/components/combobox/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/accessibility.mdx"}],"relatedComponents":["autocomplete","select","text-input","dropdown-menu"],"relatedPatterns":["selecting-multiple-options-from-a-list"],"deprecated":false,"unreleased":false},{"slug":"conditional-field-container","name":"conditional-field-container","title":"Conditional field container","description":"A standardised pattern for conditionally hiding and revealing the amount of content a user views in a form.","storybookPath":"/story/Forms-ConditionalFieldContainer--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/conditional-field-container","path":"/home/runner/work/agds-next/agds-next/packages/react/src/conditional-field-container/docs/overview.mdx"},{"label":"Content","href":"/components/conditional-field-container/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/conditional-field-container/docs/content.mdx"},{"label":"Code","href":"/components/conditional-field-container/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/conditional-field-container/docs/code.mdx"}],"relatedComponents":null,"relatedPatterns":["conditional-reveal"],"deprecated":false,"unreleased":false},{"slug":"radio","name":"radio","title":"Radio","description":"Radios allow users to select one option from a list.","storybookPath":"/story/forms-radio--basic","figmaGalleryNodeId":"12926%3A104981","subNavItems":[{"label":"Overview","href":"/components/radio","path":"/home/runner/work/agds-next/agds-next/packages/react/src/radio/docs/overview.mdx"},{"label":"Code","href":"/components/radio/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/radio/docs/code.mdx"},{"label":"Accessibility","href":"/components/radio/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/radio/docs/accessibility.mdx"}],"relatedComponents":["checkbox","control-group"],"relatedPatterns":["conditional-reveal"],"deprecated":false,"unreleased":false},{"slug":"select","name":"select","title":"Select","description":"Select provides a way for users to choose one item from a drop down list. It helps reduce input errors and screen space.","storybookPath":"/story/forms-select--basic","figmaGalleryNodeId":"12444%3A100538","subNavItems":[{"label":"Overview","href":"/components/select","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/overview.mdx"},{"label":"Code","href":"/components/select/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/code.mdx"},{"label":"Accessibility","href":"/components/select/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/accessibility.mdx"}],"relatedComponents":["combobox","dropdown-menu"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"text-input","name":"text-input","title":"Text input","description":"This component allows users to enter free-form text.","storybookPath":"/story/forms-textinput--basic","figmaGalleryNodeId":"12444%3A100673","subNavItems":[{"label":"Overview","href":"/components/text-input","path":"/home/runner/work/agds-next/agds-next/packages/react/src/text-input/docs/overview.mdx"},{"label":"Code","href":"/components/text-input/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/text-input/docs/code.mdx"},{"label":"Accessibility","href":"/components/text-input/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/text-input/docs/accessibility.mdx"}],"relatedComponents":["autocomplete","combobox","textarea","password-input"],"relatedPatterns":null,"deprecated":false,"unreleased":false}],"relatedPatterns":null,"toc":[{"id":"small-lists","title":"Small lists","level":2,"slug":"small-lists","items":[]},{"id":"lists-with-more-than-8-items","title":"Lists with more than 8 items","level":2,"slug":"lists-with-more-than-8-items","items":[]},{"id":"picking-an-option-that-is-not-listed","title":"Picking an option that is not listed","level":2,"slug":"picking-an-option-that-is-not-listed","items":[{"id":"picking-an-option-that-is-not-available-in-a-small-list","title":"Picking an option that is not available in a small list","level":3,"slug":"picking-an-option-that-is-not-available-in-a-small-list","items":[]},{"id":"picking-an-option-that-is-not-available-in-a-list-with-more-than-8-items","title":"Picking an option that is not available in a list with more than 8 items","level":3,"slug":"picking-an-option-that-is-not-available-in-a-list-with-more-than-8-items","items":[]}]},{"id":"related-components","items":[],"level":2,"slug":"related-components","title":"Related components"}]},"__N_SSG":true}