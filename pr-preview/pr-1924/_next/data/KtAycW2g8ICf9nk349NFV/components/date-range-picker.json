{"pageProps":{"pkg":{"slug":"date-range-picker","name":"date-range-picker","title":"Date range picker","description":"The Date range picker component allows users to select a range of dates via a calendar or text input.","storybookPath":"/story/forms-daterangepicker--basic","figmaGalleryNodeId":"18834%3A97298","subNavItems":[{"label":"Overview","href":"/components/date-range-picker","path":"/home/runner/work/agds-next/agds-next/packages/react/src/date-range-picker/docs/overview.mdx"},{"label":"Code","href":"/components/date-range-picker/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/date-range-picker/docs/code.mdx"},{"label":"Accessibility","href":"/components/date-range-picker/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/date-range-picker/docs/accessibility.mdx"}],"relatedComponents":["date-picker"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Date range picker"}],"toc":[{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\t// Set the value to a value that the user might think is valid\\n\\tconst [value, setValue] = React.useState({\\n\\t\\tfrom: undefined,\\n\\t\\tto: undefined,\\n\\t});\\n\\n\\t// This logic is for documentation purposes only. This should be done with `yup` or `zod`.\\n\\t// See Single-page form template\\n\\tconst isFromInvalid = React.useCallback((value, otherDate) => {\\n\\t\\treturn value ? !isValidDate(value, { toDate: otherDate }) : false;\\n\\t}, []);\\n\\n\\tconst isToInvalid = React.useCallback((value, otherDate) => {\\n\\t\\treturn value ? !isValidDate(value, { fromDate: otherDate }) : false;\\n\\t}, []);\\n\\n\\tconst fromInvalid = isFromInvalid(value.from, value.to);\\n\\tconst toInvalid = isToInvalid(value.to, value.from);\\n\\n\\tconst onFromInputChange = (fromValue) => {\\n\\t\\tconsole.log('onFromInputChange', fromValue);\\n\\t\\tsetValue({ ...value, from: fromValue });\\n\\t};\\n\\n\\tconst onToInputChange = (toValue) => {\\n\\t\\tconsole.log('onToInputChange', toValue);\\n\\t\\tsetValue({ ...value, to: toValue });\\n\\t};\\n\\n\\tconst onChange = (dateRange) => {\\n\\t\\tconsole.log('onChange', dateRange);\\n\\t\\tsetValue(dateRange);\\n\\t};\\n\\n\\treturn (\\n\\t\\t<DateRangePicker\\n\\t\\t\\tvalue={value}\\n\\t\\t\\tonChange={onChange}\\n\\t\\t\\tonFromInputChange={onFromInputChange}\\n\\t\\t\\tonToInputChange={onToInputChange}\\n\\t\\t\\tfromInvalid={fromInvalid}\\n\\t\\t\\ttoInvalid={toInvalid}\\n\\t\\t\\tmessage={\\n\\t\\t\\t\\tfromInvalid && toInvalid\\n\\t\\t\\t\\t\\t? 'Enter valid start and end dates'\\n\\t\\t\\t\\t\\t: fromInvalid\\n\\t\\t\\t\\t\\t? 'Enter a valid start date'\\n\\t\\t\\t\\t\\t: toInvalid\\n\\t\\t\\t\\t\\t? 'Enter a valid end date'\\n\\t\\t\\t\\t\\t: undefined\\n\\t\\t\\t}\\n\\t\\t/>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\t// Set the value to a value that the user might think is valid\\n\\tconst [value, setValue] = React.useState({\\n\\t\\tfrom: undefined,\\n\\t\\tto: undefined,\\n\\t});\\n\\n\\tconst today = new Date();\\n\\tconst lastWeek = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\\n\\tconst nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\\n\\n\\t// This logic is for documentation purposes only. This should be done with `yup` or `zod`.\\n\\t// See Single-page form template\\n\\n\\tconst isInvalid = React.useCallback((value) => {\\n\\t\\treturn value\\n\\t\\t\\t? !isValidDate(value, { maxDate: nextWeek, minDate: lastWeek })\\n\\t\\t\\t: false;\\n\\t}, []);\\n\\n\\tconst fromInvalid = isInvalid(value.from);\\n\\tconst toInvalid = isInvalid(value.to);\\n\\n\\tconst onFromInputChange = (fromValue) => {\\n\\t\\tconsole.log('onFromInputChange', fromValue);\\n\\t\\tsetValue({ ...value, from: fromValue });\\n\\t};\\n\\n\\tconst onToInputChange = (toValue) => {\\n\\t\\tconsole.log('onToInputChange', toValue);\\n\\t\\tsetValue({ ...value, to: toValue });\\n\\t};\\n\\n\\tconst onChange = (dateRange) => {\\n\\t\\tconsole.log('onChange', dateRange);\\n\\t\\tsetValue(dateRange);\\n\\t};\\n\\n\\treturn (\\n\\t\\t<DateRangePicker\\n\\t\\t\\tvalue={value}\\n\\t\\t\\tonChange={onChange}\\n\\t\\t\\tonFromInputChange={onFromInputChange}\\n\\t\\t\\tonToInputChange={onToInputChange}\\n\\t\\t\\tfromInvalid={fromInvalid}\\n\\t\\t\\ttoInvalid={toInvalid}\\n\\t\\t\\tminDate={lastWeek}\\n\\t\\t\\tmaxDate={nextWeek}\\n\\t\\t\\tmessage={\\n\\t\\t\\t\\tfromInvalid && toInvalid\\n\\t\\t\\t\\t\\t? 'Enter valid start and end dates'\\n\\t\\t\\t\\t\\t: fromInvalid\\n\\t\\t\\t\\t\\t? 'Enter a valid start date'\\n\\t\\t\\t\\t\\t: toInvalid\\n\\t\\t\\t\\t\\t? 'Enter a valid end date'\\n\\t\\t\\t\\t\\t: undefined\\n\\t\\t\\t}\\n\\t\\t/>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Date range picker","description":"The Date range picker component allows users to select a range of dates via a calendar or text input.","group":"Forms","storybookPath":"/story/forms-daterangepicker--basic","figmaGalleryNodeId":"18834%3A97298","relatedComponents":["date-picker"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"date-picker","name":"date-picker","title":"Date picker","description":"The Date picker component allows users to select a single date via a calendar or text input.","storybookPath":"/story/forms-datepicker-datepicker--basic","figmaGalleryNodeId":"12444%3A100327","subNavItems":[{"label":"Overview","href":"/components/date-picker","path":"/home/runner/work/agds-next/agds-next/packages/react/src/date-picker/docs/overview.mdx"},{"label":"Code","href":"/components/date-picker/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/date-picker/docs/code.mdx"},{"label":"Accessibility","href":"/components/date-picker/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/date-picker/docs/accessibility.mdx"}],"relatedComponents":["date-range-picker"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}