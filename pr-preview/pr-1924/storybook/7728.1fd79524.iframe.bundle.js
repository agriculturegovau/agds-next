"use strict";(self.webpackChunkagds_next=self.webpackChunkagds_next||[]).push([[7728],{"./packages/react/src/date-range-picker/DateRangePicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>DateRangePicker});var defineProperty=__webpack_require__("./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),isAfter=__webpack_require__("./node_modules/date-fns/esm/isAfter/index.js"),esm_isBefore=__webpack_require__("./node_modules/date-fns/esm/isBefore/index.js"),addDays=__webpack_require__("./node_modules/date-fns/esm/addDays/index.js"),index_module=__webpack_require__("./node_modules/use-debounce/dist/index.module.js"),box=__webpack_require__("./packages/react/src/box/index.ts"),flex=__webpack_require__("./packages/react/src/flex/index.ts"),stack=__webpack_require__("./packages/react/src/stack/index.ts"),core=__webpack_require__("./packages/react/src/core/index.ts"),field=__webpack_require__("./packages/react/src/field/index.ts"),a11y=__webpack_require__("./packages/react/src/a11y/index.ts"),_popover=__webpack_require__("./packages/react/src/_popover/index.ts"),utils=__webpack_require__("./packages/react/src/date-picker/utils.ts"),Calendar=__webpack_require__("./packages/react/src/date-picker/Calendar.tsx"),CalendarContext=__webpack_require__("./packages/react/src/date-picker/CalendarContext.tsx"),DatePickerInput=__webpack_require__("./packages/react/src/date-picker/DatePickerInput.tsx"),subMonths=__webpack_require__("./node_modules/date-fns/esm/subMonths/index.js"),addMonths=__webpack_require__("./node_modules/date-fns/esm/addMonths/index.js"),closestTo=__webpack_require__("./node_modules/date-fns/esm/closestTo/index.js"),differenceInCalendarMonths=__webpack_require__("./node_modules/date-fns/esm/differenceInCalendarMonths/index.js");var emotion_react_jsx_runtime_browser_esm=__webpack_require__("./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,defineProperty.A)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var _ref={name:"1coh6b9",styles:"min-height:200px"};const DateRangePicker=({allowedDateFormats:allowedDateFormatsProp=utils.e,legend,hint,id,fromInvalid=!1,toInvalid=!1,message,hideOptionalLabel,value,onChange,onFromInputChange:onFromInputChangeProp,onToInputChange:onToInputChangeProp,disabled,fromLabel="Start date",toLabel="End date",required=!1,minDate,maxDate,fromInputRef,toInputRef,yearRange,dateFormat="dd/MM/yyyy"})=>{const allowedDateFormats=(0,react.useMemo)((()=>Array.from(new Set([dateFormat,...allowedDateFormatsProp.filter((dateFormat=>utils.e.includes(dateFormat)))]))),[dateFormat,allowedDateFormatsProp]),{0:hasCalendarOpened,1:setHasCalendarOpened}=(0,react.useState)(!1),[isCalendarOpen,openCalendar,closeCalendar]=(0,core.C6)(!1),{0:inputMode,1:setInputMode}=(0,react.useState)(),fromTriggerRef=(0,react.useRef)(null),toTriggerRef=(0,react.useRef)(null),closeCalendarAndFocusTrigger=(0,react.useCallback)((()=>{closeCalendar(),setTimeout((()=>{toTriggerRef.current?.focus()}),0)}),[closeCalendar,toTriggerRef]);function onTriggerClick(){isCalendarOpen?closeCalendar():(valueAsDateOrUndefined.from&&!valueAsDateOrUndefined.to?setInputMode("to"):setInputMode("from"),setHasCalendarOpened(!0),openCalendar())}const popover=(0,_popover.f)(),valueAsDateOrUndefined=(0,react.useMemo)((()=>({from:"string"==typeof value.from?(0,utils.A9)(value.from):value.from,to:"string"==typeof value.to?(0,utils.A9)(value.to):value.to})),[value]),{0:hoveredDay,1:setHoveredDay}=(0,react.useState)(),onHover=(0,react.useCallback)((date=>{setHoveredDay(date.toISOString())}),[]),{0:fromInputValue,1:setFromInputValue}=(0,react.useState)((0,utils.Lp)(value.from,dateFormat)),{0:toInputValue,1:setToInputValue}=(0,react.useState)((0,utils.Lp)(value.to,dateFormat)),onSelect=(0,react.useCallback)(((_,selectedDay,activeModifiers)=>{if(!inputMode||activeModifiers.disabled)return;const range={from:valueAsDateOrUndefined.from||fromInputValue,to:valueAsDateOrUndefined.to||toInputValue};if("from"===inputMode?range.from=selectedDay:range.to=selectedDay,onChange(range),setFromInputValue(valueAsDateOrUndefined.from?(0,utils.Yq)(range.from,dateFormat):fromInputValue),setToInputValue(valueAsDateOrUndefined.to?(0,utils.Yq)(range.to,dateFormat):toInputValue),(range.from||fromInputValue)&&(range.to||toInputValue))return setHoveredDay(void 0),void("from"===inputMode?setInputMode("to"):closeCalendarAndFocusTrigger());"from"!==inputMode?range.from||!range.to||setInputMode("from"):setInputMode("to")}),[closeCalendarAndFocusTrigger,inputMode,onChange,valueAsDateOrUndefined,dateFormat,fromInputValue,toInputValue,setInputMode]);(0,react.useEffect)((()=>{setFromInputValue((0,utils.Lp)(value.from,dateFormat)),setToInputValue((0,utils.Lp)(value.to,dateFormat))}),[value,dateFormat]);const handleClickOutside=(0,react.useCallback)((()=>{isCalendarOpen&&closeCalendar()}),[isCalendarOpen,closeCalendar]);(0,core.Ls)([popover.popoverRef,fromTriggerRef,toTriggerRef],handleClickOutside),(0,react.useEffect)((()=>{const handleKeyDown=e=>{isCalendarOpen&&"Escape"===e.code&&(e.preventDefault(),e.stopPropagation(),closeCalendarAndFocusTrigger())};return window.addEventListener("keydown",handleKeyDown),()=>window.removeEventListener("keydown",handleKeyDown)}),[closeCalendarAndFocusTrigger,isCalendarOpen]);const disabledCalendarDays=(0,react.useMemo)((()=>{if(minDate||maxDate)return[minDate?{before:minDate}:void 0,maxDate?{after:maxDate}:void 0].filter((x=>Boolean(x)))}),[minDate,maxDate]),{windowWidth=0}=(0,core.lW)(),numberOfMonths=windowWidth>core.tokens.breakpoint.md?2:1,invalid=fromInvalid||toInvalid,{fieldsetId,fromId,hintId,messageId,toId}=function useDateRangePickerIds(idProp){const autoId=(0,core.Bi)(idProp),fieldsetId=idProp||`date-range-picker-${autoId}`,hintId=`date-range-picker-${autoId}-hint`,messageId=`date-range-picker-${autoId}-message`,fromId=`date-range-picker-${autoId}-from`,toId=`date-range-picker-${autoId}-to`;return{fieldsetId,fromId,hintId,messageId,toId}}(id),fromDescribedByIds=[fromInvalid&&message?messageId:null,hint?hintId:null].filter(Boolean).join(" "),toDescribedByIds=[toInvalid&&message?messageId:null,hint?hintId:null].filter(Boolean).join(" "),defaultMonth=function getCalendarDefaultMonth(inputMode,valueAsDateOrUndefined,yearRange,numberOfMonths){const value=(()=>{if("from"===inputMode)return valueAsDateOrUndefined.from?valueAsDateOrUndefined.from:valueAsDateOrUndefined.to?(0,subMonths.A)(valueAsDateOrUndefined.to,2===numberOfMonths?1:0):void 0;if("to"===inputMode)return valueAsDateOrUndefined.to?(0,subMonths.A)(valueAsDateOrUndefined.to,2===numberOfMonths?1:0):valueAsDateOrUndefined.from?(0,addMonths.A)(valueAsDateOrUndefined.from,0):void 0;if(yearRange){const earliestDateInRange=new Date(yearRange.from,0,1),lastDateInRange=new Date(yearRange.to,11,31);return(0,closestTo.A)(new Date,[earliestDateInRange,lastDateInRange])}})();if(value&&"to"===inputMode&&2===numberOfMonths)return 0===(valueAsDateOrUndefined?.from&&valueAsDateOrUndefined?.to?(0,differenceInCalendarMonths.A)(valueAsDateOrUndefined.to,valueAsDateOrUndefined.from):-1)?(0,addMonths.A)(value,1):value;return value}(inputMode,valueAsDateOrUndefined,yearRange,numberOfMonths),fromRange=(0,react.useCallback)((()=>"to"===inputMode?getRange(valueAsDateOrUndefined.from,hoveredDay):"from"===inputMode?getRange(hoveredDay,valueAsDateOrUndefined.from||valueAsDateOrUndefined.to):{}),[hoveredDay,inputMode,valueAsDateOrUndefined]),clearHoveredDay=(0,index_module.YQ)((()=>{setHoveredDay(void 0)}),100),popoverProps=(0,react.useMemo)((()=>popover.getPopoverProps()),[popover]),calendarProps=(0,react.useMemo)((()=>({defaultMonth,disabled:disabledCalendarDays,initialFocus:!0,inputMode,numberOfMonths,onSelect,returnFocusRef:"from"===inputMode?fromTriggerRef:toTriggerRef,selected:{from:"from"===inputMode&&valueAsDateOrUndefined.from&&valueAsDateOrUndefined.to&&(0,isAfter.A)(valueAsDateOrUndefined.from,valueAsDateOrUndefined.to)?void 0:valueAsDateOrUndefined.from,to:"to"===inputMode&&valueAsDateOrUndefined.from&&valueAsDateOrUndefined.to&&(0,esm_isBefore.A)(valueAsDateOrUndefined.to,valueAsDateOrUndefined.from)?void 0:valueAsDateOrUndefined.to},modifiers:{fromRange:day=>fromRange()[day.toISOString()]},modifiersClassNames:{fromRange:"range"},onHover,clearHoveredDay})),[clearHoveredDay,defaultMonth,disabledCalendarDays,fromRange,inputMode,numberOfMonths,onHover,onSelect,valueAsDateOrUndefined.from,valueAsDateOrUndefined.to]);return(0,emotion_react_jsx_runtime_browser_esm.Y)(field.E8,{id:fieldsetId,invalid,children:(0,emotion_react_jsx_runtime_browser_esm.FD)(box.Box,{as:"fieldset",children:[(0,emotion_react_jsx_runtime_browser_esm.Y)(field.dh,{as:"legend",css:legend?void 0:a11y.O_,hideOptionalLabel,required,children:legend??"Date range"}),(0,emotion_react_jsx_runtime_browser_esm.FD)(stack.Stack,{css:(0,emotion_react_browser_esm.AH)({marginTop:legend?(0,core.QY)(.5):void 0},"",""),gap:.5,children:[hint?(0,emotion_react_jsx_runtime_browser_esm.Y)(field.oE,{id:hintId,children:hint}):null,message&&invalid?(0,emotion_react_jsx_runtime_browser_esm.Y)(field.ih,{id:messageId,children:message}):null,(0,emotion_react_jsx_runtime_browser_esm.FD)(flex.Flex,_objectSpread(_objectSpread({},popover.getReferenceProps()),{},{flexWrap:"wrap",gap:1,inline:!0,children:[(0,emotion_react_jsx_runtime_browser_esm.Y)(DatePickerInput.J,{"aria-describedby":fromDescribedByIds.length>0?fromDescribedByIds:null,buttonAriaLabel:(0,utils.oo)({allowedDateFormats,rangeName:"start",value:fromInputValue}),buttonOnClick:onTriggerClick,buttonRef:fromTriggerRef,dateFormat,disabled,hideButton:!0,hideOptionalLabel:hideOptionalLabel||Boolean(legend),highlight:isCalendarOpen&&"from"===inputMode,id:fromId,invalid:{field:!1,input:fromInvalid},label:fromLabel,onBlur:e=>{const inputValue=e.target.value,range={from:(0,utils._U)(inputValue,allowedDateFormats),to:valueAsDateOrUndefined.to||(0,utils._U)(toInputValue,allowedDateFormats)||toInputValue};inputValue&&(!(0,utils.vd)(range.from)||range.from&&range.to&&(0,isAfter.A)(range.from,range.to))||minDate&&range.from&&(0,esm_isBefore.A)(range.from,minDate)||maxDate&&range.from&&(0,isAfter.A)(range.from,maxDate)?onFromInputChangeProp?.(inputValue):inputValue&&!range.from||onChange(range)},onChange:e=>{const inputValue=e.target.value;setFromInputValue(inputValue)},ref:fromInputRef,required,secondaryLabelDate:minDate,value:fromInputValue}),(0,emotion_react_jsx_runtime_browser_esm.Y)(DatePickerInput.J,{"aria-describedby":toDescribedByIds.length>0?toDescribedByIds:null,buttonAriaLabel:(0,utils.oo)({allowedDateFormats,rangeName:"end",value:toInputValue}),buttonOnClick:onTriggerClick,buttonRef:toTriggerRef,dateFormat,disabled,hideOptionalLabel:hideOptionalLabel||Boolean(legend),highlight:isCalendarOpen&&"to"===inputMode,id:toId,invalid:{field:!1,input:toInvalid},label:toLabel,onBlur:e=>{const inputValue=e.target.value,parsedDate=(0,utils._U)(inputValue,allowedDateFormats),range={from:valueAsDateOrUndefined.from||(0,utils._U)(fromInputValue,allowedDateFormats)||fromInputValue,to:parsedDate};inputValue&&(!(0,utils.vd)(parsedDate)||range.to&&range.from&&(0,esm_isBefore.A)(range.to,range.from))||minDate&&range.to&&(0,esm_isBefore.A)(range.to,minDate)||maxDate&&range.to&&(0,isAfter.A)(range.to,maxDate)?onToInputChangeProp?.(inputValue):inputValue&&!range.to||onChange(range)},onChange:e=>{const inputValue=e.target.value;setToInputValue(inputValue)},ref:toInputRef,required,secondaryLabelDate:maxDate||(0,addDays.A)(new Date,1),value:toInputValue})]}))]}),(0,emotion_react_jsx_runtime_browser_esm.Y)(CalendarContext.S,{yearRange,children:hasCalendarOpened?isCalendarOpen&&(0,emotion_react_jsx_runtime_browser_esm.Y)(_popover.A,_objectSpread(_objectSpread({},popoverProps),{},{children:(0,emotion_react_jsx_runtime_browser_esm.Y)(Calendar.eS,_objectSpread({},calendarProps))})):(0,emotion_react_jsx_runtime_browser_esm.Y)(_popover.A,_objectSpread(_objectSpread({},popoverProps),{},{children:isCalendarOpen&&(0,emotion_react_jsx_runtime_browser_esm.Y)(Calendar.eS,_objectSpread(_objectSpread({},calendarProps),{},{css:_ref}))}))})]})})};const getRange=(startDate,endDate)=>{const range={};if(startDate&&endDate){let current=(0,addDays.A)(new Date(startDate),1);const endDateAsDate=new Date(endDate);for(;current<endDateAsDate;)range[current.toISOString()]=!0,current=(0,addDays.A)(current,1)}return range}}}]);