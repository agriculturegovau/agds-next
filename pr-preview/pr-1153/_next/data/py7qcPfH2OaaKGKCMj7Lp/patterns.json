{"pageProps":{"title":"Patterns","description":"Patterns are reusable compositions of components that solve design problems and help ensure consistency across the service.","patternList":[{"order":100,"title":"Accessible form validation and error recovery","slug":"accessible-form-validation-and-recovery","description":"Form validation is a critical aspect of creating usable and accessible applications. By providing effective error feedback and guidance, you can help users submit accurate information while minimising frustrations."},{"order":100,"title":"Conditionally revealed questions","slug":"conditional-reveal","description":"Conditionally reveal a related question when a user selects a specific radio or checkbox option. This ensures that users only encounter questions when it is applicable to their selection."},{"order":100,"title":"Filtering a dataset","slug":"filtering-a-dataset","description":"Filters allows a user to refine the data they want to display in a large dataset by removing any items that do not match their criteria."},{"order":100,"title":"Loading, empty and error states","slug":"loading-data","description":"When loading data in an application, it is important to consider and design for loading, empty, and error states. These states will help set user expectations and prevent them from assuming that the interface is unresponsive."},{"order":100,"title":"Loading, empty and error states","slug":"loading-error-empty-states","description":"When loading data in an application, it is important to consider and design for loading, empty, and error states. These states will help set user expectations and prevent them from assuming that the interface is unresponsive."},{"order":100,"title":"Selecting multiple options","slug":"selecting-multiple-options","description":"Multi-select is a commonly used design pattern that allows users to select multiple options from a list. This pattern is used in various contexts such as search filters, form fields, and more."}]},"__N_SSG":true}