{"pageProps":{"pkg":{"slug":"pagination","name":"pagination","title":"Pagination","description":"Pagination separates large amounts of content into separate pages, which helps reduce cognitive load.","storybookPath":"/story/navigation-pagination--basic","figmaGalleryNodeId":"11978%3A107147","subNavItems":[{"label":"Overview","href":"/components/pagination","path":"/home/runner/work/agds-next/agds-next/packages/react/src/pagination/docs/overview.mdx"},{"label":"Content","href":"/components/pagination/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/pagination/docs/content.mdx"},{"label":"Code","href":"/components/pagination/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/pagination/docs/code.mdx"}],"relatedComponents":null,"relatedPatterns":["filtering-a-dataset"],"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Pagination"}],"toc":[{"id":"pagination-buttons","title":"Pagination Buttons","level":2,"slug":"pagination-buttons","items":[]},{"id":"range-text","title":"Range text","level":2,"slug":"range-text","items":[]},{"id":"items-per-page","title":"Items per page","level":2,"slug":"items-per-page","items":[]},{"title":"Related patterns","slug":"related-patterns","id":"related-patterns","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Pagination\\n\\tcurrentPage={5}\\n\\ttotalPages={10}\\n\\tgenerateHref={(page) => `/example?page=${page}`}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pagination allows users to see total number of pages, which page they are viewing, and how to navigate to other pages.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use pagination to separate large lists of content, such as search results, into smaller lists that are easier to interact with. Showing content on several pages prevents your content from becoming too long and overwhelming.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use to enable navigation to a large data set such as a long list of results\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for table listings, search results, and directories\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate the current page\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use links over buttons where possible\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"always place directly below the content you are paginating\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"centre align with the content you are paginating.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"display more than 5 page numbers between the ellipses dividers\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"left or right align with the content you are paginating.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Pagination Buttons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the \", _jsx(_components.code, {\n        children: \"Pagination\"\n      }), \" component renders a link for each list item. We strongly recommend using wherever possible as it the most inclusive and accessible solution for users.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This requires you to manage the state of the current page in the URL, which usually fine, but in scenarios where that isn't possible we offer a \", _jsx(_components.code, {\n        children: \"PaginationButtons\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"PaginationButtons\"\n      }), \" renders a button element for each list item which makes it possible to manage the state outside of the URL, e.g. \", _jsx(_components.code, {\n        children: \"React.useState\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [currentPage, setCurrentPage] = React.useState(5);\\n\\treturn (\\n\\t\\t<PaginationButtons\\n\\t\\t\\tcurrentPage={currentPage}\\n\\t\\t\\tonChange={setCurrentPage}\\n\\t\\t\\ttotalPages={10}\\n\\t\\t/>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Range text\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Pagination\"\n      }), \" component accepts a \", _jsx(_components.code, {\n        children: \"itemRangeText\"\n      }), \" prop, which is used to display the range of items currently being displayed.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"generatePaginationRangeText\"\n      }), \" function to generate a string which follows the format of \", _jsx(_components.code, {\n        children: \"1 - 10 of 458 items\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Pagination\\n\\tcurrentPage={5}\\n\\ttotalPages={10}\\n\\tgenerateHref={(page) => `/example?page=${page}`}\\n\\titemRangeText={generatePaginationRangeText({\\n\\t\\ttotalItems: 100,\\n\\t\\tcurrentPage: 5,\\n\\t\\titemsPerPage: 10,\\n\\t\\tsingularNoun: 'audit', // optional\\n\\t\\tpluralNoun: 'audits', // optional\\n\\t})}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Items per page\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Pagination\"\n      }), \" component accepts props which are used to display and change the number of items per page.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"itemsPerPage\"\n        }), \" - the number of items per page\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"itemsPerPageOptions\"\n        }), \" - an array of numbers that are used to populate the items per page dropdown\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"onItemsPerPageChange\"\n        }), \" - a function that is called when the number of items per page is changed\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Pagination\\n\\tcurrentPage={5}\\n\\ttotalPages={10}\\n\\tgenerateHref={(page) => `/example?page=${page}`}\\n\\titemsPerPage={25}\\n\\titemsPerPageOptions={[10, 25, 50, 100]}\\n\\tonItemsPerPageChange={(itemsPerPage) => console.log(itemsPerPage)}\\n\\titemRangeText={generatePaginationRangeText({\\n\\t\\ttotalItems: 100,\\n\\t\\tcurrentPage: 5,\\n\\t\\titemsPerPage: 25,\\n\\t})}\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Pagination","description":"Pagination separates large amounts of content into separate pages, which helps reduce cognitive load.","group":"Navigation","storybookPath":"/story/navigation-pagination--basic","figmaGalleryNodeId":"11978%3A107147","relatedPatterns":["filtering-a-dataset"]}},"relatedPatterns":[{"slug":"filtering-a-dataset","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, Table, TableCaption, TableHead, TableRow, TableCell, TableHeader, TableBody, ImageWithBorder} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!ImageWithBorder) _missingMdxReference(\"ImageWithBorder\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  if (!TableBody) _missingMdxReference(\"TableBody\", true);\n  if (!TableCaption) _missingMdxReference(\"TableCaption\", true);\n  if (!TableCell) _missingMdxReference(\"TableCell\", true);\n  if (!TableHead) _missingMdxReference(\"TableHead\", true);\n  if (!TableHeader) _missingMdxReference(\"TableHeader\", true);\n  if (!TableRow) _missingMdxReference(\"TableRow\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Filters can help a user find something they're looking for and see available options within a certain criteria.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Primary filters give users the fastest way to find what they're looking for.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When filters are applied, tags are added below the filters so that users can see the changes that are being applied to the dataset. Users can remove tags individually or for all filters.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"choose the right filter pattern to meet user needs\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"prioritise filters by expected usage\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include 1-2 primary filters above the dataset\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"remove tags feature as tags allow users to see the selections that are active and remove them easily\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter input methods\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Filters need to work within a limited space, so consider using input methods that do not need much space, such as:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/component/search-input\",\n          children: \"Search input\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/text-input\",\n          children: \"Text input\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/select\",\n          children: \"Select\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/checkbox\",\n          children: \"Checkbox\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/radio\",\n          children: \"Radio\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/combobox\",\n          children: \"Combobox\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/switch\",\n          children: \"Switch\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/date-picker\",\n          children: \"Date picker\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/date-picker\",\n          children: \"Date range picker\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filtering in tables\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Table filtering patterns are available in 3 sizes to accommodate a wide range of use cases and data sets:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Small:\"\n        }), \" 1-2 filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Medium:\"\n        }), \" 3-6 filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Large:\"\n        }), \" 6+ filters\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(Table, {\n      children: [_jsx(TableCaption, {\n        children: \"Filter sizes decision table\"\n      }), _jsx(TableHead, {\n        children: _jsxs(TableRow, {\n          children: [_jsx(TableCell, {}), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Small\"\n            })\n          }), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Medium\"\n            })\n          }), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Large\"\n            })\n          })]\n        })\n      }), _jsxs(TableBody, {\n        children: [_jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Number of filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"3-6\"\n          }), _jsx(TableCell, {\n            children: \"6+\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Number of primary filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Tags display active filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Submission required\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Small table filtering pattern\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Small is intended for 1-2 filters that are visible and sit above the dataset.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The small pattern is typically comprised of primary filters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-tables--filter-small\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/filtering-a-dataset-small.png\",\n      alt: \"Screenshot of the small table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Medium table filtering pattern\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Medium is intended to display 3-6 filters in an accordion that is opened and closed by a button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 to 2 of the most used filters should be displayed as the primary filters outside the accordion to make them easier and faster to access.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tags are added below the filters to show which are active and give the user an easy way to clear them.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-tables--filter-medium\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/filtering-a-dataset-medium.png\",\n      alt: \"Screenshot of the medium table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Large table filtering pattern\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Large is intended to display 6+ filters in a \", _jsx(_components.a, {\n        href: \"/components/drawer\",\n        children: \"Drawer\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 to 2 of the most used filters should be displayed as the primary filters outside the drawer to make them easier and faster to access.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Related filters should be grouped together in a \", _jsx(_components.a, {\n        href: \"/components/fieldset\",\n        children: \"Fieldset\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tags are added below the primary filters to show which are active and give the user an easy way to clear them.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Actions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/drawer\",\n        children: \"Drawer\"\n      }), \" component should contain a total of 4 actions:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Apply filters\\\" button\"\n        }), \": When a user presses the \\\"Apply filters\\\" button, filters should be applied and the Drawer should be closed.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Clear filters\\\" button\"\n        }), \": When a user presses the \\\"Clear filters\\\" button, filters should be cleared and reset to their original state. The Drawer should stay open.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Close\\\" button\"\n        }), \": When a user presses the \\\"Close\\\" button, the Drawer should close. Any changes that have been made since opening the Drawer should be discarded. This is essentially the same as the \\\"Cancel\\\" button.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Cancel\\\" button\"\n        }), \": When a user presses the \\\"Cancel\\\" button, the Drawer should close. Any changes that have been made since opening the Drawer should be discarded. This is essentially the same as the \\\"Close\\\" button.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/filtering-a-dataset-large.png\",\n      alt: \"Screenshot of the large table filtering pattern\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-tables--filter-large\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filtering a list of cards\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This pattern is used to display a collection of filterable links (\", _jsx(_components.a, {\n        href: \"/components/card\",\n        children: \"Cards\"\n      }), \") in a search results or catalogue page.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We use a two-column layout featuring the \", _jsx(_components.a, {\n        href: \"/components/filter-sidebar\",\n        children: \"Filter sidebar\"\n      }), \" component, which contains all of the filter options. It collapses on mobile devices, and displays a number of active filter options in the header.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/http://localhost:6006/?path=/story/patterns-search-results--list\",\n        children: \"View Storybook preview\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Filtering a dataset","description":"Filters allows a user to refine the data they want to display in a large dataset by removing any items that do not match their criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-tables--filter-small","relatedComponents":["filter-drawer","filter-sidebar","table","card","pagination"]}},"content":"\nFilters can help a user find something they're looking for and see available options within a certain criteria.\n\nPrimary filters give users the fastest way to find what they're looking for.\n\nWhen filters are applied, tags are added below the filters so that users can see the changes that are being applied to the dataset. Users can remove tags individually or for all filters.\n\n<DoHeading />\n\n- choose the right filter pattern to meet user needs\n- prioritise filters by expected usage\n- include 1-2 primary filters above the dataset\n\n<DontHeading />\n\n- remove tags feature as tags allow users to see the selections that are active and remove them easily\n\n## Filter input methods\n\nFilters need to work within a limited space, so consider using input methods that do not need much space, such as:\n\n- [Search input](/component/search-input)\n- [Text input](/components/text-input)\n- [Select](/components/select)\n- [Checkbox](/components/checkbox)\n- [Radio](/components/radio)\n- [Combobox](/components/combobox)\n- [Switch](/components/switch)\n- [Date picker](/components/date-picker)\n- [Date range picker](/components/date-picker)\n\n## Filtering in tables\n\nTable filtering patterns are available in 3 sizes to accommodate a wide range of use cases and data sets:\n\n- **Small:** 1-2 filters\n- **Medium:** 3-6 filters\n- **Large:** 6+ filters\n\n<Table>\n\t<TableCaption>Filter sizes decision table</TableCaption>\n\t<TableHead>\n\t\t<TableRow>\n\t\t\t<TableCell />\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tSmall\n\t\t\t</TableHeader>\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tMedium\n\t\t\t</TableHeader>\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tLarge\n\t\t\t</TableHeader>\n\t\t</TableRow>\n\t</TableHead>\n\t<TableBody>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tNumber of filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>3-6</TableCell>\n\t\t\t<TableCell>6+</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tNumber of primary filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tTags display active filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tSubmission required\n\t\t\t</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t</TableRow>\n\t</TableBody>\n</Table>\n\n### Small table filtering pattern\n\nSmall is intended for 1-2 filters that are visible and sit above the dataset.\n\nThe small pattern is typically comprised of primary filters.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-tables--filter-small)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/filtering-a-dataset-small.png\"\n\talt=\"Screenshot of the small table filtering pattern\"\n/>\n\n### Medium table filtering pattern\n\nMedium is intended to display 3-6 filters in an accordion that is opened and closed by a button.\n\n1 to 2 of the most used filters should be displayed as the primary filters outside the accordion to make them easier and faster to access.\n\nTags are added below the filters to show which are active and give the user an easy way to clear them.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-tables--filter-medium)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/filtering-a-dataset-medium.png\"\n\talt=\"Screenshot of the medium table filtering pattern\"\n/>\n\n### Large table filtering pattern\n\nLarge is intended to display 6+ filters in a [Drawer](/components/drawer).\n\n1 to 2 of the most used filters should be displayed as the primary filters outside the drawer to make them easier and faster to access.\n\nRelated filters should be grouped together in a [Fieldset](/components/fieldset).\n\nTags are added below the primary filters to show which are active and give the user an easy way to clear them.\n\n### Actions\n\nThe [Drawer](/components/drawer) component should contain a total of 4 actions:\n\n1. **\"Apply filters\" button**: When a user presses the \"Apply filters\" button, filters should be applied and the Drawer should be closed.\n2. **\"Clear filters\" button**: When a user presses the \"Clear filters\" button, filters should be cleared and reset to their original state. The Drawer should stay open.\n3. **\"Close\" button**: When a user presses the \"Close\" button, the Drawer should close. Any changes that have been made since opening the Drawer should be discarded. This is essentially the same as the \"Cancel\" button.\n4. **\"Cancel\" button**: When a user presses the \"Cancel\" button, the Drawer should close. Any changes that have been made since opening the Drawer should be discarded. This is essentially the same as the \"Close\" button.\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/filtering-a-dataset-large.png\"\n\talt=\"Screenshot of the large table filtering pattern\"\n/>\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-tables--filter-large)\n\n## Filtering a list of cards\n\nThis pattern is used to display a collection of filterable links ([Cards](/components/card)) in a search results or catalogue page.\n\nWe use a two-column layout featuring the [Filter sidebar](/components/filter-sidebar) component, which contains all of the filter options. It collapses on mobile devices, and displays a number of active filter options in the header.\n\n[View Storybook preview](/storybook/index.html?path=/story/http://localhost:6006/?path=/story/patterns-search-results--list)\n","data":{"title":"Filtering a dataset","description":"Filters allows a user to refine the data they want to display in a large dataset by removing any items that do not match their criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-tables--filter-small","relatedComponents":["filter-drawer","filter-sidebar","table","card","pagination"]},"title":"Filtering a dataset","description":"Filters allows a user to refine the data they want to display in a large dataset by removing any items that do not match their criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-tables--filter-small","relatedComponents":["filter-drawer","filter-sidebar","table","card","pagination"]}],"relatedComponents":null},"__N_SSG":true}