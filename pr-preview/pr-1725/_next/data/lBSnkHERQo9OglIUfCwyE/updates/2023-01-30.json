{"pageProps":{"update":{"slug":"2023-01-30","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"New components\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/file-input\",\n        children: \"File input\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A simple input for selecting files in a form. The \", _jsx(_components.code, {\n        children: \"FileInput\"\n      }), \" component is a wrapper around the native \", _jsx(_components.code, {\n        children: \"<input type=\\\"file\\\" />\"\n      }), \" element. Use when you require multiple files in a form, which must be associated as seperate fields. If you only require a single file, use the \", _jsx(_components.a, {\n        href: \"/components/file-upload\",\n        children: \"FileUpload\"\n      }), \" component instead.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileInput label=\\\"Drivers license\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Updates\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/card\",\n        children: \"Card\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Prevent link event from firing twice\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/combobox\",\n        children: \"Combobox\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Fixed bug in \", _jsx(_components.code, {\n          children: \"ComboboxAsync\"\n        }), \" where options would be loaded on initial render incorrectly.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Fixed a bug where the input element became non-interactive after blur\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/icon\",\n        children: \"Icon\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Added new icons: \", _jsx(_components.code, {\n          children: \"ChartBarIcon\"\n        }), \", \", _jsx(_components.code, {\n          children: \"ChartLineIcon\"\n        }), \", \", _jsx(_components.code, {\n          children: \"DeleteIcon\"\n        }), \", \", _jsx(_components.code, {\n          children: \"DownloadIcon\"\n        }), \", \", _jsx(_components.code, {\n          children: \"EditIcon\"\n        }), \", \", _jsx(_components.code, {\n          children: \"FilterIcon\"\n        }), \", \", _jsx(_components.code, {\n          children: \"HelpIcon\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"PrintIcon\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/tags\",\n        children: \"Tags\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Add support for removing tags\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/text-input\",\n        children: \"Text input\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Apply body background to all inputs\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Released packages\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"\\\"@ag.ds-next/react\\\": \\\"1.1.0\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Full changelog\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Aside from the \", _jsx(_components.a, {\n        href: \"https://design-system.agriculture.gov.au/updates/2023-01-30\",\n        children: \"complete release notes on the @ag.ds-next website\"\n      }), \", you can also view the \", _jsx(_components.a, {\n        href: \"https://github.com/agriculturegovau/agds-next/pull/924\",\n        children: \"verbose change log\"\n      }), \" in the \", _jsx(_components.a, {\n        href: \"https://github.com/agriculturegovau/agds-next/pull/924\",\n        children: \"related PR\"\n      }), \" for this release.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"date":"30th January 2023","title":"AgDS Beta v1.1.0 release","description":"New FileInput component and new icons. Bug fixes and improvements."}},"data":{"date":"30th January 2023","title":"AgDS Beta v1.1.0 release","description":"New FileInput component and new icons. Bug fixes and improvements."},"title":"AgDS Beta v1.1.0 release","description":"New FileInput component and new icons. Bug fixes and improvements.","date":"30th January 2023"},"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/updates","label":"Updates"},{"label":"AgDS Beta v1.1.0 release"}],"slug":"2023-01-30"},"__N_SSG":true}