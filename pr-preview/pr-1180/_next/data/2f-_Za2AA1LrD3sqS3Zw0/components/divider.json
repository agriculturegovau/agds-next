{"pageProps":{"pkg":{"slug":"divider","name":"divider","version":"1.5.1","title":"Divider","description":"A horizontal rule that seperates blocks of content.","storybookPath":"/story/Layout-Divider--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/divider","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider/docs/overview.mdx"},{"label":"Code","href":"/components/divider/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider/docs/code.mdx"}],"relatedComponents":null,"deprecated":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Divider"}],"toc":[],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Divider renders a horizontal rule (\", _jsx(_components.code, {\n        children: \"<hr>\"\n      }), \") that seperates blocks of content. This is commonly used between fieldsets in forms, or to break up text content.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={3}>\\n\\t<Fieldset\\n\\t\\tlegend={<H2>Business details</H2>}\\n\\t\\thint=\\\"Supporting information for provide details subheading - sm/default\\\"\\n\\t>\\n\\t\\t<FormStack>\\n\\t\\t\\t<TextInput\\n\\t\\t\\t\\tlabel=\\\"Australian Business Number (ABN)\\\"\\n\\t\\t\\t\\tid=\\\"abn\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t\\tinputMode=\\\"numeric\\\"\\n\\t\\t\\t\\tpattern=\\\"[0-9]*\\\"\\n\\t\\t\\t/>\\n\\t\\t\\t<TextInput\\n\\t\\t\\t\\tlabel=\\\"Business name\\\"\\n\\t\\t\\t\\tid=\\\"businessName\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t\\tmaxWidth=\\\"xl\\\"\\n\\t\\t\\t/>\\n\\t\\t</FormStack>\\n\\t</Fieldset>\\n\\t<Divider />\\n\\t<Fieldset\\n\\t\\tlegend={<H2>Provide entity details</H2>}\\n\\t\\thint=\\\"Supporting information for provide details subheading - sm/default\\\"\\n\\t>\\n\\t\\t<FormStack>\\n\\t\\t\\t<TextInput label=\\\"Entity name\\\" id=\\\"entityName\\\" required />\\n\\t\\t\\t<TextInput\\n\\t\\t\\t\\tlabel=\\\"Entity number\\\"\\n\\t\\t\\t\\tid=\\\"entityNumber\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t\\tinputMode=\\\"numeric\\\"\\n\\t\\t\\t\\tpattern=\\\"[0-9]*\\\"\\n\\t\\t\\t/>\\n\\t\\t</FormStack>\\n\\t</Fieldset>\\n</Stack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Divider","description":"A horizontal rule that seperates blocks of content.","group":"Layout","storybookPath":"/story/Layout-Divider--basic"}},"relatedComponents":null},"__N_SSG":true}