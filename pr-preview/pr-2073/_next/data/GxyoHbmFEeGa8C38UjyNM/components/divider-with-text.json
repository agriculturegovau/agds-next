{"pageProps":{"pkg":{"slug":"divider-with-text","name":"divider-with-text","title":"Divider with text","description":"A horizontal rule used to visually separate content with a label.","storybookPath":"/story/Content-DividerWithText--basic","figmaGalleryNodeId":"18634%3A85108","subNavItems":[{"label":"Overview","href":"/components/divider-with-text","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider-with-text/docs/overview.mdx"},{"label":"Code","href":"/components/divider-with-text/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider-with-text/docs/code.mdx"}],"relatedComponents":["divider"],"relatedPatterns":null,"deprecated":false,"unreleased":false,"colourSection":true},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Conditional field container","href":"/components/conditional-field-container"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Divider with text","href":"/components/divider-with-text"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Divider with text"}],"toc":[{"id":"example","title":"Example","level":2,"slug":"example","items":[]},{"id":"label-alignment","title":"Label alignment","level":2,"slug":"label-alignment","items":[]},{"title":"Colour","slug":"colour","id":"colour","level":2,"items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, ColourComponentSection} = _components;\n  if (!ColourComponentSection) _missingMdxReference(\"ColourComponentSection\", true);\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DividerWithText>\\n\\t<Text>Label</Text>\\n</DividerWithText>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Common use cases include dividing sections of a form, marking a logical break in content, or indicating options such as \\\"or\\\" between choices.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/components/divider\",\n        children: \"Divider\"\n      }), \" component if you want to separate content without a text label.\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use to create visual space and separation between blocks of content like form field sets in the main content area\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"divide and logically group content sections to enhance clarity and organisation\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use left alignment when the label needs to align with form fields or buttons for consistency in layout\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ensure the label text is succinct\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use the correct semantics on the text element.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use anything other than text as a label\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a long label.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={3}>\\n\\t<FormStack>\\n\\t\\t<TextInput label=\\\"Email address\\\" maxWidth=\\\"xl\\\" required type=\\\"email\\\" />\\n\\t\\t<PasswordInput label=\\\"Password\\\" maxWidth=\\\"xl\\\" required />\\n\\t\\t<ButtonGroup>\\n\\t\\t\\t<Button type=\\\"submit\\\">Sign in</Button>\\n\\t\\t</ButtonGroup>\\n\\t</FormStack>\\n\\t<DividerWithText textAlign=\\\"left\\\">Or</DividerWithText>\\n\\t<ButtonGroup>\\n\\t\\t<ButtonLink href=\\\"#\\\" variant=\\\"secondary\\\">\\n\\t\\t\\tCreate an account\\n\\t\\t</ButtonLink>\\n\\t</ButtonGroup>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Label alignment\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the default state, the divider line spans the full width of the container, with the label centered in the middle.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the label is left-aligned, it aligns with form inputs, buttons, or any other elements that follow the same alignment.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2}>\\n\\t<DividerWithText>\\n\\t\\t<Text>Or</Text>\\n\\t</DividerWithText>\\n\\t<DividerWithText textAlign=\\\"left\\\">\\n\\t\\t<Text>Or</Text>\\n\\t</DividerWithText>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(ColourComponentSection, {\n      children: `<DividerWithText>\n\t<Text>\n\t\tDivider with text: on [[PALETTE]] background\n\t</Text>\n</DividerWithText>`\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Divider with text","description":"A horizontal rule used to visually separate content with a label.","group":"Content","storybookPath":"/story/Content-DividerWithText--basic","figmaGalleryNodeId":"18634%3A85108","relatedComponents":["divider"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"divider","name":"divider","title":"Divider","description":"A horizontal rule that separates blocks of content.","storybookPath":"/story/content-Divider--basic","figmaGalleryNodeId":"18634%3A85108","subNavItems":[{"label":"Overview","href":"/components/divider","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider/docs/overview.mdx"},{"label":"Code","href":"/components/divider/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider/docs/code.mdx"}],"relatedComponents":["divider-with-text"],"relatedPatterns":null,"deprecated":false,"unreleased":false,"colourSection":true}]},"__N_SSG":true}