{"pageProps":{"template":{"slug":"multi-page-form","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Usage guidelines\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Try to limit forms to a single question per page (a question could include multiple related fields).\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Place the \", _jsx(_components.a, {\n          href: \"/components/progress-indicator\",\n          children: \"Progress indicator component\"\n        }), \" in left column.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The mobile version of the \", _jsx(_components.a, {\n          href: \"/components/progress-indicator\",\n          children: \"Progress indicator\"\n        }), \" compresses into accordion to ensure it’s not in the way of filling out the form.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Avoid using disabled buttons in the \", _jsx(_components.a, {\n          href: \"/components/progress-indicator\",\n          children: \"Progress indicator\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Avoid adding or removing dynamic list items in \", _jsx(_components.a, {\n          href: \"/components/progress-indicator\",\n          children: \"Progress indicator\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Include a sub heading above the \", _jsx(_components.a, {\n          href: \"/components/heading\",\n          children: \"H1\"\n        }), \" to tie form steps together.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Include a \", _jsx(_components.a, {\n          href: \"/components/button#button-groups\",\n          children: \"Button group\"\n        }), \" at the bottom.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Ensure primary button text is contextual, and consistent with the page heading - e.g. ‘Register establishment’. Avoid vague labels such as ‘Submit’.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Hide \", _jsx(_components.a, {\n          href: \"/components/breadcrumbs\",\n          children: \"Breadcrumbs\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"/components/side-nav\",\n          children: \"Side nav\"\n        }), \" to create focus on the form and reduce distractions.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include a ‘back’ link at the top.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Rationale behind having the ‘back’ link at the top:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"It’s a familiar position for the back button on mobile and web browsers.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It’s a conventional position for secondary navigation - breadcrumbs and back button.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"People can quickly go back to check the previous form.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"There’s less chance of people going back and losing a filled form by mistake.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It minimises the time for a user to proceed by reducing options near primary actions.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It maintains accurate visual hierarchy making the back action less prominent than the primary action ‘Continue’.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"order":6,"title":"Multi-page form","description":"Use this template to break up large forms into multiple smaller steps to decrease cognitive load.","previewPath":"/category/subcategory/multi-page-form","figmaTemplateNodeId":"8410%3A83825","githubTemplatePath":"/example-site/pages/category/subcategory/multi-page-form/index.tsx","storybookPath":"/story/templates-multi-page-form--intro-page"}},"content":"\n## Usage guidelines\n\n- Try to limit forms to a single question per page (a question could include multiple related fields).\n- Place the [Progress indicator component](/components/progress-indicator) in left column.\n- The mobile version of the [Progress indicator](/components/progress-indicator) compresses into accordion to ensure it’s not in the way of filling out the form.\n- Avoid using disabled buttons in the [Progress indicator](/components/progress-indicator).\n- Avoid adding or removing dynamic list items in [Progress indicator](/components/progress-indicator).\n- Include a sub heading above the [H1](/components/heading) to tie form steps together.\n- Include a [Button group](/components/button#button-groups) at the bottom.\n- Ensure primary button text is contextual, and consistent with the page heading - e.g. ‘Register establishment’. Avoid vague labels such as ‘Submit’.\n- Hide [Breadcrumbs](/components/breadcrumbs) and [Side nav](/components/side-nav) to create focus on the form and reduce distractions.\n- Include a ‘back’ link at the top.\n\n### Rationale behind having the ‘back’ link at the top:\n\n- It’s a familiar position for the back button on mobile and web browsers.\n- It’s a conventional position for secondary navigation - breadcrumbs and back button.\n- People can quickly go back to check the previous form.\n- There’s less chance of people going back and losing a filled form by mistake.\n- It minimises the time for a user to proceed by reducing options near primary actions.\n- It maintains accurate visual hierarchy making the back action less prominent than the primary action ‘Continue’.\n","data":{"order":6,"title":"Multi-page form","description":"Use this template to break up large forms into multiple smaller steps to decrease cognitive load.","previewPath":"/category/subcategory/multi-page-form","figmaTemplateNodeId":"8410%3A83825","githubTemplatePath":"/example-site/pages/category/subcategory/multi-page-form/index.tsx","storybookPath":"/story/templates-multi-page-form--intro-page"},"title":"Multi-page form","description":"Use this template to break up large forms into multiple smaller steps to decrease cognitive load.","previewPath":"/category/subcategory/multi-page-form","figmaTemplateNodeId":"8410%3A83825","githubTemplatePath":"/example-site/pages/category/subcategory/multi-page-form/index.tsx","storybookPath":"/story/templates-multi-page-form--intro-page"},"navLinks":[{"href":"/templates/home","label":"Home page"},{"href":"/templates/category","label":"Category page"},{"href":"/templates/subcategory","label":"Subcategory page"},{"href":"/templates/content","label":"Content page"},{"href":"/templates/single-page-form","label":"Single-page form"},{"href":"/templates/multi-page-form","label":"Multi-page form"},{"href":"/templates/sign-in","label":"Sign-in form page"},{"href":"/templates/error-page","label":"Error page"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/templates","label":"Templates"},{"label":"Multi-page form"}],"slug":"multi-page-form"},"__N_SSG":true}