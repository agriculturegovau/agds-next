import{j as t,t as b,k,a as s,c as i}from"./responsive-123a9343.js";import"./index-3b9dd0eb.js";import{F as r,S as T}from"./Stack-938d29d6.js";import{C as L}from"./Content-1f109ee5.js";import"./PageContent-a0776569.js";import"./SectionContent-49d65950.js";import"./ContentBleed-8062a65d.js";import{T as I}from"./Text-ade3e1ab.js";import{B as x}from"./Box-c8c0d4bd.js";import{V as z}from"./ExternalLinkCallout-dac509ef.js";const d=({children:e,fullScreen:a})=>t(r,{palette:"light",color:"text",flexDirection:"column",justifyContent:"center",alignItems:"center","aria-live":"assertive",css:{position:a?"fixed":"absolute",inset:0,zIndex:b.zIndex.overlay,backgroundColor:"rgba(255, 255, 255, 0.9)"},children:e});d.__docgenInfo={description:"",methods:[],displayName:"LoadingBlanketContainer"};const l=({children:e})=>t(L,{as:"div",children:t(T,{gap:1,alignItems:"center",textAlign:"center",children:e})});l.__docgenInfo={description:"",methods:[],displayName:"LoadingBlanketContent",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};const c=({children:e})=>t(I,{fontSize:"lg",fontWeight:"bold",lineHeight:"heading",role:"status",children:e});c.__docgenInfo={description:"",methods:[],displayName:"LoadingBlanketLabel",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};const C={sm:{gap:.5,dotSize:i(.5),dots:3},md:{gap:.5,dotSize:i(.75),dots:3},lg:{gap:.5,dotSize:i(.75),dots:5}},p=({label:e,"aria-live":a,role:m,className:g,size:u="md",...f})=>{const{gap:h,dots:y,dotSize:o}=C[u],v=Array.from(Array(y).keys());return s(r,{as:"span",gap:h,className:g,"aria-live":a,"aria-atomic":"false",role:m,...f,children:[e&&t(z,{children:e}),v.map(n=>t(x,{as:"span",height:o,width:o,highContrastOutline:!0,"aria-hidden":"true",css:{opacity:0,background:"currentColor",borderRadius:"50%",animationName:S,animationDuration:"1250ms",animationIterationCount:"infinite",animationDelay:`${n*100}ms`}},n))]})},S=k`
  0% { opacity: 0; }
  50% { opacity: 1; }
	100% { opacity: 0 }
`;p.__docgenInfo={description:"",methods:[],displayName:"LoadingDots",props:{label:{required:!1,tsType:{name:"string"},description:"Describes the loading element to assistive technologies."},"aria-live":{required:!1,tsType:{name:"HTMLAttributes['aria-live']",raw:"DivProps['aria-live']"},description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."},role:{required:!1,tsType:{name:"HTMLAttributes['role']",raw:"DivProps['role']"},description:"ARIA roles provide semantic meaning to content."},className:{required:!1,tsType:{name:"string"},description:"The CSS class name, typically generated from the `css` prop."},size:{required:!1,tsType:{name:"union",raw:"keyof typeof loadingDotsSizes",elements:[{name:"literal",value:"sm"},{name:"literal",value:"md"},{name:"literal",value:"lg"}]},description:"The size and number of the dots.",defaultValue:{value:"'md'",computed:!1}}}};const B=({fullScreen:e=!1,label:a})=>t(d,{fullScreen:e,children:s(l,{children:[t(p,{size:e?"lg":"md"}),t(c,{children:a})]})});B.__docgenInfo={description:"",methods:[],displayName:"LoadingBlanket",props:{fullScreen:{required:!1,tsType:{name:"boolean"},description:"If true, the blanket will cover the entire screen.",defaultValue:{value:"false",computed:!1}},label:{required:!0,tsType:{name:"ReactNode"},description:"The text to accompany the dots."}}};export{p as L,B as a};
