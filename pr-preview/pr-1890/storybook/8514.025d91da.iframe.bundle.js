"use strict";(self.webpackChunkagds_next=self.webpackChunkagds_next||[]).push([[8514],{"./packages/react/src/date-range-picker/DateRangePicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>DateRangePicker});var defineProperty=__webpack_require__("./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),box=__webpack_require__("./packages/react/src/box/index.ts"),flex=__webpack_require__("./packages/react/src/flex/index.ts"),stack=__webpack_require__("./packages/react/src/stack/index.ts"),core=__webpack_require__("./packages/react/src/core/index.ts"),field=__webpack_require__("./packages/react/src/field/index.ts"),a11y=__webpack_require__("./packages/react/src/a11y/index.ts"),_popover=__webpack_require__("./packages/react/src/_popover/index.ts"),utils=__webpack_require__("./packages/react/src/date-picker/utils.ts"),Calendar=__webpack_require__("./packages/react/src/date-picker/Calendar.tsx"),CalendarContext=__webpack_require__("./packages/react/src/date-picker/CalendarContext.tsx"),DatePickerInput=__webpack_require__("./packages/react/src/date-picker/DatePickerInput.tsx"),isBefore=__webpack_require__("./node_modules/date-fns/esm/isBefore/index.js"),closestTo=__webpack_require__("./node_modules/date-fns/esm/closestTo/index.js"),differenceInCalendarMonths=__webpack_require__("./node_modules/date-fns/esm/differenceInCalendarMonths/index.js"),subMonths=__webpack_require__("./node_modules/date-fns/esm/subMonths/index.js");function ensureValidDateRange(dateRange){const{to,from}=dateRange;return from&&to&&(0,isBefore.A)(to,from)?{from:to,to:from}:dateRange}var emotion_react_jsx_runtime_browser_esm=__webpack_require__("./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,defineProperty.A)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var _ref={name:"1coh6b9",styles:"min-height:200px"};const DateRangePicker=({allowedDateFormats:allowedDateFormatsProp=utils.e,legend,hint,id,fromInvalid=!1,toInvalid=!1,message,hideOptionalLabel,value,onChange,onFromInputChange:onFromInputChangeProp,onToInputChange:onToInputChangeProp,disabled,fromLabel="Start date",toLabel="End date",required=!1,minDate,maxDate,fromInputRef,toInputRef,yearRange,dateFormat="dd/MM/yyyy"})=>{const allowedDateFormats=(0,react.useMemo)((()=>Array.from(new Set([dateFormat,...allowedDateFormatsProp.filter((dateFormat=>utils.e.includes(dateFormat)))]))),[dateFormat,allowedDateFormatsProp]),{0:hasCalendarOpened,1:setHasCalendarOpened}=(0,react.useState)(!1),[isCalendarOpen,openCalendar,closeCalendar]=(0,core.C6)(!1),toggleCalendar=isCalendarOpen?closeCalendar:openCalendar,{0:inputMode,1:setInputMode}=(0,react.useState)(),fromTriggerRef=(0,react.useRef)(null),toTriggerRef=(0,react.useRef)(null);const popover=(0,_popover.f)(),valueAsDateOrUndefined=(0,react.useMemo)((()=>({from:"string"==typeof value.from?(0,utils.A9)(value.from):value.from,to:"string"==typeof value.to?(0,utils.A9)(value.to):value.to})),[value]),onSelect=(0,react.useCallback)(((_,selectedDay,activeModifiers)=>{if(!inputMode||activeModifiers.disabled)return;const range=ensureValidDateRange("from"===inputMode?{from:selectedDay,to:valueAsDateOrUndefined.to}:{from:valueAsDateOrUndefined.from,to:selectedDay});if(onChange(range),setFromInputValue(range.from?(0,utils.Yq)(range.from,dateFormat):""),setToInputValue(range.to?(0,utils.Yq)(range.to,dateFormat):""),range.from&&range.to)return closeCalendar(),void setInputMode(void 0);"from"!==inputMode?"to"!==inputMode||range.from||setInputMode("from"):setInputMode("to")}),[closeCalendar,inputMode,onChange,valueAsDateOrUndefined,dateFormat]),{0:fromInputValue,1:setFromInputValue}=(0,react.useState)((0,utils.Lp)(value.from,dateFormat)),{0:toInputValue,1:setToInputValue}=(0,react.useState)((0,utils.Lp)(value.to,dateFormat));(0,react.useEffect)((()=>{setFromInputValue((0,utils.Lp)(value.from,dateFormat)),setToInputValue((0,utils.Lp)(value.to,dateFormat))}),[value,dateFormat]);const handleClickOutside=(0,react.useCallback)((()=>{isCalendarOpen&&closeCalendar()}),[isCalendarOpen,closeCalendar]);(0,core.Ls)([popover.popoverRef,fromTriggerRef,toTriggerRef],handleClickOutside),(0,react.useEffect)((()=>{const handleKeyDown=e=>{isCalendarOpen&&"Escape"===e.code&&(e.preventDefault(),e.stopPropagation(),closeCalendar(),setInputMode(void 0))};return window.addEventListener("keydown",handleKeyDown),()=>window.removeEventListener("keydown",handleKeyDown)}),[isCalendarOpen,closeCalendar]);const disabledCalendarDays=(0,react.useMemo)((()=>{if(minDate||maxDate)return[minDate?{before:minDate}:void 0,maxDate?{after:maxDate}:void 0].filter((x=>Boolean(x)))}),[minDate,maxDate]),{windowWidth=0}=(0,core.lW)(),numberOfMonths=windowWidth>core.tokens.breakpoint.md?2:1,invalid=fromInvalid||toInvalid,{fieldsetId,fromId,hintId,messageId,toId}=function useDateRangePickerIds(idProp){const autoId=(0,core.Bi)(idProp),fieldsetId=idProp||`date-range-picker-${autoId}`,hintId=`date-range-picker-${autoId}-hint`,messageId=`date-range-picker-${autoId}-message`,fromId=`date-range-picker-${autoId}-from`,toId=`date-range-picker-${autoId}-to`;return{fieldsetId,fromId,hintId,messageId,toId}}(id),fromDescribedByIds=[fromInvalid&&message?messageId:null,hint?hintId:null].filter(Boolean).join(" "),toDescribedByIds=[toInvalid&&message?messageId:null,hint?hintId:null].filter(Boolean).join(" "),defaultMonth=function getCalendarDefaultMonth(inputMode,valueAsDateOrUndefined,yearRange,numberOfMonths){const value=(()=>{if("from"===inputMode&&valueAsDateOrUndefined.from)return valueAsDateOrUndefined.from;if("to"===inputMode&&valueAsDateOrUndefined.to)return valueAsDateOrUndefined.to;if(yearRange){const earliestDateInRange=new Date(yearRange.from,0,1),lastDateInRange=new Date(yearRange.to,11,31);return(0,closestTo.A)(new Date,[earliestDateInRange,lastDateInRange])}})();if(value&&"to"===inputMode&&2===numberOfMonths)return 0===(valueAsDateOrUndefined?.from&&valueAsDateOrUndefined?.to?(0,differenceInCalendarMonths.A)(valueAsDateOrUndefined.to,valueAsDateOrUndefined.from):-1)?value:(0,subMonths.A)(value,1);return value}(inputMode,valueAsDateOrUndefined,yearRange,numberOfMonths),popoverProps=(0,react.useMemo)((()=>popover.getPopoverProps()),[popover]),calendarProps=(0,react.useMemo)((()=>({defaultMonth,disabled:disabledCalendarDays,initialFocus:!0,numberOfMonths,onSelect,returnFocusRef:"from"===inputMode?fromTriggerRef:toTriggerRef,selected:valueAsDateOrUndefined})),[defaultMonth,disabledCalendarDays,inputMode,numberOfMonths,onSelect,valueAsDateOrUndefined]);return(0,emotion_react_jsx_runtime_browser_esm.Y)(field.E8,{invalid,id:fieldsetId,children:(0,emotion_react_jsx_runtime_browser_esm.FD)(box.Box,{as:"fieldset",children:[(0,emotion_react_jsx_runtime_browser_esm.Y)(field.dh,{as:"legend",required,hideOptionalLabel,css:legend?void 0:a11y.O_,children:legend??"Date range"}),(0,emotion_react_jsx_runtime_browser_esm.FD)(stack.Stack,{gap:.5,css:(0,emotion_react_browser_esm.AH)({marginTop:legend?(0,core.mapSpacing)(.5):void 0},"",""),children:[hint?(0,emotion_react_jsx_runtime_browser_esm.Y)(field.oE,{id:hintId,children:hint}):null,message&&invalid?(0,emotion_react_jsx_runtime_browser_esm.Y)(field.ih,{id:messageId,children:message}):null,(0,emotion_react_jsx_runtime_browser_esm.FD)(flex.Flex,_objectSpread(_objectSpread({},popover.getReferenceProps()),{},{flexWrap:"wrap",inline:!0,gap:1,children:[(0,emotion_react_jsx_runtime_browser_esm.Y)(DatePickerInput.J,{"aria-describedby":fromDescribedByIds.length>0?fromDescribedByIds:null,ref:fromInputRef,label:fromLabel,hideOptionalLabel:hideOptionalLabel||Boolean(legend),value:fromInputValue,onBlur:e=>{const inputValue=e.target.value,parsedDate=(0,utils._U)(inputValue,allowedDateFormats),constrainedDate=(0,utils.QO)(parsedDate,minDate,maxDate),nextValue=ensureValidDateRange({from:constrainedDate,to:valueAsDateOrUndefined.to});!inputValue||constrainedDate?onChange(nextValue):onFromInputChangeProp?.(inputValue)},onChange:e=>{const inputValue=e.target.value;setFromInputValue(inputValue)},buttonRef:fromTriggerRef,buttonOnClick:function onFromTriggerClick(){setInputMode("from"),toggleCalendar(),setHasCalendarOpened(!0)},buttonAriaLabel:(0,utils.oo)({allowedDateFormats,rangeName:"start",value:fromInputValue}),disabled,required,invalid:{field:!1,input:fromInvalid},dateFormat,id:fromId}),(0,emotion_react_jsx_runtime_browser_esm.Y)(DatePickerInput.J,{"aria-describedby":toDescribedByIds.length>0?toDescribedByIds:null,ref:toInputRef,label:toLabel,hideOptionalLabel:hideOptionalLabel||Boolean(legend),value:toInputValue,onBlur:e=>{const inputValue=e.target.value,parsedDate=(0,utils._U)(inputValue,allowedDateFormats),constrainedDate=(0,utils.QO)(parsedDate,minDate,maxDate),nextValue=ensureValidDateRange({from:valueAsDateOrUndefined.from,to:constrainedDate});!inputValue||constrainedDate?onChange(nextValue):onToInputChangeProp?.(inputValue)},onChange:e=>{const inputValue=e.target.value;setToInputValue(inputValue)},buttonRef:toTriggerRef,buttonOnClick:function onToTriggerClick(){setInputMode("to"),toggleCalendar(),setHasCalendarOpened(!0)},buttonAriaLabel:(0,utils.oo)({allowedDateFormats,rangeName:"end",value:toInputValue}),disabled,required,invalid:{field:!1,input:toInvalid},dateFormat,id:toId})]}))]}),(0,emotion_react_jsx_runtime_browser_esm.Y)(CalendarContext.S,{yearRange,children:hasCalendarOpened?isCalendarOpen&&(0,emotion_react_jsx_runtime_browser_esm.Y)(_popover.A,_objectSpread(_objectSpread({},popoverProps),{},{children:(0,emotion_react_jsx_runtime_browser_esm.Y)(Calendar.eS,_objectSpread({},calendarProps))})):(0,emotion_react_jsx_runtime_browser_esm.Y)(_popover.A,_objectSpread(_objectSpread({},popoverProps),{},{children:isCalendarOpen&&(0,emotion_react_jsx_runtime_browser_esm.Y)(Calendar.eS,_objectSpread(_objectSpread({},calendarProps),{},{css:_ref}))}))})]})})};DateRangePicker.__docgenInfo={description:"",methods:[],displayName:"DateRangePicker",props:{minDate:{required:!1,tsType:{name:"Date"},description:"If set, any days before this date will not be selectable."},maxDate:{required:!1,tsType:{name:"Date"},description:"If set, any days after this date will not be selectable."},allowedDateFormats:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"unknown[number]",raw:"(typeof acceptedDateFormats)[number]"}],raw:"ReadonlyArray<AcceptedDateFormats>"},description:"Specifies the date formats that can be parsed.",defaultValue:{value:"[\n\t'dd/MM/yyyy', // e.g. 18/02/2023\n\t'dd-MM-yyyy', // e.g. 18-02-2023\n\t'dd MM yyyy', // e.g. 18 02 2023\n\t'MM/dd/yyyy', // e.g. 02/18/2023\n\t'MM-dd-yyyy', // e.g. 02-18-2023\n\t'MM dd yyyy', // e.g. 02 18 2023\n\t'do MMMM yyyy', // e.g. 8th February 2023\n\t'do MMM yyyy', // e.g. 8th Feb 2023\n\t'MMMM do yyyy', // e.g. February 8th 2023\n\t'MMM do yyyy', // e.g. Feb 8th 2023\n\t'd MMMM yyyy', // e.g. 8 February 2023\n\t'd MMM yyyy', // e.g. 8 Feb 2023\n\t'MMMM d yyyy', // e.g. February 8 2023\n\t'MMM d yyyy', // e.g. Feb 8 2023\n\t'dd MMMM yyyy', // e.g. 08 February 2023\n\t'dd MMM yyyy', // e.g. 08 Feb 2023\n\t'MMMM dd yyyy', // e.g. February 08 2023\n\t'MMM dd yyyy', // e.g. Feb 08 2023\n]",computed:!1}},legend:{required:!1,tsType:{name:"string"},description:"Describes the purpose of the group of fields."},hint:{required:!1,tsType:{name:"string"},description:"Provides extra information about the group of fields."},id:{required:!1,tsType:{name:"string"},description:"Defines an identifier (ID) which must be unique."},message:{required:!1,tsType:{name:"string"},description:"Message to show when the field is invalid."},fromInvalid:{required:!1,tsType:{name:"boolean"},description:"If true, the invalid state will be rendered for the start date.",defaultValue:{value:"false",computed:!1}},toInvalid:{required:!1,tsType:{name:"boolean"},description:"If true, the invalid state will be rendered for the end date.",defaultValue:{value:"false",computed:!1}},hideOptionalLabel:{required:!1,tsType:{name:"boolean"},description:'If true, "(optional)" will never be appended to the legend even when `required` is `false`.'},disabled:{required:!1,tsType:{name:"boolean"},description:"If true, the field will not be interactive."},required:{required:!1,tsType:{name:"boolean"},description:'If false, "(optional)" will not be appended to the legend.',defaultValue:{value:"false",computed:!1}},value:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n\tfrom: Date | string | undefined;\n\tto: Date | string | undefined;\n}",signature:{properties:[{key:"from",value:{name:"union",raw:"Date | string | undefined",elements:[{name:"Date"},{name:"string"},{name:"undefined"}],required:!0}},{key:"to",value:{name:"union",raw:"Date | string | undefined",elements:[{name:"Date"},{name:"string"},{name:"undefined"}],required:!0}}]}},description:"The value of the field."},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(day: DateRange) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n\tfrom: Date | undefined;\n\tto: Date | undefined;\n}",signature:{properties:[{key:"from",value:{name:"union",raw:"Date | undefined",elements:[{name:"Date"},{name:"undefined"}],required:!0}},{key:"to",value:{name:"union",raw:"Date | undefined",elements:[{name:"Date"},{name:"undefined"}],required:!0}}]}},name:"day"}],return:{name:"void"}}},description:"Function to be fired following a change event."},onFromInputChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(inputValue: string | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},name:"inputValue"}],return:{name:"void"}}},description:"Function to be fired when the input value is updated."},onToInputChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(inputValue: string | undefined) => void",signature:{arguments:[{type:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},name:"inputValue"}],return:{name:"void"}}},description:"Function to be fired when the input value is updated."},fromLabel:{required:!1,tsType:{name:"string"},description:"The label above the start date.",defaultValue:{value:"'Start date'",computed:!1}},toLabel:{required:!1,tsType:{name:"string"},description:"The label above the end date.",defaultValue:{value:"'End date'",computed:!1}},fromInputRef:{required:!1,tsType:{name:"Ref",elements:[{name:"HTMLInputElement"}],raw:"Ref<HTMLInputElement>"},description:"Ref to the start input element."},toInputRef:{required:!1,tsType:{name:"Ref",elements:[{name:"HTMLInputElement"}],raw:"Ref<HTMLInputElement>"},description:"Ref to the end input element."},yearRange:{required:!1,tsType:{name:"signature",type:"object",raw:"{ from: number; to: number }",signature:{properties:[{key:"from",value:{name:"number",required:!0}},{key:"to",value:{name:"number",required:!0}}]}},description:"The range of options to display in calendar year select."},dateFormat:{required:!1,tsType:{name:"unknown[number]",raw:"(typeof acceptedDateFormats)[number]"},description:"Used to adjust the date format displayed in the text input and secondary label.",defaultValue:{value:"'dd/MM/yyyy'",computed:!1}}}}}}]);