{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/foundations","label":"Foundations"},{"label":"Icons"}],"foundation":{"slug":"icons","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {AllIconsPlayground} = _components;\n  if (!AllIconsPlayground) _missingMdxReference(\"AllIconsPlayground\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Usage guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When using an icon, prefer also adding an accessible label and making it discoverable to all users. When an icon’s purpose is clearly conveyed by its accompanying context and will not provide additional benefit to screen reader users, keep it as decorative.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each icon in our library is meaningful and universal, to ensure users understand them. Icons should not be too detailed, to ensure they’re clear at all sizes.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When using an icon with a button or link, the icon should appear before the text except when the icon indicates direction, e.g. Next or external links.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"React component\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/icon\",\n        children: \"Icon component\"\n      }), \" is used to apply our set of universal icons to more complex components of the system.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"All icons\"\n    }), \"\\n\", _jsx(AllIconsPlayground, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"order":2,"title":"Icons","description":"The Agriculture Design System supports the use of universal system icons."}},"content":"\n## Usage guidelines\n\nWhen using an icon, prefer also adding an accessible label and making it discoverable to all users. When an icon’s purpose is clearly conveyed by its accompanying context and will not provide additional benefit to screen reader users, keep it as decorative.\n\nEach icon in our library is meaningful and universal, to ensure users understand them. Icons should not be too detailed, to ensure they’re clear at all sizes.\n\nWhen using an icon with a button or link, the icon should appear before the text except when the icon indicates direction, e.g. Next or external links.\n\n## React component\n\nThe [Icon component](/components/icon) is used to apply our set of universal icons to more complex components of the system.\n\n## All icons\n\n<AllIconsPlayground />\n","data":{"order":2,"title":"Icons","description":"The Agriculture Design System supports the use of universal system icons."},"title":"Icons","description":"The Agriculture Design System supports the use of universal system icons."},"toc":[{"id":"usage-guidelines","title":"Usage guidelines","level":2,"slug":"usage-guidelines","items":[]},{"id":"react-component","title":"React component","level":2,"slug":"react-component","items":[]},{"id":"all-icons","title":"All icons","level":2,"slug":"all-icons","items":[]}]},"__N_SSG":true}