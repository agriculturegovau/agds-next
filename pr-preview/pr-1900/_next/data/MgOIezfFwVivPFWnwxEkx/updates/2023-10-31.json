{"pageProps":{"update":{"slug":"2023-10-31","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Updates\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/autocomplete\",\n        children: \"Autocomplete\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Improved the \", _jsx(_components.code, {\n          children: \"renderItem\"\n        }), \" prop which controls how each option in the dropdown list is rendered. Inside this function, consumers can style extra information about an option by using a new component called \", _jsx(_components.code, {\n          children: \"AutocompleteRenderItem\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/button\",\n        children: \"Button\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Added flex-shrinking to icons to prevent from shrinking when the button label spans multiple lines\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Switched to min-height instead of height to better accommodate buttons with multi-line labels\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Updated text alignment for the text button variant\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/combobox\",\n        children: \"Combobox\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Improved the \", _jsx(_components.code, {\n          children: \"renderItem\"\n        }), \" prop which controls how each option in the dropdown list is rendered. Inside this function, consumers can style extra information about an option by using a new component called \", _jsx(_components.code, {\n          children: \"ComboboxRenderItem\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/dropdown-menu\",\n        children: \"Dropdown menu\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Minor improvements to internal state reducer\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/text-input\",\n        children: \"Pagination\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Fixed small bug where separators were sometimes being displayed unnecessarily\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"/components/text-input\",\n        children: \"Text input\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Added support for \", _jsx(_components.code, {\n          children: \"max-length\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Released packages\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"\\\"@ag.ds-next/react\\\": \\\"1.15.0\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Full changelog\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Aside from the complete release notes on the @ag.ds-next website, you can also view the verbose change log in the \", _jsx(_components.a, {\n        href: \"https://github.com/agriculturegovau/agds-next/pull/1441\",\n        children: \"related PR\"\n      }), \" for this release.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"date":"31st October 2023","title":"AgDS Beta v1.15.0 release","description":"Various minor bug fixes and improvements."}},"data":{"date":"31st October 2023","title":"AgDS Beta v1.15.0 release","description":"Various minor bug fixes and improvements."},"title":"AgDS Beta v1.15.0 release","description":"Various minor bug fixes and improvements.","date":"31st October 2023"},"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/updates","label":"Updates"},{"label":"AgDS Beta v1.15.0 release"}],"slug":"2023-10-31"},"__N_SSG":true}