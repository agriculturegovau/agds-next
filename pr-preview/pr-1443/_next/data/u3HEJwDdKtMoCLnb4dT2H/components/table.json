{"pageProps":{"pkg":{"slug":"table","name":"table","title":"Table","description":"Tables help make complex information easier to scan and compare. Use tables for exact values or information that would be hard to read in body text.","storybookPath":"/story/content-table--basic","figmaGalleryNodeId":"11981%3A101727","subNavItems":[{"label":"Overview","href":"/components/table","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/overview.mdx"},{"label":"Rationale","href":"/components/table/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/rationale.mdx"},{"label":"Content","href":"/components/table/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/content.mdx"},{"label":"Code","href":"/components/table/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/code.mdx"},{"label":"Accessibility","href":"/components/table/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/accessibility.mdx"}],"relatedComponents":["summary-list"],"relatedPatterns":["selectable-table-with-batch-actions"],"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Table"}],"toc":[{"id":"striped","title":"Striped","level":2,"slug":"striped","items":[]},{"id":"custom-column-width","title":"Custom column width","level":2,"slug":"custom-column-width","items":[]},{"id":"sortable-columns","title":"Sortable columns","level":2,"slug":"sortable-columns","items":[]},{"id":"labels-and-headings","title":"Labels and headings","level":2,"slug":"labels-and-headings","items":[]},{"id":"actions","title":"Actions","level":2,"slug":"actions","items":[]},{"id":"selectable-with-batch-actions","title":"Selectable with batch actions","level":2,"slug":"selectable-with-batch-actions","items":[]},{"title":"Related patterns","slug":"related-patterns","id":"related-patterns","level":2,"items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2015\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Location</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tables are used to scan for information and compare values. They are useful for displaying exact values or information that would be hard to read in body text.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For data tables with a small amount of rows use the default table. Align text columns and corresponding data cells to the left. When comparing numbers in a column, align data cells and column headers to the right.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use for datasets with more than 2 columns\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use for tabular data - not layouts\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide a meaningful caption (heading), or use aria-labelledby to reference a heading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Keep row heights small.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use a simple table structure - complex tables are difficult to navigate.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use Pagination to break up tables with many rows\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"align text left and numeric data right\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"only include text, tags, links and status badges as content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a human readable format for numeric data – for example, 1,234,000 instead of 12340000.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"allow row sorting by using \", _jsx(_components.code, {\n          children: \"TableHeaderSortable\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"repeat information across cells. If each cell has the same content, add it as the column header – for example, Width (cm).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"nest tables inside tables\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use if a list, paragraph of text or diagram will work\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use to summarise form collection data - use a \", _jsx(_components.a, {\n          href: \"/components/summary-list\",\n          children: \"Summary list\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"add lists, diagrams or images.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"have too many rows. Use pagination or start another table where logical – for example, an alphabetical list, Table 1: A to D, Table 2: E to H and so on\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use bespoke styling - follow consistent layouts and styles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"nest tables inside tables\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"don’t use inside an accorion.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Striped\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use tiger stripes for tables with complex information:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"4 or more rows\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"3 or more columns\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"comparing important or similar information.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can enable tiger stripes by applying the \", _jsx(_components.code, {\n        children: \"striped\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table striped>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2015\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Location</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Custom column width\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can use custom widths based on the expected length of the data under each corresponding column.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table striped>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2015\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"50%\\\">\\n\\t\\t\\t\\t\\tLocation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Sortable columns\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"TableHeaderSortable\"\n      }), \" component to make columns sortable. This component is a wrapper around the \", _jsx(_components.code, {\n        children: \"TableHeader\"\n      }), \" component and adds the necessary aria attributes to make the column sortable.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can see a working example of this component in the \", _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-tables--filter-medium\",\n        children: \"Table Filtering Patterns\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table striped>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2015\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeaderSortable\\n\\t\\t\\t\\t\\tscope=\\\"col\\\"\\n\\t\\t\\t\\t\\tsort=\\\"ASC\\\"\\n\\t\\t\\t\\t\\twidth=\\\"50%\\\"\\n\\t\\t\\t\\t\\tonClick={console.log}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tLocation\\n\\t\\t\\t\\t</TableHeaderSortable>\\n\\t\\t\\t\\t<TableHeaderSortable scope=\\\"col\\\" width=\\\"50%\\\" onClick={console.log}>\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeaderSortable>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Labels and headings\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A Table must have some form of caption or heading to describe the data it contains. This can be done using the \", _jsx(_components.code, {\n        children: \"TableCaption\"\n      }), \" component, or referencing a heading using \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t<H3 id=\\\"table-heading\\\">Applications</H3>\\n\\t<Text id=\\\"table-description\\\">\\n\\t\\tThis list of active establishment registrations\\n\\t</Text>\\n\\t<TableWrapper>\\n\\t\\t<Table aria-labelledby=\\\"table-heading\\\" aria-describedby=\\\"table-description\\\">\\n\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Location</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableHead>\\n\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tNew South Wales\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tVictoria\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tQueensland\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tWestern Australia\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tSouth Australia\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tTasmania\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tNorthern Territory\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAustralian Capital Territory\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableBody>\\n\\t\\t</Table>\\n\\t</TableWrapper>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The actions associated with each table row (e.g. \\\"Edit\\\", \\\"Delete\\\", \\\"Download\\\") should always be positioned in the last column beneath the table header labeled \\\"Actions.\\\"\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If each table row can open a page to view more information, the cells in the first column should be displayed as bold clickable links under the table header labeled with the unique identifier.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table>\\n\\t\\t<TableCaption>Applications</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Status</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>20/06/2022</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge weight=\\\"subtle\\\" tone=\\\"info\\\" label=\\\"In progress\\\" />\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Edit</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-5GH6IJ7K</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>25/06/2022</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge weight=\\\"subtle\\\" tone=\\\"info\\\" label=\\\"In progress\\\" />\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Edit</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-M8NO9PQR</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>02/07/2022</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge weight=\\\"subtle\\\" tone=\\\"success\\\" label=\\\"Completed\\\" />\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Edit</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-S1TU2VWX</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>05/08/2022</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge weight=\\\"subtle\\\" tone=\\\"info\\\" label=\\\"In progress\\\" />\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Edit</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-Y3ZA4B5C</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>19/10/2022</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge weight=\\\"subtle\\\" tone=\\\"success\\\" label=\\\"Completed\\\" />\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Edit</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Selectable with batch actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected items.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more information, read the \", _jsx(_components.a, {\n        href: \"/patterns/selectable-table-with-batch-actions\",\n        children: \"Selectable tables with batch actions pattern\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedRows, setSelectedRows] = useState([]);\\n\\n\\tfunction toggleRowSelection(rowIdx) {\\n\\t\\tif (selectedRows.includes(rowIdx)) {\\n\\t\\t\\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows((r) => [...r, rowIdx]);\\n\\t\\t}\\n\\t}\\n\\n\\tconst anyRowsChecked = selectedRows.length > 0;\\n\\tconst allRowsChecked = selectedRows.length === 3;\\n\\n\\tfunction toggleAllRows() {\\n\\t\\tif (anyRowsChecked) {\\n\\t\\t\\tsetSelectedRows([]);\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows([0, 1, 2]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Stack gap={0.5}>\\n\\t\\t\\t<Stack>\\n\\t\\t\\t\\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\\n\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\tchecked={allRowsChecked}\\n\\t\\t\\t\\t\\t\\tindeterminate={anyRowsChecked && !allRowsChecked}\\n\\t\\t\\t\\t\\t\\tonChange={() => toggleAllRows()}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tSelect all rows\\n\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t<Table>\\n\\t\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t\\t{Array.from(new Array(3).keys()).map((idx) => {\\n\\t\\t\\t\\t\\t\\t\\tconst isRowSelected = selectedRows.includes(idx);\\n\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => toggleRowSelection(idx)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>20/06/2022</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t\\t</Table>\\n\\t\\t\\t</Stack>\\n\\t\\t\\t{selectedRows.length > 0 ? (\\n\\t\\t\\t\\t<TableBatchActionsBar>\\n\\t\\t\\t\\t\\t<TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t\\tApply action to {selectedRows.length} items\\n\\t\\t\\t\\t\\t</TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDelete\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" size=\\\"sm\\\" onClick={toggleAllRows}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t</TableBatchActionsBar>\\n\\t\\t\\t) : null}\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Table","description":"Tables help make complex information easier to scan and compare. Use tables for exact values or information that would be hard to read in body text.","group":"Content","storybookPath":"/story/content-table--basic","figmaGalleryNodeId":"11981%3A101727","relatedComponents":["summary-list"],"relatedPatterns":["selectable-table-with-batch-actions"]}},"relatedPatterns":[{"slug":"selectable-table-with-batch-actions","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Individual row selection\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To toggle the selection of an individual row, users can use the \", _jsx(_components.a, {\n        href: \"/components/checkbox\",\n        children: \"Checkbox\"\n      }), \" in the first column which should have the row heading \\\"Select\\\".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Selected rows have a solid action coloured outline, which is achieved by setting \", _jsx(_components.code, {\n        children: \"selected={true}\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"TableRow\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isRowSelected, setIsRowSelected] = useState(false);\\n\\treturn (\\n\\t\\t<Table>\\n\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableHead>\\n\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\tonChange={() => setIsRowSelected((x) => !x)}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select row</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>20/06/2022</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableBody>\\n\\t\\t</Table>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Selecting all rows\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To toggle the selection of all rows at once, users can use the \\\"Select all rows\\\" checkbox above the table. The \\\"Select all rows\\\" checkbox should always be placed just above the table element, with a border to divide the two elements.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Do not use \", _jsx(_components.code, {\n        children: \"TableCaption\"\n      }), \" component in combination with the \\\"Select all rows\\\" checkbox as the caption will sit in between the checkbox and table. Instead, place a \", _jsx(_components.a, {\n        href: \"/components/heading\",\n        children: \"Heading\"\n      }), \" component above the Checkbox and connect the heading and table using \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \". For more information, please refer to the \", _jsx(_components.a, {\n        href: \"/components/table#labels-and-headings\",\n        children: \"Labels and headings\"\n      }), \" section of the table documentation.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Unlike the checkboxes in each row, the \\\"Select all rows\\\" checkbox above the table has three states: checked, unchecked, and indeterminate. When some, but not all, rows are selected, the \\\"Select all rows\\\" checkbox should enter an indeterminate state. This visual indicator signals to users that not all rows are selected and allows them to toggle all rows on or off with a single click.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedRows, setSelectedRows] = useState([]);\\n\\n\\tfunction toggleRowSelection(rowIdx) {\\n\\t\\tif (selectedRows.includes(rowIdx)) {\\n\\t\\t\\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows((r) => [...r, rowIdx]);\\n\\t\\t}\\n\\t}\\n\\n\\tconst anyRowsChecked = selectedRows.length > 0;\\n\\tconst allRowsChecked = selectedRows.length === 3;\\n\\n\\tfunction toggleAllRows() {\\n\\t\\tif (anyRowsChecked) {\\n\\t\\t\\tsetSelectedRows([]);\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows([0, 1, 2]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Stack>\\n\\t\\t\\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\\n\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\tchecked={allRowsChecked}\\n\\t\\t\\t\\t\\tindeterminate={anyRowsChecked && !allRowsChecked}\\n\\t\\t\\t\\t\\tonChange={() => toggleAllRows()}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tSelect all rows\\n\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t</Box>\\n\\t\\t\\t<Table>\\n\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t{Array.from(new Array(3).keys()).map((idx) => {\\n\\t\\t\\t\\t\\t\\tconst isRowSelected = selectedRows.includes(idx);\\n\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => toggleRowSelection(idx)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>20/06/2022</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t</Table>\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Batch actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When one or more rows in a table is selected, users can perform batch actions on the selected rows. Batch actions can increase user efficiency compared to the effort of repeatedly performing the same action across multiple table rows.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Once a row from the table has been selected, the \", _jsx(_components.code, {\n        children: \"TableBatchActionsBar\"\n      }), \" component is positioned sticky at the bottom of the table, presenting a set of possible actions to apply to all selected rows.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Only small \", _jsx(_components.a, {\n        href: \"/components/button\",\n        children: \"Buttons\"\n      }), \" should be placed inside of the \", _jsx(_components.code, {\n        children: \"TableBatchActionsBar\"\n      }), \" component. When pressed, these buttons should trigger \", _jsx(_components.a, {\n        href: \"/components/drawer\",\n        children: \"Drawers\"\n      }), \" that contain the form related to the action.\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ensure each batch action can be performed on every selectable row\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a \\\"Cancel\\\" button at the end of the batch actions button group\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use small buttons for batch actions\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"include batch actions that can not be performed on every selectable row\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"place form components inside the \", _jsx(_components.code, {\n          children: \"TableBatchActionsBar\"\n        }), \" component, as they can introduce inconsistencies as well as complexities related to validation and submission.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/content-table--selectable-with-batch-actions\",\n        children: \"View an example in Storybook\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedRows, setSelectedRows] = useState([]);\\n\\n\\tfunction toggleRowSelection(rowIdx) {\\n\\t\\tif (selectedRows.includes(rowIdx)) {\\n\\t\\t\\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows((r) => [...r, rowIdx]);\\n\\t\\t}\\n\\t}\\n\\n\\tconst anyRowsChecked = selectedRows.length > 0;\\n\\tconst allRowsChecked = selectedRows.length === 3;\\n\\n\\tfunction toggleAllRows() {\\n\\t\\tif (anyRowsChecked) {\\n\\t\\t\\tsetSelectedRows([]);\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows([0, 1, 2]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Stack gap={0.5}>\\n\\t\\t\\t<Stack>\\n\\t\\t\\t\\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\\n\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\tchecked={allRowsChecked}\\n\\t\\t\\t\\t\\t\\tindeterminate={anyRowsChecked && !allRowsChecked}\\n\\t\\t\\t\\t\\t\\tonChange={() => toggleAllRows()}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tSelect all rows\\n\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t<Table>\\n\\t\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t\\t{Array.from(new Array(3).keys()).map((idx) => {\\n\\t\\t\\t\\t\\t\\t\\tconst isRowSelected = selectedRows.includes(idx);\\n\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => toggleRowSelection(idx)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>20/06/2022</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t\\t</Table>\\n\\t\\t\\t</Stack>\\n\\t\\t\\t{selectedRows.length > 0 ? (\\n\\t\\t\\t\\t<TableBatchActionsBar>\\n\\t\\t\\t\\t\\t<TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t\\tApply action to {selectedRows.length} items\\n\\t\\t\\t\\t\\t</TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDelete\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" size=\\\"sm\\\" onClick={toggleAllRows}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t</TableBatchActionsBar>\\n\\t\\t\\t) : null}\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Selectable tables with batch actions","description":"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected rows.","storybookPath":"/story/content-table--selectable-with-batch-actions","relatedComponents":["table","checkbox","button","drawer"],"githubTemplatePath":"/.storybook/stories/SelectableTableBatchActions"}},"content":"\n## Individual row selection\n\nTo toggle the selection of an individual row, users can use the [Checkbox](/components/checkbox) in the first column which should have the row heading \"Select\".\n\nSelected rows have a solid action coloured outline, which is achieved by setting `selected={true}` on the `TableRow` component.\n\n```jsx live\n() => {\n\tconst [isRowSelected, setIsRowSelected] = useState(false);\n\treturn (\n\t\t<Table>\n\t\t\t<TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t\t<TableHeader>Select</TableHeader>\n\t\t\t\t\t<TableHeader scope=\"col\">Reference</TableHeader>\n\t\t\t\t\t<TableHeader scope=\"col\">Date submitted</TableHeader>\n\t\t\t\t\t<TableHeader scope=\"col\">Actions</TableHeader>\n\t\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t\t<TableBody>\n\t\t\t\t<TableRow selected={isRowSelected}>\n\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tchecked={isRowSelected}\n\t\t\t\t\t\t\tonChange={() => setIsRowSelected((x) => !x)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<VisuallyHidden>Select row</VisuallyHidden>\n\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t<TableCell as=\"th\" scope=\"row\" fontWeight=\"bold\">\n\t\t\t\t\t\t<TextLink href=\"#\">REF-AB3CD4EF</TextLink>\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t<TableCell>20/06/2022</TableCell>\n\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t<Flex gap={1}>\n\t\t\t\t\t\t\t<TextLink href=\"#\">Download</TextLink>\n\t\t\t\t\t\t\t<TextLink href=\"#\">Delete</TextLink>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</TableCell>\n\t\t\t\t</TableRow>\n\t\t\t</TableBody>\n\t\t</Table>\n\t);\n};\n```\n\n## Selecting all rows\n\nTo toggle the selection of all rows at once, users can use the \"Select all rows\" checkbox above the table. The \"Select all rows\" checkbox should always be placed just above the table element, with a border to divide the two elements.\n\nDo not use `TableCaption` component in combination with the \"Select all rows\" checkbox as the caption will sit in between the checkbox and table. Instead, place a [Heading](/components/heading) component above the Checkbox and connect the heading and table using `aria-labelledby`. For more information, please refer to the [Labels and headings](/components/table#labels-and-headings) section of the table documentation.\n\nUnlike the checkboxes in each row, the \"Select all rows\" checkbox above the table has three states: checked, unchecked, and indeterminate. When some, but not all, rows are selected, the \"Select all rows\" checkbox should enter an indeterminate state. This visual indicator signals to users that not all rows are selected and allows them to toggle all rows on or off with a single click.\n\n```jsx live\n() => {\n\tconst [selectedRows, setSelectedRows] = useState([]);\n\n\tfunction toggleRowSelection(rowIdx) {\n\t\tif (selectedRows.includes(rowIdx)) {\n\t\t\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\n\t\t} else {\n\t\t\tsetSelectedRows((r) => [...r, rowIdx]);\n\t\t}\n\t}\n\n\tconst anyRowsChecked = selectedRows.length > 0;\n\tconst allRowsChecked = selectedRows.length === 3;\n\n\tfunction toggleAllRows() {\n\t\tif (anyRowsChecked) {\n\t\t\tsetSelectedRows([]);\n\t\t} else {\n\t\t\tsetSelectedRows([0, 1, 2]);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Stack>\n\t\t\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\n\t\t\t\t<Checkbox\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tchecked={allRowsChecked}\n\t\t\t\t\tindeterminate={anyRowsChecked && !allRowsChecked}\n\t\t\t\t\tonChange={() => toggleAllRows()}\n\t\t\t\t>\n\t\t\t\t\tSelect all rows\n\t\t\t\t</Checkbox>\n\t\t\t</Box>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableHeader>Select</TableHeader>\n\t\t\t\t\t\t<TableHeader scope=\"col\">Reference</TableHeader>\n\t\t\t\t\t\t<TableHeader scope=\"col\">Date submitted</TableHeader>\n\t\t\t\t\t\t<TableHeader scope=\"col\">Actions</TableHeader>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{Array.from(new Array(3).keys()).map((idx) => {\n\t\t\t\t\t\tconst isRowSelected = selectedRows.includes(idx);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow selected={isRowSelected}>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tchecked={isRowSelected}\n\t\t\t\t\t\t\t\t\t\tonChange={() => toggleRowSelection(idx)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<VisuallyHidden>Select</VisuallyHidden>\n\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell as=\"th\" scope=\"row\" fontWeight=\"bold\">\n\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">REF-AB3CD4EF</TextLink>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>20/06/2022</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t<Flex gap={1}>\n\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Download</TextLink>\n\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Delete</TextLink>\n\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</Stack>\n\t);\n};\n```\n\n## Batch actions\n\nWhen one or more rows in a table is selected, users can perform batch actions on the selected rows. Batch actions can increase user efficiency compared to the effort of repeatedly performing the same action across multiple table rows.\n\nOnce a row from the table has been selected, the `TableBatchActionsBar` component is positioned sticky at the bottom of the table, presenting a set of possible actions to apply to all selected rows.\n\nOnly small [Buttons](/components/button) should be placed inside of the `TableBatchActionsBar` component. When pressed, these buttons should trigger [Drawers](/components/drawer) that contain the form related to the action.\n\n<DoHeading />\n\n- ensure each batch action can be performed on every selectable row\n- include a \"Cancel\" button at the end of the batch actions button group\n- use small buttons for batch actions\n\n<DontHeading />\n\n- include batch actions that can not be performed on every selectable row\n- place form components inside the `TableBatchActionsBar` component, as they can introduce inconsistencies as well as complexities related to validation and submission.\n\n[View an example in Storybook](/storybook/index.html?path=/story/content-table--selectable-with-batch-actions)\n\n```jsx live\n() => {\n\tconst [selectedRows, setSelectedRows] = useState([]);\n\n\tfunction toggleRowSelection(rowIdx) {\n\t\tif (selectedRows.includes(rowIdx)) {\n\t\t\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\n\t\t} else {\n\t\t\tsetSelectedRows((r) => [...r, rowIdx]);\n\t\t}\n\t}\n\n\tconst anyRowsChecked = selectedRows.length > 0;\n\tconst allRowsChecked = selectedRows.length === 3;\n\n\tfunction toggleAllRows() {\n\t\tif (anyRowsChecked) {\n\t\t\tsetSelectedRows([]);\n\t\t} else {\n\t\t\tsetSelectedRows([0, 1, 2]);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Stack gap={0.5}>\n\t\t\t<Stack>\n\t\t\t\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tchecked={allRowsChecked}\n\t\t\t\t\t\tindeterminate={anyRowsChecked && !allRowsChecked}\n\t\t\t\t\t\tonChange={() => toggleAllRows()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSelect all rows\n\t\t\t\t\t</Checkbox>\n\t\t\t\t</Box>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableHeader>Select</TableHeader>\n\t\t\t\t\t\t\t<TableHeader scope=\"col\">Reference</TableHeader>\n\t\t\t\t\t\t\t<TableHeader scope=\"col\">Date submitted</TableHeader>\n\t\t\t\t\t\t\t<TableHeader scope=\"col\">Actions</TableHeader>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{Array.from(new Array(3).keys()).map((idx) => {\n\t\t\t\t\t\t\tconst isRowSelected = selectedRows.includes(idx);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TableRow selected={isRowSelected}>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={isRowSelected}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => toggleRowSelection(idx)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<VisuallyHidden>Select</VisuallyHidden>\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell as=\"th\" scope=\"row\" fontWeight=\"bold\">\n\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">REF-AB3CD4EF</TextLink>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>20/06/2022</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Flex gap={1}>\n\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Download</TextLink>\n\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Delete</TextLink>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Stack>\n\t\t\t{selectedRows.length > 0 ? (\n\t\t\t\t<TableBatchActionsBar>\n\t\t\t\t\t<TableBatchActionsTitle>\n\t\t\t\t\t\tApply action to {selectedRows.length} items\n\t\t\t\t\t</TableBatchActionsTitle>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\">\n\t\t\t\t\t\t\tDownload\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\">\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"tertiary\" size=\"sm\" onClick={toggleAllRows}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</TableBatchActionsBar>\n\t\t\t) : null}\n\t\t</Stack>\n\t);\n};\n```\n","data":{"title":"Selectable tables with batch actions","description":"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected rows.","storybookPath":"/story/content-table--selectable-with-batch-actions","relatedComponents":["table","checkbox","button","drawer"],"githubTemplatePath":"/.storybook/stories/SelectableTableBatchActions"},"title":"Selectable tables with batch actions","description":"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected rows.","figmaTemplateNodeId":null,"githubTemplatePath":"/.storybook/stories/SelectableTableBatchActions","storybookPath":"/story/content-table--selectable-with-batch-actions","relatedComponents":["table","checkbox","button","drawer"]}],"relatedComponents":[{"slug":"summary-list","name":"summary-list","title":"Summary list","description":"Summary list is used to summarise information such as a user’s responses at the end of a form.","storybookPath":"/story/Content-SummaryList--basic","figmaGalleryNodeId":"12908%3A103687","subNavItems":[{"label":"Overview","href":"/components/summary-list","path":"/home/runner/work/agds-next/agds-next/packages/react/src/summary-list/docs/overview.mdx"},{"label":"Code","href":"/components/summary-list/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/summary-list/docs/code.mdx"}],"relatedComponents":["table"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}