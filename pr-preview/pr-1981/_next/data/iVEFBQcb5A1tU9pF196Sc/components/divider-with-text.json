{"pageProps":{"pkg":{"slug":"divider-with-text","name":"divider-with-text","title":"Divider With Text","description":"A horizontal rule with text that separates blocks of content.","storybookPath":"/story/Content-DividerWithText--basic","figmaGalleryNodeId":"REPLACE_ME","subNavItems":[{"label":"Overview","href":"/components/divider-with-text","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider-with-text/docs/overview.mdx"},{"label":"Code","href":"/components/divider-with-text/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider-with-text/docs/code.mdx"}],"relatedComponents":["divider"],"relatedPatterns":null,"deprecated":false,"unreleased":true},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Divider With Text","href":"/components/divider-with-text"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Divider With Text"}],"toc":[{"id":"example","title":"Example","level":2,"slug":"example","items":[]},{"id":"label-alignment","title":"Label alignment","level":2,"slug":"label-alignment","items":[]},{"id":"font-sizes","title":"Font sizes","level":2,"slug":"font-sizes","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DividerWithText label=\\\"Or\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The [Divider] component with label support.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use to create visual space and separation between blocks of content,\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide a short text label with one or few words,\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"to denote sections between optional inputs.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use this component in substitution for a H1 element,\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use this component without a text, please refer to the \", _jsx(_components.a, {\n          href: \"components/divider\",\n          children: \"Divider component\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"change the colour of divider or text.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2}>\\n\\t<ControlGroup\\n\\t\\tlabel=\\\"Business structure\\\"\\n\\t\\thint=\\\"When you make a selection, you will be asked for your Australian Business Number (ABN) or Australian Company Number (ACN).\\\"\\n\\t\\tblock\\n\\t\\trequired\\n\\t>\\n\\t\\t<Radio checked={true}>Sol trader</Radio>\\n\\t\\t<Radio checked={false}>Business</Radio>\\n\\t\\t<Radio checked={false}>Company</Radio>\\n\\t</ControlGroup>\\n\\t<DividerWithText label=\\\"Business\\\" labelAlign=\\\"left\\\" />\\n\\t<TextInput label=\\\"Australian Business Number (ABN)\\\" required />\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Label alignment\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The label location and text wrap alignment can be assigned by using the \", _jsx(_components.code, {\n        children: \"labelAlignment\"\n      }), \" prop. The values \", _jsx(_components.code, {\n        children: \"center\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"left\"\n      }), \" will align the label towards the respective locations.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2}>\\n\\t<DividerWithText label=\\\"center\\\" />\\n\\t<DividerWithText label=\\\"left\\\" labelAlign=\\\"left\\\" />\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Font sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The label size is determined by the element used in the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" props as the default.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2}>\\n\\t<DividerWithText label=\\\"H2\\\" as=\\\"h2\\\" />\\n\\t<DividerWithText label=\\\"H3\\\" as=\\\"h3\\\" />\\n\\t<DividerWithText label=\\\"H4\\\" as=\\\"h4\\\" />\\n\\t<DividerWithText label=\\\"H5\\\" as=\\\"h5\\\" />\\n\\t<DividerWithText label=\\\"H6\\\" as=\\\"h6\\\" />\\n\\t<DividerWithText label=\\\"p\\\" as=\\\"p\\\" />\\n\\t<DividerWithText label=\\\"span\\\" as=\\\"span\\\" />\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"fontSize\"\n      }), \" prop can be used in combination with the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop to control the heading element and size.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2}>\\n\\t<DividerWithText\\n\\t\\tlabel=\\\"Paragraph with XL font size\\\"\\n\\t\\tas=\\\"p\\\"\\n\\t\\tfontSize=\\\"xl\\\"\\n\\t\\tlabelAlign=\\\"left\\\"\\n\\t/>\\n\\t<DividerWithText\\n\\t\\tlabel=\\\"H2 with SM font size\\\"\\n\\t\\tas=\\\"h2\\\"\\n\\t\\tfontSize=\\\"sm\\\"\\n\\t\\tlabelAlign=\\\"left\\\"\\n\\t/>\\n</Stack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Divider With Text","description":"A horizontal rule with text that separates blocks of content.","group":"Content","storybookPath":"/story/Content-DividerWithText--basic","unreleased":true,"figmaGalleryNodeId":"REPLACE_ME","relatedComponents":["divider"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"divider","name":"divider","title":"Divider","description":"A horizontal rule that separates blocks of content.","storybookPath":"/story/content-Divider--basic","figmaGalleryNodeId":"18634%3A85108","subNavItems":[{"label":"Overview","href":"/components/divider","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider/docs/overview.mdx"},{"label":"Code","href":"/components/divider/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/divider/docs/code.mdx"}],"relatedComponents":["divider-with-text"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}