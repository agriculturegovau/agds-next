{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/patterns","label":"Patterns"},{"label":"Messaging"}],"navLinks":[{"href":"/patterns/accessible-form-validation-and-recovery","label":"Accessible form validation and error recovery"},{"href":"/patterns/conditional-reveal","label":"Conditionally revealed content"},{"href":"/patterns/focus-mode","label":"Focus mode"},{"href":"/patterns/loading-error-empty-states","label":"Loading, empty and error states"},{"href":"/patterns/messaging","label":"Messaging"},{"href":"/patterns/multi-task-form","label":"Multi-task form"},{"href":"/patterns/search-filters","label":"Search filters"},{"href":"/patterns/selectable-table-with-batch-actions","label":"Selectable tables with batch actions"},{"href":"/patterns/selecting-multiple-options","label":"Selecting multiple options"}],"pattern":{"slug":"messaging","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Global alert\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/components/global-alert\",\n        children: \"Global alerts\"\n      }), \" display prominent service or system wide messages at the top of the screen.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They are used to communicate system or service wide messages, not page or feature messages. Global alerts are not initiated by the user and should persist for a session but can be dismissed by the user.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<GlobalAlert title=\\\"Alert title\\\">\\n\\t<Text as=\\\"p\\\">\\n\\t\\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce massa nibh,\\n\\t\\taliquam vel dolor non, gravida porttitor nulla. Pellentesque cursus orci\\n\\t\\tvulputate nibh sagittis blandit.\\n\\t</Text>\\n</GlobalAlert>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Page alert\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/components/page-alert\",\n        children: \"Page alerts\"\n      }), \" are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages at relevant times during the user journey.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Typically page alerts appear near the top of a page, under the H1 and introductory paragraph, following a submit action.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<PageAlert tone=\\\"error\\\" title=\\\"There is a problem\\\">\\n\\t<Text as=\\\"p\\\">Please correct the following fields and try again</Text>\\n\\t<UnorderedList>\\n\\t\\t<ListItem>\\n\\t\\t\\t<TextLink href=\\\"#\\\">Full name must not be empty</TextLink>\\n\\t\\t</ListItem>\\n\\t\\t<ListItem>\\n\\t\\t\\t<TextLink href=\\\"#\\\">Email must not be empty</TextLink>\\n\\t\\t</ListItem>\\n\\t</UnorderedList>\\n</PageAlert>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Section alert\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/components/section-alert\",\n        children: \"Section alerts\"\n      }), \" are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages that are delivered in context at a specific section of the screen.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Section alerts appear above an interactive component or at the top of a page section, and provide information or status following an action.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<SectionAlert title=\\\"Your changes have been saved\\\" tone=\\\"success\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Invalid field\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Invalid \", _jsx(_components.a, {\n        href: \"/components/field\",\n        children: \"Fields\"\n      }), \" alert the user of something that has happened in an input component. They appear above the input and after any label or hint text.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A border is added to the left-margin of the input to group the message to the component.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TextInput\\n\\tlabel=\\\"Email\\\"\\n\\tinvalid\\n\\tmessage=\\\"Enter an email address in the correct format, like name@example.com\\\"\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Callout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/components/callout\",\n        children: \"Callouts\"\n      }), \" are used draw attention to persistent, important or interesting information and should not be used to communicate validation or status.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"An information hierarchy can be created with Callouts by applying the Feature, Information and Neutral variants of the component. The Feature variant of Callout has a larger icon and heading to draw a userâ€™s attention.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Callout title=\\\"Callout heading\\\">\\n\\t<Text as=\\\"p\\\">Description of the callout.</Text>\\n</Callout>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Loading, empty and error states\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When loading data in an application, it is important to consider and design for loading, empty, and error states. The compositions in our \", _jsx(_components.a, {\n        href: \"/patterns/loading-error-empty-states\",\n        children: \"Loading, Error and Empty state\"\n      }), \" patterns are designed to help you communicate these states to users.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2} alignItems=\\\"flex-start\\\" role=\\\"alert\\\">\\n\\t<Stack gap={1}>\\n\\t\\t<AlertFilledIcon color=\\\"error\\\" size=\\\"lg\\\" />\\n\\t\\t<Heading type=\\\"h2\\\" fontSize=\\\"lg\\\">\\n\\t\\t\\tFailed to load\\n\\t\\t</Heading>\\n\\t\\t<Text>There was an error loading the data. Click retry to try again.</Text>\\n\\t</Stack>\\n\\t<Button>Retry</Button>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Error page template\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/templates/error-page\",\n        children: \"Error page template\"\n      }), \" is used to display a full page error message to the user, if something goes wrong while loading the page.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This could include 404 errors, or if the application is down for maintenance.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/templates/error-page.webp\",\n        alt: \"Screenshot of error page template\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Messaging","description":"Messaging conveys contextual information to the user, provides information in relation to a service or interaction, and provides feedback in response to their actions or the current system status.","relatedComponents":["callout","field","global-alert","page-alert","section-alert"]}},"content":"\n## Global alert\n\n[Global alerts](/components/global-alert) display prominent service or system wide messages at the top of the screen.\n\nThey are used to communicate system or service wide messages, not page or feature messages. Global alerts are not initiated by the user and should persist for a session but can be dismissed by the user.\n\n```jsx live\n<GlobalAlert title=\"Alert title\">\n\t<Text as=\"p\">\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce massa nibh,\n\t\taliquam vel dolor non, gravida porttitor nulla. Pellentesque cursus orci\n\t\tvulputate nibh sagittis blandit.\n\t</Text>\n</GlobalAlert>\n```\n\n## Page alert\n\n[Page alerts](/components/page-alert) are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages at relevant times during the user journey.\n\nTypically page alerts appear near the top of a page, under the H1 and introductory paragraph, following a submit action.\n\n```jsx live\n<PageAlert tone=\"error\" title=\"There is a problem\">\n\t<Text as=\"p\">Please correct the following fields and try again</Text>\n\t<UnorderedList>\n\t\t<ListItem>\n\t\t\t<TextLink href=\"#\">Full name must not be empty</TextLink>\n\t\t</ListItem>\n\t\t<ListItem>\n\t\t\t<TextLink href=\"#\">Email must not be empty</TextLink>\n\t\t</ListItem>\n\t</UnorderedList>\n</PageAlert>\n```\n\n## Section alert\n\n[Section alerts](/components/section-alert) are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages that are delivered in context at a specific section of the screen.\n\nSection alerts appear above an interactive component or at the top of a page section, and provide information or status following an action.\n\n```jsx live\n<SectionAlert title=\"Your changes have been saved\" tone=\"success\" />\n```\n\n## Invalid field\n\nInvalid [Fields](/components/field) alert the user of something that has happened in an input component. They appear above the input and after any label or hint text.\n\nA border is added to the left-margin of the input to group the message to the component.\n\n```jsx live\n<TextInput\n\tlabel=\"Email\"\n\tinvalid\n\tmessage=\"Enter an email address in the correct format, like name@example.com\"\n/>\n```\n\n## Callout\n\n[Callouts](/components/callout) are used draw attention to persistent, important or interesting information and should not be used to communicate validation or status.\n\nAn information hierarchy can be created with Callouts by applying the Feature, Information and Neutral variants of the component. The Feature variant of Callout has a larger icon and heading to draw a userâ€™s attention.\n\n```jsx live\n<Callout title=\"Callout heading\">\n\t<Text as=\"p\">Description of the callout.</Text>\n</Callout>\n```\n\n## Loading, empty and error states\n\nWhen loading data in an application, it is important to consider and design for loading, empty, and error states. The compositions in our [Loading, Error and Empty state](/patterns/loading-error-empty-states) patterns are designed to help you communicate these states to users.\n\n```jsx live\n<Stack gap={2} alignItems=\"flex-start\" role=\"alert\">\n\t<Stack gap={1}>\n\t\t<AlertFilledIcon color=\"error\" size=\"lg\" />\n\t\t<Heading type=\"h2\" fontSize=\"lg\">\n\t\t\tFailed to load\n\t\t</Heading>\n\t\t<Text>There was an error loading the data. Click retry to try again.</Text>\n\t</Stack>\n\t<Button>Retry</Button>\n</Stack>\n```\n\n## Error page template\n\nThe [Error page template](/templates/error-page) is used to display a full page error message to the user, if something goes wrong while loading the page.\n\nThis could include 404 errors, or if the application is down for maintenance.\n\n![Screenshot of error page template](/img/templates/error-page.webp)\n","data":{"title":"Messaging","description":"Messaging conveys contextual information to the user, provides information in relation to a service or interaction, and provides feedback in response to their actions or the current system status.","relatedComponents":["callout","field","global-alert","page-alert","section-alert"]},"title":"Messaging","description":"Messaging conveys contextual information to the user, provides information in relation to a service or interaction, and provides feedback in response to their actions or the current system status.","figmaTemplateNodeId":null,"githubTemplatePath":null,"storybookPath":null,"relatedComponents":["callout","field","global-alert","page-alert","section-alert"]},"toc":[{"id":"global-alert","title":"Global alert","level":2,"slug":"global-alert","items":[]},{"id":"page-alert","title":"Page alert","level":2,"slug":"page-alert","items":[]},{"id":"section-alert","title":"Section alert","level":2,"slug":"section-alert","items":[]},{"id":"invalid-field","title":"Invalid field","level":2,"slug":"invalid-field","items":[]},{"id":"callout","title":"Callout","level":2,"slug":"callout","items":[]},{"id":"loading-empty-and-error-states","title":"Loading, empty and error states","level":2,"slug":"loading-empty-and-error-states","items":[]},{"id":"error-page-template","title":"Error page template","level":2,"slug":"error-page-template","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"relatedComponents":[{"slug":"callout","name":"callout","title":"Callout","description":"Callouts are an excerpt of text used to draw attention to important or interesting information. They should not be confused with Page alerts.","storybookPath":"/story/content-callout--basic","figmaGalleryNodeId":"11981%3A101425","subNavItems":[{"label":"Overview","href":"/components/callout","path":"/home/runner/work/agds-next/agds-next/packages/react/src/callout/docs/overview.mdx"},{"label":"Code","href":"/components/callout/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/callout/docs/code.mdx"},{"label":"Accessibility","href":"/components/callout/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/callout/docs/accessibility.mdx"}],"relatedComponents":["global-alert","page-alert"],"relatedPatterns":["messaging"],"deprecated":false,"unreleased":false},{"slug":"field","name":"field","title":"Field","description":"The field package exposes the elements around form inputs, and an API to compose them.","storybookPath":"/story/forms-field--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/field","path":"/home/runner/work/agds-next/agds-next/packages/react/src/field/docs/overview.mdx"},{"label":"Code","href":"/components/field/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/field/docs/code.mdx"}],"relatedComponents":["fieldset"],"relatedPatterns":["messaging"],"deprecated":false,"unreleased":false},{"slug":"global-alert","name":"global-alert","title":"Global alert","description":"Global alerts display prominent service or system wide messages at the top of the screen.","storybookPath":"/story/content-globalalert--basic","figmaGalleryNodeId":"15243%3A46718","subNavItems":[{"label":"Overview","href":"/components/global-alert","path":"/home/runner/work/agds-next/agds-next/packages/react/src/global-alert/docs/overview.mdx"},{"label":"Code","href":"/components/global-alert/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/global-alert/docs/code.mdx"}],"relatedComponents":["callout","page-alert","section-alert"],"relatedPatterns":["messaging"],"deprecated":false,"unreleased":false},{"slug":"page-alert","name":"page-alert","title":"Page alert","description":"Page alerts are colour-coded, non-disruptive notifications that provide Success, Error, Warning or Information messages at relevant times during the user journey. They should not be confused with Callouts.","storybookPath":"/story/content-pagealert--basic","figmaGalleryNodeId":"11981%3A101690","subNavItems":[{"label":"Overview","href":"/components/page-alert","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/overview.mdx"},{"label":"Rationale","href":"/components/page-alert/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/rationale.mdx"},{"label":"Content","href":"/components/page-alert/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/content.mdx"},{"label":"Code","href":"/components/page-alert/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/code.mdx"},{"label":"Accessibility","href":"/components/page-alert/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/page-alert/docs/accessibility.mdx"}],"relatedComponents":["callout","global-alert","section-alert"],"relatedPatterns":["accessible-form-validation-and-recovery","messaging"],"deprecated":false,"unreleased":false},{"slug":"section-alert","name":"section-alert","title":"Section alert","description":"Section alerts are non-disruptive notifications that provide Success, Error and Warning messages about a state change in a section of a page.","storybookPath":"/story/Content-SectionAlert--basic","figmaGalleryNodeId":"19223%3A12705","subNavItems":[{"label":"Overview","href":"/components/section-alert","path":"/home/runner/work/agds-next/agds-next/packages/react/src/section-alert/docs/overview.mdx"},{"label":"Content","href":"/components/section-alert/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/section-alert/docs/content.mdx"},{"label":"Code","href":"/components/section-alert/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/section-alert/docs/code.mdx"}],"relatedComponents":["page-alert","global-alert"],"relatedPatterns":["messaging"],"deprecated":false,"unreleased":false}]},"__N_SSG":true}