{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/content","label":"Content"},{"label":"Accessibility overview"}],"description":"TODO PAGE DESC.","editPath":"/docs/content/foundations/accessibility/accessibility-overview.mdx","page":{"slug":"accessibility-overview","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Accessibility overview\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Our approach to building components that provide a great user experience for all users.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"[ in-page nav ]\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Simplicity by design\\nAccessibility has always been a top priority for the Agriculture Design System (AgDS).\\nAgDS is inspired by the original Australian Government Design System GOLD, which was built on principles of simplicity and accessibility.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We have an obligation to make our government services simple and fast to use, inclusive and accessible to all users in the location and context they need to use them.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Accessibility audit\\nThe system is tested by the team for accessibility at every stage. From visual design, automated code testing, to testing with assistive technology. The system has also been audited for WCAG conformance twice in 2022 and 2024 and both times achieved a certification of full WCAG conformance.\\nOur statements of conformance:\\n•\\tStatement of conformance 2022\\n•\\tStatement of conformance 2024\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Meeting the Web Content Accessibility Guidelines (WCAG)\\nAgDS targets the WCAG 2.1 Level A and Level AA success criteria and seeks to provide a highly usable experience for everyone.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In these instances, we exceed those standards:\\n•\\tThe purpose of page elements is understood and conveyed by assistive technologies – WCAG success criterion 1.3.6 Identify purpose (level AAA).\\n•\\tHeadings and body text have a contrast ratio above 7:1 – WCAG 2.1 success criterion 1.4.6 Contrast (enhanced) (level AAA).\\n•\\tText can be altered by users to meet their preferences – WCAG 2.1 success criterion 1.4.8 Visual presentation (level AAA).\\n•\\tAll functionality is operable via keyboard – WCAG 2.1 success criterion 2.1.3 Keyboard (no exception) (level AAA).\\n•\\tUsers can identify the purpose of a link from the link text alone – WCAG 2.1 success criterion 2.4.9 Link purpose (link only) (level AAA).\\n•\\tSection headings are used to organise page content – WCAG 2.1 success criterion 2.4.10 Section headings (level AAA).\\n•\\tWe use pointer target sizes of at least 24 by 24 pixels – WCAG 2.2 success criterion 2.5.8 Target size (minimum) (level AA).\\n•\\tUsers can check, reverse or confirm their input on forms. – WCAG 2.1 success criterion 3.3.6 Error prevention (all) (level AAA).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Assistive technology support\\nAgDS components are tested for accessibility with automated and manual techniques to ensure support for:\\n•\\tscreen readers (JAWS, NVDA, VoiceOver, TalkBack)\\n•\\tscreen magnifiers\\n•\\talternative input mechanisms\\n•\\tlow vision and colour blindness.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Browser support\\nAgDS supports the latest two versions of the following browsers:\\n•\\tGoogle Chrome\\n•\\tMozilla Firefox\\n•\\tApple Safari for MacOS\\n•\\tMicrosoft Edge\\n•\\tApple Safari for iOS\\n•\\tGoogle Chrome for Android\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Coding standards\\nAgDS components are built using modern web standards for HTML, CSS and JavaScript.\\nFeatures from the Accessible Rich Internet Applications (ARIA) specification are used to build functionality that is not available natively to web browsers.\\nWhere possible, components are built according to specifications found on the ARIA Authoring Practices Guide (APG).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Making your product accessible\\nProduct teams need to conduct their own research and testing sessions to ensure that the compositions of AgDS components are accessible in the context of their product.\\nFor information about getting started with accessibility, we recommend visiting the Accessibility Fundamentals Overview from the Web Accessibility Initiative (WAI).\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"content":"Accessibility overview\n\nOur approach to building components that provide a great user experience for all users.\n\n[ in-page nav ]\n\nSimplicity by design\nAccessibility has always been a top priority for the Agriculture Design System (AgDS).\nAgDS is inspired by the original Australian Government Design System GOLD, which was built on principles of simplicity and accessibility.\n\nWe have an obligation to make our government services simple and fast to use, inclusive and accessible to all users in the location and context they need to use them.\n\nAccessibility audit\nThe system is tested by the team for accessibility at every stage. From visual design, automated code testing, to testing with assistive technology. The system has also been audited for WCAG conformance twice in 2022 and 2024 and both times achieved a certification of full WCAG conformance.\nOur statements of conformance:\n•\tStatement of conformance 2022\n•\tStatement of conformance 2024\n\nMeeting the Web Content Accessibility Guidelines (WCAG)\nAgDS targets the WCAG 2.1 Level A and Level AA success criteria and seeks to provide a highly usable experience for everyone. \n\nIn these instances, we exceed those standards:\n•\tThe purpose of page elements is understood and conveyed by assistive technologies – WCAG success criterion 1.3.6 Identify purpose (level AAA).\n•\tHeadings and body text have a contrast ratio above 7:1 – WCAG 2.1 success criterion 1.4.6 Contrast (enhanced) (level AAA).\n•\tText can be altered by users to meet their preferences – WCAG 2.1 success criterion 1.4.8 Visual presentation (level AAA).\n•\tAll functionality is operable via keyboard – WCAG 2.1 success criterion 2.1.3 Keyboard (no exception) (level AAA).\n•\tUsers can identify the purpose of a link from the link text alone – WCAG 2.1 success criterion 2.4.9 Link purpose (link only) (level AAA).\n•\tSection headings are used to organise page content – WCAG 2.1 success criterion 2.4.10 Section headings (level AAA).\n•\tWe use pointer target sizes of at least 24 by 24 pixels – WCAG 2.2 success criterion 2.5.8 Target size (minimum) (level AA).\n•\tUsers can check, reverse or confirm their input on forms. – WCAG 2.1 success criterion 3.3.6 Error prevention (all) (level AAA).\n\nAssistive technology support \nAgDS components are tested for accessibility with automated and manual techniques to ensure support for:\n•\tscreen readers (JAWS, NVDA, VoiceOver, TalkBack)\n•\tscreen magnifiers\n•\talternative input mechanisms\n•\tlow vision and colour blindness.\n\nBrowser support\nAgDS supports the latest two versions of the following browsers:\n•\tGoogle Chrome\n•\tMozilla Firefox\n•\tApple Safari for MacOS\n•\tMicrosoft Edge\n•\tApple Safari for iOS\n•\tGoogle Chrome for Android\n\nCoding standards \nAgDS components are built using modern web standards for HTML, CSS and JavaScript.\nFeatures from the Accessible Rich Internet Applications (ARIA) specification are used to build functionality that is not available natively to web browsers.\nWhere possible, components are built according to specifications found on the ARIA Authoring Practices Guide (APG).\n\nMaking your product accessible \nProduct teams need to conduct their own research and testing sessions to ensure that the compositions of AgDS components are accessible in the context of their product.\nFor information about getting started with accessibility, we recommend visiting the Accessibility Fundamentals Overview from the Web Accessibility Initiative (WAI).\n","data":{},"title":"accessibility-overview","description":null},"pageTitle":"Accessibility overview","toc":[]},"__N_SSG":true}