{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/content","label":"Content"},{"label":"Keyboard accessibility"}],"description":"Make all functionality available via keyboard. It’s helpful for power users, but essential for people who use assistive technology.","editPath":"/docs/content/foundations/accessibility/keyboard-accessibility.mdx","page":{"slug":"keyboard-accessibility","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Keyboard accessibility in AgDS\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We consider keyboard accessibility throughout the design system in our components, patterns and documentation. This helps you get started with keyboard accessibility in your digital products and services.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The keyboard accessibility of our components achieved full WCAG conformance in accessibility audits in 2022 and 2024. Implementation of AgDS keyboard accessible patterns are demonstrated in the \", _jsx(_components.a, {\n        href: \"/yourgov\",\n        children: \"yourGov\"\n      }), \" application.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Requirements\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Users can navigate to and from any on-screen element using keyboard only.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"All interactive elements are focusable using the Tab key.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tab order must follow a logical sequence that matches visual layout.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Keyboard focus is always visible when navigating.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Document custom keyboard shortcuts and ensure they don’t conflict with assistive technology.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Character-only shortcut keys can be turned off or remapped.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"All components with actions activate using Enter or Space keys, depending on the type component – follow implementation examples at \", _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/ARIA/apg/patterns/\",\n          children: \"ARIA Authoring Practices Guide - Patterns\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Benefits\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Enables use by people who can’t use a mouse or touchscreen.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Supports limited dexterity users who rely on keyboard navigation.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Improves usability for screen reader users.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Ensures compatibility with a wide range of input devices.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Increases efficiency for power users who prefer keyboard use.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"WCAG references\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/WCAG22/Understanding/keyboard.html\",\n          children: \"Understanding success criterion 2.1.1 Keyboard\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/WCAG22/Understanding/no-keyboard-trap.html\",\n          children: \"Understanding success criterion 2.1.2 No keyboard trap\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/WCAG22/Understanding/character-key-shortcuts.html\",\n          children: \"Understanding success criterion 2.1.4 Character key shortcuts\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/WCAG22/Understanding/focus-order.html\",\n          children: \"Understanding success criterion 2.4.3 Focus order\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/WCAG22/Understanding/focus-visible.html\",\n          children: \"Understanding success criterion 2.4.7 Focus visible\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"content":"## Keyboard accessibility in AgDS\n\nWe consider keyboard accessibility throughout the design system in our components, patterns and documentation. This helps you get started with keyboard accessibility in your digital products and services.\n\nThe keyboard accessibility of our components achieved full WCAG conformance in accessibility audits in 2022 and 2024. Implementation of AgDS keyboard accessible patterns are demonstrated in the [yourGov](/yourgov) application.\n\n## Requirements\n\n- Users can navigate to and from any on-screen element using keyboard only.\n- All interactive elements are focusable using the Tab key.\n- Tab order must follow a logical sequence that matches visual layout.\n- Keyboard focus is always visible when navigating.\n- Document custom keyboard shortcuts and ensure they don’t conflict with assistive technology.\n- Character-only shortcut keys can be turned off or remapped.\n- All components with actions activate using Enter or Space keys, depending on the type component – follow implementation examples at [ARIA Authoring Practices Guide - Patterns](https://www.w3.org/WAI/ARIA/apg/patterns/).\n\n## Benefits\n\n- Enables use by people who can’t use a mouse or touchscreen.\n- Supports limited dexterity users who rely on keyboard navigation.\n- Improves usability for screen reader users.\n- Ensures compatibility with a wide range of input devices.\n- Increases efficiency for power users who prefer keyboard use.\n\n## WCAG references\n\n- [Understanding success criterion 2.1.1 Keyboard](https://www.w3.org/WAI/WCAG22/Understanding/keyboard.html)\n- [Understanding success criterion 2.1.2 No keyboard trap](https://www.w3.org/WAI/WCAG22/Understanding/no-keyboard-trap.html)\n- [Understanding success criterion 2.1.4 Character key shortcuts](https://www.w3.org/WAI/WCAG22/Understanding/character-key-shortcuts.html)\n- [Understanding success criterion 2.4.3 Focus order](https://www.w3.org/WAI/WCAG22/Understanding/focus-order.html)\n- [Understanding success criterion 2.4.7 Focus visible](https://www.w3.org/WAI/WCAG22/Understanding/focus-visible.html)\n","data":{},"title":"keyboard-accessibility","description":null},"pageTitle":"Keyboard accessibility","toc":[{"id":"keyboard-accessibility-in-agds","title":"Keyboard accessibility in AgDS","level":2,"slug":"keyboard-accessibility-in-agds","items":[]},{"id":"requirements","title":"Requirements","level":2,"slug":"requirements","items":[]},{"id":"benefits","title":"Benefits","level":2,"slug":"benefits","items":[]},{"id":"wcag-references","title":"WCAG references","level":2,"slug":"wcag-references","items":[]}]},"__N_SSG":true}