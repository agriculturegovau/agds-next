{"pageProps":{"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/patterns","label":"Patterns"},{"label":"Selecting multiple options"}],"navLinks":[{"href":"/patterns/accessible-form-validation-and-recovery","label":"Accessible form validation and error recovery"},{"href":"/patterns/conditional-reveal","label":"Conditionally revealed content"},{"href":"/patterns/focus-mode","label":"Focus mode"},{"href":"/patterns/loading-error-empty-states","label":"Loading, empty and error states"},{"href":"/patterns/messaging","label":"Messaging"},{"href":"/patterns/multi-task-form","label":"Multi-task form"},{"href":"/patterns/search-filters","label":"Search filters"},{"href":"/patterns/selectable-table-with-batch-actions","label":"Selectable tables with batch actions"},{"href":"/patterns/selecting-multiple-options","label":"Selecting multiple options"}],"pattern":{"slug":"selecting-multiple-options","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Small list\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A simple list of \", _jsx(_components.a, {\n        href: \"/components/checkbox\",\n        children: \"Checkboxes\"\n      }), \" should always be preferred. This is the most accessible solution as it provides users with a clear understanding of all the available options. It also eliminates the need for additional interactions such as opening a dropdown menu.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ControlGroup label=\\\"Example\\\" block>\\n\\t<Checkbox value=\\\"a\\\">Option A</Checkbox>\\n\\t<Checkbox value=\\\"b\\\">Option B</Checkbox>\\n\\t<Checkbox value=\\\"c\\\">Option C</Checkbox>\\n</ControlGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Large list\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/combobox\",\n        children: \"ComboboxMulti\"\n      }), \" component can be used when there are a large number of options or vertical space is limited. It allows users to search and select options from a dropdown menu. However, this approach requires additional interaction and may not be as clear as a simple list of checkboxes.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [value, setValue] = React.useState([]);\\n\\treturn (\\n\\t\\t<ComboboxMulti\\n\\t\\t\\tlabel=\\\"Select country\\\"\\n\\t\\t\\thint=\\\"Start typing to see results\\\"\\n\\t\\t\\tvalue={value}\\n\\t\\t\\tonChange={setValue}\\n\\t\\t\\toptions={COUNTRY_OPTIONS}\\n\\t\\t/>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Selecting multiple options","description":"Multi-select is a commonly used design pattern that allows users to select multiple options from a list. This pattern is used in various contexts such as search filters, form fields, and more.","relatedComponents":["checkbox","combobox"]}},"content":"\n## Small list\n\nA simple list of [Checkboxes](/components/checkbox) should always be preferred. This is the most accessible solution as it provides users with a clear understanding of all the available options. It also eliminates the need for additional interactions such as opening a dropdown menu.\n\n```jsx live\n<ControlGroup label=\"Example\" block>\n\t<Checkbox value=\"a\">Option A</Checkbox>\n\t<Checkbox value=\"b\">Option B</Checkbox>\n\t<Checkbox value=\"c\">Option C</Checkbox>\n</ControlGroup>\n```\n\n## Large list\n\nThe [ComboboxMulti](/components/combobox) component can be used when there are a large number of options or vertical space is limited. It allows users to search and select options from a dropdown menu. However, this approach requires additional interaction and may not be as clear as a simple list of checkboxes.\n\n```jsx live\n() => {\n\tconst [value, setValue] = React.useState([]);\n\treturn (\n\t\t<ComboboxMulti\n\t\t\tlabel=\"Select country\"\n\t\t\thint=\"Start typing to see results\"\n\t\t\tvalue={value}\n\t\t\tonChange={setValue}\n\t\t\toptions={COUNTRY_OPTIONS}\n\t\t/>\n\t);\n};\n```\n","data":{"title":"Selecting multiple options","description":"Multi-select is a commonly used design pattern that allows users to select multiple options from a list. This pattern is used in various contexts such as search filters, form fields, and more.","relatedComponents":["checkbox","combobox"]},"title":"Selecting multiple options","description":"Multi-select is a commonly used design pattern that allows users to select multiple options from a list. This pattern is used in various contexts such as search filters, form fields, and more.","figmaTemplateNodeId":null,"githubTemplatePath":null,"storybookPath":null,"relatedComponents":["checkbox","combobox"]},"toc":[{"id":"small-list","title":"Small list","level":2,"slug":"small-list","items":[]},{"id":"large-list","title":"Large list","level":2,"slug":"large-list","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"relatedComponents":[{"slug":"checkbox","name":"checkbox","title":"Checkbox","description":"Checkboxes allow users to select one or more options from a list.","storybookPath":"/story/forms-checkbox--basic","figmaGalleryNodeId":"18834%3A97097","subNavItems":[{"label":"Overview","href":"/components/checkbox","path":"/home/runner/work/agds-next/agds-next/packages/react/src/checkbox/docs/overview.mdx"},{"label":"Code","href":"/components/checkbox/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/checkbox/docs/code.mdx"}],"relatedComponents":["control-group","radio","switch"],"relatedPatterns":["conditional-reveal","selecting-multiple-options"],"deprecated":false,"unreleased":false},{"slug":"combobox","name":"combobox","title":"Combobox","description":"This component allows users to select from a list of options. Itâ€™s especially useful when there are many options to choose from.","storybookPath":"/story/forms-combobox-combobox--basic","figmaGalleryNodeId":"12925%3A104632","subNavItems":[{"label":"Overview","href":"/components/combobox","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/overview.mdx"},{"label":"Code","href":"/components/combobox/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/code.mdx"}],"relatedComponents":["autocomplete","dropdown-menu","select","text-input"],"relatedPatterns":["selecting-multiple-options"],"deprecated":false,"unreleased":false}]},"__N_SSG":true}