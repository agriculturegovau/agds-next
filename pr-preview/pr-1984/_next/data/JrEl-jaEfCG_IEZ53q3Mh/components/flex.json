{"pageProps":{"pkg":{"slug":"flex","name":"flex","title":"Flex","description":"A CSS flexbox version of the Box component.","storybookPath":"/story/foundations-flex--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/flex","path":"/home/runner/work/agds-next/agds-next/packages/react/src/flex/docs/overview.mdx"},{"label":"Code","href":"/components/flex/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/flex/docs/code.mdx"}],"relatedComponents":["box","stack"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Flex"}],"toc":[{"id":"the-as-prop","title":"The ‘as’ prop","level":2,"slug":"the-as-prop","items":[]},{"id":"inline","title":"Inline","level":2,"slug":"inline","items":[]},{"id":"wrapping","title":"Wrapping","level":2,"slug":"wrapping","items":[]},{"id":"box-props","title":"Box props","level":2,"slug":"box-props","items":[]},{"id":"responsive-props","title":"Responsive props","level":2,"slug":"responsive-props","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"The Flex component is a version of \", _jsx(_components.a, {\n        href: \"/components/box\",\n        children: \"Box\"\n      }), \" which applies \", _jsx(_components.code, {\n        children: \"display: flex\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      showCode: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex>A simple Flex</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The ‘as’ prop\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the Flex component renders an HTML \", _jsx(_components.code, {\n        children: \"<div>\"\n      }), \" element. You can render it with a different HTML element tag by using the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      showCode: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex as=\\\"section\\\">A simple Flex rendered as a section element</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Inline\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"inline\"\n      }), \" prop to apply \", _jsx(_components.code, {\n        children: \"display: inline-flex\"\n      }), \" to the element.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      showCode: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex inline>A simple inline Flex</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Wrapping\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"flexWrap\"\n      }), \" is an optional prop that makes the children wrap if they can’t fit within the container.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      showCode: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex flexWrap>A simple Flex with flex wrapping</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Box props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Flex supports all of the \", _jsx(_components.code, {\n        children: \"BoxProps\"\n      }), \" from the box component (except for display), with the addition of \", _jsx(_components.code, {\n        children: \"inline\"\n      }), \". For more information, see \", _jsx(_components.a, {\n        href: \"/components/box/code\",\n        children: \"Box props\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Responsive props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Flex component supports the responsive prop syntax on most props. For more information about responsive props, see our documentation for \", _jsx(_components.a, {\n        href: \"/foundations/tokens/breakpoints#responsive-design-in-code\",\n        children: \"Breakpoints\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Flex","description":"A CSS flexbox version of the Box component.","group":"Foundations","storybookPath":"/story/foundations-flex--basic","relatedComponents":["box","stack"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"box","name":"box","title":"Box","description":"A primitive layout component.","storybookPath":"/story/foundations-box--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/box","path":"/home/runner/work/agds-next/agds-next/packages/react/src/box/docs/overview.mdx"},{"label":"Code","href":"/components/box/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/box/docs/code.mdx"}],"relatedComponents":["flex","stack"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"stack","name":"stack","title":"Stack","description":"Stack is a primitive layout component used to distribute items vertically with even spacing.","storybookPath":"/story/foundations-box--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/stack","path":"/home/runner/work/agds-next/agds-next/packages/react/src/stack/docs/overview.mdx"},{"label":"Code","href":"/components/stack/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/stack/docs/code.mdx"}],"relatedComponents":["box","flex","form-stack"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}