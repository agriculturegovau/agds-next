{"pageProps":{"pkg":{"slug":"drawer","name":"drawer","title":"Drawer","description":"A drawer is a panel that slides in from the right side of the screen. The Drawer is overlayed on top of the main area of the page to capture the user’s attention while keeping the context of the current task.","storybookPath":"/story/layout-drawer--basic","figmaGalleryNodeId":"18684%3A85147","subNavItems":[{"label":"Overview","href":"/components/drawer","path":"/home/runner/work/agds-next/agds-next/packages/react/src/drawer/docs/overview.mdx"},{"label":"Code","href":"/components/drawer/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/drawer/docs/code.mdx"}],"relatedComponents":["modal"],"relatedPatterns":["search-filters"],"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Drawer"}],"toc":[{"id":"opening-the-drawer","title":"Opening the Drawer","level":2,"slug":"opening-the-drawer","items":[]},{"id":"closing-the-drawer","title":"Closing the Drawer","level":2,"slug":"closing-the-drawer","items":[]},{"id":"drawer-widths","title":"Drawer widths","level":2,"slug":"drawer-widths","items":[]},{"id":"drawer-with-muted-overlay","title":"Drawer with muted overlay","level":2,"slug":"drawer-with-muted-overlay","items":[]},{"id":"focus-custom-element-on-close","title":"Focus custom element on close","level":2,"slug":"focus-custom-element-on-close","items":[]},{"id":"using-a-form-in-the-drawer","title":"Using a form in the drawer","level":2,"slug":"using-a-form-in-the-drawer","items":[]},{"title":"Related patterns","slug":"related-patterns","id":"related-patterns","level":2,"items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    p: \"p\",\n    ol: \"ol\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isDrawerOpen, openDrawer, closeDrawer] = useTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openDrawer}>Open Drawer</Button>\\n\\t\\t\\t<Drawer\\n\\t\\t\\t\\tisOpen={isDrawerOpen}\\n\\t\\t\\t\\tonClose={closeDrawer}\\n\\t\\t\\t\\ttitle=\\\"Drawer title\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeDrawer}>Primary</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tSecondary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tTertiary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">Drawer body area.</Text>\\n\\t\\t\\t</Drawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"consider using a side action page first – side action pages support more use cases than side drawers\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"only use side drawers for filters, small overflow form actions and related guidance content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"only use for external (customer-facing) forms if there is a need to maintain some context of the current page, otherwise link to a separate page\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"read the \", _jsx(_components.a, {\n          href: \"/patterns/search-filters\",\n          children: \"Search filters pattern\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use a \", _jsx(_components.a, {\n          href: \"/components/button#button-group\",\n          children: \"Button group\"\n        }), \" to display actions\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a meaningful title - e.g. ‘Filter by’\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"optionally close the Drawer when an action button is pressed\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use the muted overlay when it is beneficial to retain the user’s context of the underlying page content, especially for sighted users with cognitive disabilities\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use for long forms or any content that is likely to cause a user to scroll vertically or horizontally in the drawer – link to a separate page instead\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide navigation or multiple pages inside a drawer\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"remove the ‘Close’ button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"remove the overlay\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"change default behaviour\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use the muted overlay because you prefer the lighter appearance\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Opening the Drawer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Drawer can be opened by pressing a button or a link. For example, pressing a ‘Show filter’ button opens a medium Drawer containing filters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the Drawer is opened, an overlay is displayed over the main area of the page. This prevents the main area of the page from being interacted with, while still allowing users to maintain their context.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Closing the Drawer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Drawer can be closed by either:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Pressing the ‘Close’ button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pressing the ‘Escape’ key\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pressing the overlay\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pressing a button in the actions area (optional)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When closing the Drawer, focus should be returned to the button that opened the Drawer.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Drawer widths\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Drawer comes in the following 2 widths:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Medium\"\n        }), \" \", _jsx(_components.code, {\n          children: \"md\"\n        }), \" (512px) - generally used to display form fields like filters. This width is the minimum required to stack form fields, including date range fields.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Large\"\n        }), \" \", _jsx(_components.code, {\n          children: \"lg\"\n        }), \" (720px) - generally used to display body text like help or guidance content. This width accommodates the \", _jsx(_components.a, {\n          href: \"/components/prose\",\n          children: \"Prose\"\n        }), \" component, which has an optimal line length to aid readability.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isDrawerOpen, openDrawer, closeDrawer] = useTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openDrawer}>Open Medium Drawer</Button>\\n\\t\\t\\t<Drawer\\n\\t\\t\\t\\tisOpen={isDrawerOpen}\\n\\t\\t\\t\\tonClose={closeDrawer}\\n\\t\\t\\t\\ttitle=\\\"Medium Drawer\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeDrawer}>Primary</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tSecondary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tTertiary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Select\\n\\t\\t\\t\\t\\tlabel=\\\"Example filter\\\"\\n\\t\\t\\t\\t\\tplaceholder=\\\"Please select\\\"\\n\\t\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t\\t{ value: 'a', label: 'Option A' },\\n\\t\\t\\t\\t\\t\\t{ value: 'b', label: 'Option B' },\\n\\t\\t\\t\\t\\t\\t{ value: 'c', label: 'Option C' },\\n\\t\\t\\t\\t\\t]}\\n\\t\\t\\t\\t\\thideOptionalLabel\\n\\t\\t\\t\\t\\tblock\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</Drawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isDrawerOpen, openDrawer, closeDrawer] = useTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openDrawer}>Open Large Drawer</Button>\\n\\t\\t\\t<Drawer\\n\\t\\t\\t\\tisOpen={isDrawerOpen}\\n\\t\\t\\t\\tonClose={closeDrawer}\\n\\t\\t\\t\\ttitle=\\\"Large Drawer\\\"\\n\\t\\t\\t\\twidth=\\\"lg\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeDrawer}>Primary</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tSecondary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tTertiary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Prose>\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\n\\t\\t\\t\\t\\t\\teiusmod tempor incididunt ut labore et dolore magna aliqua. Tempus\\n\\t\\t\\t\\t\\t\\turna et pharetra pharetra massa massa. Volutpat diam ut venenatis\\n\\t\\t\\t\\t\\t\\ttellus in metus vulputate eu. Adipiscing elit duis tristique\\n\\t\\t\\t\\t\\t\\tsollicitudin nibh sit amet. Vivamus arcu felis bibendum ut tristique\\n\\t\\t\\t\\t\\t\\tet. Et tortor at risus viverra adipiscing at in tellus integer.\\n\\t\\t\\t\\t\\t\\tEuismod in pellentesque massa placerat duis ultricies lacus sed.\\n\\t\\t\\t\\t\\t\\tOrnare arcu dui vivamus arcu felis bibendum. Sapien pellentesque\\n\\t\\t\\t\\t\\t\\thabitant morbi tristique senectus et netus et malesuada. Et tortor\\n\\t\\t\\t\\t\\t\\tconsequat id porta nibh venenatis. Cras adipiscing enim eu turpis\\n\\t\\t\\t\\t\\t\\tegestas pretium aenean. Erat velit scelerisque in dictum non.\\n\\t\\t\\t\\t\\t\\tPretium fusce id velit ut tortor pretium. Eu ultrices vitae auctor\\n\\t\\t\\t\\t\\t\\teu augue ut lectus arcu bibendum. Magna eget est lorem ipsum dolor\\n\\t\\t\\t\\t\\t\\tsit.\\n\\t\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tUt aliquam purus sit amet luctus venenatis lectus magna. Eu\\n\\t\\t\\t\\t\\t\\tfacilisis sed odio morbi quis commodo odio. Pharetra vel turpis nunc\\n\\t\\t\\t\\t\\t\\teget. Adipiscing commodo elit at imperdiet dui accumsan sit amet\\n\\t\\t\\t\\t\\t\\tnulla. Ipsum consequat nisl vel pretium lectus. Malesuada nunc vel\\n\\t\\t\\t\\t\\t\\trisus commodo viverra maecenas accumsan lacus vel. Arcu ac tortor\\n\\t\\t\\t\\t\\t\\tdignissim convallis. Ipsum suspendisse ultrices gravida dictum fusce\\n\\t\\t\\t\\t\\t\\tut placerat orci nulla. Feugiat sed lectus vestibulum mattis\\n\\t\\t\\t\\t\\t\\tullamcorper. Risus in hendrerit gravida rutrum quisque non.\\n\\t\\t\\t\\t\\t\\tTincidunt nunc pulvinar sapien et ligula. Penatibus et magnis dis\\n\\t\\t\\t\\t\\t\\tparturient montes nascetur ridiculus mus. Ultrices tincidunt arcu\\n\\t\\t\\t\\t\\t\\tnon sodales neque. Duis at consectetur lorem donec.\\n\\t\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tTurpis tincidunt id aliquet risus. Ut lectus arcu bibendum at varius\\n\\t\\t\\t\\t\\t\\tvel pharetra. Magna ac placerat vestibulum lectus. Euismod elementum\\n\\t\\t\\t\\t\\t\\tnisi quis eleifend quam. Morbi tristique senectus et netus et\\n\\t\\t\\t\\t\\t\\tmalesuada. Justo laoreet sit amet cursus sit. Et malesuada fames ac\\n\\t\\t\\t\\t\\t\\tturpis egestas sed. Eu non diam phasellus vestibulum lorem sed risus\\n\\t\\t\\t\\t\\t\\tultricies. Quis imperdiet massa tincidunt nunc. Ornare lectus sit\\n\\t\\t\\t\\t\\t\\tamet est placerat in egestas. Sed viverra ipsum nunc aliquet\\n\\t\\t\\t\\t\\t\\tbibendum enim facilisis gravida neque. Lacinia quis vel eros donec\\n\\t\\t\\t\\t\\t\\tac. Vitae sapien pellentesque habitant morbi. Donec et odio\\n\\t\\t\\t\\t\\t\\tpellentesque diam volutpat commodo sed egestas egestas. Vulputate\\n\\t\\t\\t\\t\\t\\tsapien nec sagittis aliquam malesuada bibendum arcu vitae elementum.\\n\\t\\t\\t\\t\\t\\tQuam vulputate dignissim suspendisse in est ante in nibh. Justo nec\\n\\t\\t\\t\\t\\t\\tultrices dui sapien eget mi proin. Aliquet nibh praesent tristique\\n\\t\\t\\t\\t\\t\\tmagna sit amet.\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tLaoreet suspendisse interdum consectetur libero. Nulla pellentesque\\n\\t\\t\\t\\t\\t\\tdignissim enim sit amet venenatis urna cursus eget. Elit sed\\n\\t\\t\\t\\t\\t\\tvulputate mi sit amet mauris commodo quis imperdiet. Nisl suscipit\\n\\t\\t\\t\\t\\t\\tadipiscing bibendum est ultricies integer quis. Rutrum tellus\\n\\t\\t\\t\\t\\t\\tpellentesque eu tincidunt tortor aliquam nulla. Malesuada fames ac\\n\\t\\t\\t\\t\\t\\tturpis egestas sed tempus urna et. Ipsum dolor sit amet consectetur\\n\\t\\t\\t\\t\\t\\tadipiscing elit duis tristique. Euismod elementum nisi quis eleifend\\n\\t\\t\\t\\t\\t\\tquam. Vulputate mi sit amet mauris commodo quis imperdiet massa. Sit\\n\\t\\t\\t\\t\\t\\tamet porttitor eget dolor. Enim lobortis scelerisque fermentum dui\\n\\t\\t\\t\\t\\t\\tfaucibus. Dapibus ultrices in iaculis nunc sed augue lacus. Nulla\\n\\t\\t\\t\\t\\t\\tporttitor massa id neque aliquam vestibulum. Netus et malesuada\\n\\t\\t\\t\\t\\t\\tfames ac turpis egestas integer eget aliquet. Proin nibh nisl\\n\\t\\t\\t\\t\\t\\tcondimentum id. Duis at tellus at urna condimentum mattis. Tellus\\n\\t\\t\\t\\t\\t\\tmolestie nunc non blandit massa. At erat pellentesque adipiscing\\n\\t\\t\\t\\t\\t\\tcommodo elit at imperdiet dui.\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tImperdiet proin fermentum leo vel orci porta non. Odio morbi quis\\n\\t\\t\\t\\t\\t\\tcommodo odio aenean sed adipiscing diam donec. Cursus in hac\\n\\t\\t\\t\\t\\t\\thabitasse platea dictumst quisque sagittis. Blandit aliquam etiam\\n\\t\\t\\t\\t\\t\\terat velit scelerisque in dictum. Ridiculus mus mauris vitae\\n\\t\\t\\t\\t\\t\\tultricies. Interdum velit laoreet id donec ultrices. Est\\n\\t\\t\\t\\t\\t\\tpellentesque elit ullamcorper dignissim cras tincidunt lobortis. Sed\\n\\t\\t\\t\\t\\t\\tnisi lacus sed viverra tellus in. Vel elit scelerisque mauris\\n\\t\\t\\t\\t\\t\\tpellentesque pulvinar pellentesque habitant morbi. Vitae congue\\n\\t\\t\\t\\t\\t\\tmauris rhoncus aenean. Ut porttitor leo a diam sollicitudin tempor.\\n\\t\\t\\t\\t\\t\\tTincidunt arcu non sodales neque sodales ut etiam. At elementum eu\\n\\t\\t\\t\\t\\t\\tfacilisis sed. Euismod in pellentesque massa placerat duis. In arcu\\n\\t\\t\\t\\t\\t\\tcursus euismod quis viverra nibh cras pulvinar. Neque egestas congue\\n\\t\\t\\t\\t\\t\\tquisque egestas diam in. Sem fringilla ut morbi tincidunt augue\\n\\t\\t\\t\\t\\t\\tinterdum. Sit amet tellus cras adipiscing enim.\\n\\t\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\n\\t\\t\\t\\t\\t\\teiusmod tempor incididunt ut labore et dolore magna aliqua. Tempus\\n\\t\\t\\t\\t\\t\\turna et pharetra pharetra massa massa. Volutpat diam ut venenatis\\n\\t\\t\\t\\t\\t\\ttellus in metus vulputate eu. Adipiscing elit duis tristique\\n\\t\\t\\t\\t\\t\\tsollicitudin nibh sit amet. Vivamus arcu felis bibendum ut tristique\\n\\t\\t\\t\\t\\t\\tet. Et tortor at risus viverra adipiscing at in tellus integer.\\n\\t\\t\\t\\t\\t\\tEuismod in pellentesque massa placerat duis ultricies lacus sed.\\n\\t\\t\\t\\t\\t\\tOrnare arcu dui vivamus arcu felis bibendum. Sapien pellentesque\\n\\t\\t\\t\\t\\t\\thabitant morbi tristique senectus et netus et malesuada. Et tortor\\n\\t\\t\\t\\t\\t\\tconsequat id porta nibh venenatis. Cras adipiscing enim eu turpis\\n\\t\\t\\t\\t\\t\\tegestas pretium aenean. Erat velit scelerisque in dictum non.\\n\\t\\t\\t\\t\\t\\tPretium fusce id velit ut tortor pretium. Eu ultrices vitae auctor\\n\\t\\t\\t\\t\\t\\teu augue ut lectus arcu bibendum. Magna eget est lorem ipsum dolor\\n\\t\\t\\t\\t\\t\\tsit.\\n\\t\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tUt aliquam purus sit amet luctus venenatis lectus magna. Eu\\n\\t\\t\\t\\t\\t\\tfacilisis sed odio morbi quis commodo odio. Pharetra vel turpis nunc\\n\\t\\t\\t\\t\\t\\teget. Adipiscing commodo elit at imperdiet dui accumsan sit amet\\n\\t\\t\\t\\t\\t\\tnulla. Ipsum consequat nisl vel pretium lectus. Malesuada nunc vel\\n\\t\\t\\t\\t\\t\\trisus commodo viverra maecenas accumsan lacus vel. Arcu ac tortor\\n\\t\\t\\t\\t\\t\\tdignissim convallis. Ipsum suspendisse ultrices gravida dictum fusce\\n\\t\\t\\t\\t\\t\\tut placerat orci nulla. Feugiat sed lectus vestibulum mattis\\n\\t\\t\\t\\t\\t\\tullamcorper. Risus in hendrerit gravida rutrum quisque non.\\n\\t\\t\\t\\t\\t\\tTincidunt nunc pulvinar sapien et ligula. Penatibus et magnis dis\\n\\t\\t\\t\\t\\t\\tparturient montes nascetur ridiculus mus. Ultrices tincidunt arcu\\n\\t\\t\\t\\t\\t\\tnon sodales neque. Duis at consectetur lorem donec.\\n\\t\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tTurpis tincidunt id aliquet risus. Ut lectus arcu bibendum at varius\\n\\t\\t\\t\\t\\t\\tvel pharetra. Magna ac placerat vestibulum lectus. Euismod elementum\\n\\t\\t\\t\\t\\t\\tnisi quis eleifend quam. Morbi tristique senectus et netus et\\n\\t\\t\\t\\t\\t\\tmalesuada. Justo laoreet sit amet cursus sit. Et malesuada fames ac\\n\\t\\t\\t\\t\\t\\tturpis egestas sed. Eu non diam phasellus vestibulum lorem sed risus\\n\\t\\t\\t\\t\\t\\tultricies. Quis imperdiet massa tincidunt nunc. Ornare lectus sit\\n\\t\\t\\t\\t\\t\\tamet est placerat in egestas. Sed viverra ipsum nunc aliquet\\n\\t\\t\\t\\t\\t\\tbibendum enim facilisis gravida neque. Lacinia quis vel eros donec\\n\\t\\t\\t\\t\\t\\tac. Vitae sapien pellentesque habitant morbi. Donec et odio\\n\\t\\t\\t\\t\\t\\tpellentesque diam volutpat commodo sed egestas egestas. Vulputate\\n\\t\\t\\t\\t\\t\\tsapien nec sagittis aliquam malesuada bibendum arcu vitae elementum.\\n\\t\\t\\t\\t\\t\\tQuam vulputate dignissim suspendisse in est ante in nibh. Justo nec\\n\\t\\t\\t\\t\\t\\tultrices dui sapien eget mi proin. Aliquet nibh praesent tristique\\n\\t\\t\\t\\t\\t\\tmagna sit amet.\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tLaoreet suspendisse interdum consectetur libero. Nulla pellentesque\\n\\t\\t\\t\\t\\t\\tdignissim enim sit amet venenatis urna cursus eget. Elit sed\\n\\t\\t\\t\\t\\t\\tvulputate mi sit amet mauris commodo quis imperdiet. Nisl suscipit\\n\\t\\t\\t\\t\\t\\tadipiscing bibendum est ultricies integer quis. Rutrum tellus\\n\\t\\t\\t\\t\\t\\tpellentesque eu tincidunt tortor aliquam nulla. Malesuada fames ac\\n\\t\\t\\t\\t\\t\\tturpis egestas sed tempus urna et. Ipsum dolor sit amet consectetur\\n\\t\\t\\t\\t\\t\\tadipiscing elit duis tristique. Euismod elementum nisi quis eleifend\\n\\t\\t\\t\\t\\t\\tquam. Vulputate mi sit amet mauris commodo quis imperdiet massa. Sit\\n\\t\\t\\t\\t\\t\\tamet porttitor eget dolor. Enim lobortis scelerisque fermentum dui\\n\\t\\t\\t\\t\\t\\tfaucibus. Dapibus ultrices in iaculis nunc sed augue lacus. Nulla\\n\\t\\t\\t\\t\\t\\tporttitor massa id neque aliquam vestibulum. Netus et malesuada\\n\\t\\t\\t\\t\\t\\tfames ac turpis egestas integer eget aliquet. Proin nibh nisl\\n\\t\\t\\t\\t\\t\\tcondimentum id. Duis at tellus at urna condimentum mattis. Tellus\\n\\t\\t\\t\\t\\t\\tmolestie nunc non blandit massa. At erat pellentesque adipiscing\\n\\t\\t\\t\\t\\t\\tcommodo elit at imperdiet dui.\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\tImperdiet proin fermentum leo vel orci porta non. Odio morbi quis\\n\\t\\t\\t\\t\\t\\tcommodo odio aenean sed adipiscing diam donec. Cursus in hac\\n\\t\\t\\t\\t\\t\\thabitasse platea dictumst quisque sagittis. Blandit aliquam etiam\\n\\t\\t\\t\\t\\t\\terat velit scelerisque in dictum. Ridiculus mus mauris vitae\\n\\t\\t\\t\\t\\t\\tultricies. Interdum velit laoreet id donec ultrices. Est\\n\\t\\t\\t\\t\\t\\tpellentesque elit ullamcorper dignissim cras tincidunt lobortis. Sed\\n\\t\\t\\t\\t\\t\\tnisi lacus sed viverra tellus in. Vel elit scelerisque mauris\\n\\t\\t\\t\\t\\t\\tpellentesque pulvinar pellentesque habitant morbi. Vitae congue\\n\\t\\t\\t\\t\\t\\tmauris rhoncus aenean. Ut porttitor leo a diam sollicitudin tempor.\\n\\t\\t\\t\\t\\t\\tTincidunt arcu non sodales neque sodales ut etiam. At elementum eu\\n\\t\\t\\t\\t\\t\\tfacilisis sed. Euismod in pellentesque massa placerat duis. In arcu\\n\\t\\t\\t\\t\\t\\tcursus euismod quis viverra nibh cras pulvinar. Neque egestas congue\\n\\t\\t\\t\\t\\t\\tquisque egestas diam in. Sem fringilla ut morbi tincidunt augue\\n\\t\\t\\t\\t\\t\\tinterdum. Sit amet tellus cras adipiscing enim.\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</Prose>\\n\\t\\t\\t</Drawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Drawer with muted overlay\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, Drawer’s overlay defaults to 80% opacity, however, by adding \", _jsx(_components.code, {\n        children: \"mutedOverlay={true}\"\n      }), \", the opacity can be reduced to 30%. This muted version allows sighted users with cognitive disabilites to more easily retain the context of the main page content while interacting with the drawer content.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isDrawerOpen, openDrawer, closeDrawer] = useTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openDrawer}>Open Muted Drawer</Button>\\n\\t\\t\\t<Drawer\\n\\t\\t\\t\\tisOpen={isDrawerOpen}\\n\\t\\t\\t\\tonClose={closeDrawer}\\n\\t\\t\\t\\tmutedOverlay={true}\\n\\t\\t\\t\\ttitle=\\\"Drawer title\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeDrawer}>Primary</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tSecondary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tTertiary\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\tNotice that the main page content is much easier to read.\\n\\t\\t\\t\\t</Text>\\n\\t\\t\\t</Drawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Focus custom element on close\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a drawer closes, focus is returned to the element that opened it. You can override this behaviour by passing an element to the \", _jsx(_components.code, {\n        children: \"elementToFocusOnClose\"\n      }), \" prop. This can be used in situations, for example, when an action performed in the drawer causes an error, setting the main page in an error state, and requiring the user’s focus to be returned to the alert instead.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst sectionAlertContainerRef = React.useRef(null);\\n\\tconst [error, setError] = React.useState('');\\n\\tconst [isDrawerOpen, openDrawer, closeDrawer] = useTernaryState(false);\\n\\n\\tconst openDrawerAndClearError = () => {\\n\\t\\topenDrawer();\\n\\t\\tsetError('');\\n\\t};\\n\\n\\tconst closeWithError = () => {\\n\\t\\tcloseDrawer();\\n\\t\\tsetError('We were unable to perform the action, please try again later.');\\n\\t};\\n\\n\\treturn (\\n\\t\\t<Stack gap={2}>\\n\\t\\t\\t<Box css={error ? undefined : { display: 'none' }}>\\n\\t\\t\\t\\t<SectionAlert\\n\\t\\t\\t\\t\\tfocusRingFor=\\\"all\\\"\\n\\t\\t\\t\\t\\tref={sectionAlertContainerRef}\\n\\t\\t\\t\\t\\ttabIndex={-1}\\n\\t\\t\\t\\t\\ttitle=\\\"Something went wrong\\\"\\n\\t\\t\\t\\t\\ttone=\\\"error\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Text as=\\\"p\\\">{error}</Text>\\n\\t\\t\\t\\t</SectionAlert>\\n\\t\\t\\t</Box>\\n\\n\\t\\t\\t<Button alignSelf=\\\"start\\\" onClick={openDrawerAndClearError}>\\n\\t\\t\\t\\tOpen Drawer\\n\\t\\t\\t</Button>\\n\\n\\t\\t\\t<Drawer\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeWithError}>Close with error</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tClose with no error\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telementToFocusOnClose={\\n\\t\\t\\t\\t\\terror ? sectionAlertContainerRef.current : undefined\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tisOpen={isDrawerOpen}\\n\\t\\t\\t\\tonClose={closeDrawer}\\n\\t\\t\\t\\ttitle=\\\"Drawer title\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\tWhen pressing 'Close with error', an error alert will be rendered and\\n\\t\\t\\t\\t\\tfocused.\\n\\t\\t\\t\\t</Text>\\n\\t\\t\\t</Drawer>\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Using a form in the drawer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To create a fully accessible form within a drawer, we must do two things:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Add an \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" to the \", _jsx(_components.code, {\n          children: \"<form>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Pass that \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" to the primary Button's \", _jsx(_components.code, {\n          children: \"form\"\n        }), \" prop along with \", _jsx(_components.code, {\n          children: \"type=\\\"submit\\\"\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This will allow keyboard users to submit the form by pressing \\\"enter\\\" on the form inputs.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst formRef = React.useRef(null);\\n\\tconst [isDrawerOpen, openDrawer, closeDrawer] = useTernaryState(false);\\n\\tconst [dateValue, setDateValue] = React.useState();\\n\\tconst [value, setValue] = React.useState({ from: undefined, to: undefined });\\n\\n\\tconst onSubmitForm = (event) => {\\n\\t\\tevent.preventDefault();\\n\\n\\t\\tconst formData = Object.fromEntries(new FormData(formRef.current));\\n\\t\\tconsole.log('Form submitted with values:', {\\n\\t\\t\\t...formData,\\n\\t\\t\\tdateInput: dateValue,\\n\\t\\t});\\n\\n\\t\\tcloseDrawer();\\n\\t};\\n\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openDrawer}>Open Drawer</Button>\\n\\n\\t\\t\\t<Drawer\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button type=\\\"submit\\\" form=\\\"form-id\\\" onClick={onSubmitForm}>\\n\\t\\t\\t\\t\\t\\t\\tSubmit\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tisOpen={isDrawerOpen}\\n\\t\\t\\t\\tonClose={closeDrawer}\\n\\t\\t\\t\\ttitle=\\\"Example form\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<form id=\\\"form-id\\\" ref={formRef}>\\n\\t\\t\\t\\t\\t<FormStack>\\n\\t\\t\\t\\t\\t\\t<TextInput label=\\\"Example text input\\\" name=\\\"textInput\\\" />\\n\\n\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Example number input\\\"\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"numberInput\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\n\\t\\t\\t\\t\\t\\t<DatePickerNext\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Select date\\\"\\n\\t\\t\\t\\t\\t\\t\\tvalue={dateValue}\\n\\t\\t\\t\\t\\t\\t\\tonChange={setDateValue}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</FormStack>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</Drawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Drawer","description":"A drawer is a panel that slides in from the right side of the screen. The Drawer is overlayed on top of the main area of the page to capture the user’s attention while keeping the context of the current task.","group":"Layout","storybookPath":"/story/layout-drawer--basic","figmaGalleryNodeId":"18684%3A85147","relatedComponents":["modal"],"relatedPatterns":["search-filters"]}},"relatedPatterns":[{"slug":"search-filters","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    strong: \"strong\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, Table, TableCaption, TableHead, TableRow, TableCell, TableHeader, TableBody, ImageWithBorder} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!ImageWithBorder) _missingMdxReference(\"ImageWithBorder\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  if (!TableBody) _missingMdxReference(\"TableBody\", true);\n  if (!TableCaption) _missingMdxReference(\"TableCaption\", true);\n  if (!TableCell) _missingMdxReference(\"TableCell\", true);\n  if (!TableHead) _missingMdxReference(\"TableHead\", true);\n  if (!TableHeader) _missingMdxReference(\"TableHeader\", true);\n  if (!TableRow) _missingMdxReference(\"TableRow\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Search filters help users find what they’re looking for by displaying options that meet specified criteria.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applied filters are displayed as tags, so users can quickly see which filters have been applied to the dataset. Filters can be removed by dismissing the tags.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The dataset should be displayed in a \", _jsx(_components.a, {\n        href: \"/components/table\",\n        children: \"Table\"\n      }), \" or a list of \", _jsx(_components.a, {\n        href: \"/components/card\",\n        children: \"Cards\"\n      }), \" under the search filters. Refer to the specific component guidance to help determine which is more suitable to display your dataset.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={3}>\\n\\t<Stack gap={1}>\\n\\t\\t<Flex\\n\\t\\t\\tgap={1}\\n\\t\\t\\tjustifyContent=\\\"space-between\\\"\\n\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t>\\n\\t\\t\\t<Flex\\n\\t\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t\\t\\tgap={1}\\n\\t\\t\\t\\talignItems={['flex-start', 'flex-end']}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<div aria-label=\\\"Site\\\" role=\\\"search\\\">\\n\\t\\t\\t\\t\\t<SearchInput label=\\\"Search\\\" hideOptionalLabel />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<Button variant=\\\"secondary\\\" iconAfter={FilterIcon}>\\n\\t\\t\\t\\t\\tShow filters\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t</Flex>\\n\\t\\t\\t<Select\\n\\t\\t\\t\\tlabel=\\\"Sort by\\\"\\n\\t\\t\\t\\thideOptionalLabel\\n\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t{ value: 'newest', label: 'Newest to oldest' },\\n\\t\\t\\t\\t\\t{ value: 'old', label: 'Oldest to newest' },\\n\\t\\t\\t\\t]}\\n\\t\\t\\t/>\\n\\t\\t</Flex>\\n\\t\\t<Flex flexWrap=\\\"wrap\\\" gap={0.75} alignItems=\\\"flex-end\\\">\\n\\t\\t\\t<Tags\\n\\t\\t\\t\\theading={<Text fontWeight=\\\"bold\\\">Active filters</Text>}\\n\\t\\t\\t\\titems={[\\n\\t\\t\\t\\t\\t{ label: 'Category: Plant', onRemove: console.log },\\n\\t\\t\\t\\t\\t{ label: 'Type: Organic', onRemove: console.log },\\n\\t\\t\\t\\t\\t{ label: 'Assignee: John', onRemove: console.log },\\n\\t\\t\\t\\t]}\\n\\t\\t\\t/>\\n\\t\\t\\t<Button\\n\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\tvariant=\\\"text\\\"\\n\\t\\t\\t\\tonClick={console.log}\\n\\t\\t\\t\\ticonAfter={CloseIcon}\\n\\t\\t\\t>\\n\\t\\t\\t\\tClear filters\\n\\t\\t\\t</Button>\\n\\t\\t</Flex>\\n\\t\\t<Divider />\\n\\t</Stack>\\n\\t<Stack gap={1}>\\n\\t\\t<H2>\\n\\t\\t\\t<span role=\\\"status\\\">25 results</span>\\n\\t\\t</H2>\\n\\t\\t{Array.from(Array(5).keys()).map((idx) => (\\n\\t\\t\\t<Card key={idx} shadow clickable>\\n\\t\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t\\t<Stack gap={1}>\\n\\t\\t\\t\\t\\t\\t<H3>\\n\\t\\t\\t\\t\\t\\t\\t<CardLink href=\\\"#\\\">Card heading</CardLink>\\n\\t\\t\\t\\t\\t\\t</H3>\\n\\t\\t\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor, sit amet consectetur adipisicing elit. In,\\n\\t\\t\\t\\t\\t\\t\\tvoluptat\\n\\t\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t\\t</Stack>\\n\\t\\t\\t\\t</CardInner>\\n\\t\\t\\t</Card>\\n\\t\\t))}\\n\\t</Stack>\\n\\t<PaginationButtons\\n\\t\\tcurrentPage={5}\\n\\t\\ttotalPages={10}\\n\\t\\tonChange={(page) => console.log(page)}\\n\\t/>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"choose the right filter pattern to meet user needs\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"prioritise filters by expected usage\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"display 1-2 of the most important filters above the dataset\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"include \", _jsx(_components.a, {\n          href: \"/patterns/loading-error-empty-states\",\n          children: \"loading, empty, and error states\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"remove the applied filter tags, as they allow users to see and remove active filters\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter inputs\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Filters can be made of from multiple input types including:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/component/search-input\",\n          children: \"Search input\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/text-input\",\n          children: \"Text input\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/select\",\n          children: \"Select\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/checkbox\",\n          children: \"Checkbox\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/radio\",\n          children: \"Radio\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/combobox\",\n          children: \"Combobox\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/switch\",\n          children: \"Switch\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/date-picker\",\n          children: \"Date picker\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/date-picker\",\n          children: \"Date range picker\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter sizes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Filters are available in 3 sizes to accommodate a wide range of use cases and data sets:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Small:\"\n        }), \" 1-2 filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Medium:\"\n        }), \" 3-6 filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Large:\"\n        }), \" 6+ filters\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(Table, {\n      children: [_jsx(TableCaption, {\n        children: \"How to decide on filter size\"\n      }), _jsx(TableHead, {\n        children: _jsxs(TableRow, {\n          children: [_jsx(TableCell, {}), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Small\"\n            })\n          }), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Medium\"\n            })\n          }), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Large\"\n            })\n          })]\n        })\n      }), _jsxs(TableBody, {\n        children: [_jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Number of filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"3-6\"\n          }), _jsx(TableCell, {\n            children: \"6+\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Number of primary filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Tags display active filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Submission required\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Small\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1-2 visible filters sit above the dataset. Tags that display active filters are not needed in this case, as the filters are always visible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-small\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-table-small.png\",\n      alt: \"Screenshot of the small table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Medium\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"3-6 filters are displayed in an accordion that is triggered by a ‘Show filters’ button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 to 2 of the most used filters can be displayed outside the accordion to make them easier and faster to access.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-medium\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-table-medium.png\",\n      alt: \"Screenshot of the medium table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Large\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"6 or more filters are displayed in a drawer that is triggered by a ‘Show filters’ button. The drawer has a submit button that applies the filters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 to 2 of the most used filters can be displayed outside the drawer to make them easier and faster to access.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-large\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-table-large.png\",\n      alt: \"Screenshot of the large table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Actions in drawer\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/drawer\",\n        children: \"Drawer\"\n      }), \" component should contain a total of 4 actions:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Apply filters button:\"\n        }), \" When pressed, filters should be applied and the drawer should be closed.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Clear filters button:\"\n        }), \" When pressed, filters should be reset to their original state. The drawer should stay open.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Close button:\"\n        }), \" When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Cancel’ button.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Cancel button:\"\n        }), \" When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Close’ button.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Search filter sidebar\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you have filters that need to be quickly accessed on a regular basis, you could consider putting them in a \", _jsx(_components.a, {\n        href: \"/components/filter-sidebar\",\n        children: \"Filter sidebar\"\n      }), \" on the left so that they are always visible. The filter sidebar makes it faster and easier for users to access filters.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure that the correct HTML order is maintained by including a hero banner at the top, followed by the filter sidebar on the left, and the card listing on the right.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since the filters are always visible, there is no need to also include tags to show the active filters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--cards\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-search-filter-sidebar.png\",\n      alt: \"Screenshot of the search filter sidebar pattern\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Empty state\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a search filter doesn’t match any data, use an \", _jsx(_components.a, {\n        href: \"/patterns/loading-error-empty-states\",\n        children: \"empty state\"\n      }), \" to let users know that they need to clear or change the search filter.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={3}>\\n\\t<Stack gap={1}>\\n\\t\\t<Flex\\n\\t\\t\\tgap={1}\\n\\t\\t\\tjustifyContent=\\\"space-between\\\"\\n\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t>\\n\\t\\t\\t<Flex\\n\\t\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t\\t\\tgap={1}\\n\\t\\t\\t\\talignItems={['flex-start', 'flex-end']}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<SearchInput label=\\\"Search\\\" hideOptionalLabel />\\n\\t\\t\\t\\t<Button variant=\\\"secondary\\\" iconAfter={FilterIcon}>\\n\\t\\t\\t\\t\\tShow filters\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t</Flex>\\n\\t\\t\\t<Select\\n\\t\\t\\t\\tlabel=\\\"Sort by\\\"\\n\\t\\t\\t\\thideOptionalLabel\\n\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t{ value: 'newest', label: 'Newest to oldest' },\\n\\t\\t\\t\\t\\t{ value: 'old', label: 'Oldest to newest' },\\n\\t\\t\\t\\t]}\\n\\t\\t\\t/>\\n\\t\\t</Flex>\\n\\t\\t<Divider />\\n\\t</Stack>\\n\\t<Stack gap={2} alignItems=\\\"flex-start\\\" role=\\\"alert\\\">\\n\\t\\t<Stack gap={1}>\\n\\t\\t\\t<HelpIcon size=\\\"lg\\\" color=\\\"muted\\\" />\\n\\t\\t\\t<Heading type=\\\"h2\\\" fontSize=\\\"lg\\\">\\n\\t\\t\\t\\tNo results found\\n\\t\\t\\t</Heading>\\n\\t\\t\\t<Text>Try adjusting your filter options.</Text>\\n\\t\\t</Stack>\\n\\t\\t<Button variant=\\\"secondary\\\">Clear filters</Button>\\n\\t</Stack>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Templates\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Coming soon\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Search filters","description":"Search filters help users find what they’re looking for by displaying options that meet specified criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-search-filters--cards","relatedComponents":["card","drawer","filter-sidebar","pagination","table"]}},"content":"\nSearch filters help users find what they’re looking for by displaying options that meet specified criteria.\n\nApplied filters are displayed as tags, so users can quickly see which filters have been applied to the dataset. Filters can be removed by dismissing the tags.\n\nThe dataset should be displayed in a [Table](/components/table) or a list of [Cards](/components/card) under the search filters. Refer to the specific component guidance to help determine which is more suitable to display your dataset.\n\n```jsx live\n<Stack gap={3}>\n\t<Stack gap={1}>\n\t\t<Flex\n\t\t\tgap={1}\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tflexDirection={['column', 'row']}\n\t\t>\n\t\t\t<Flex\n\t\t\t\tflexDirection={['column', 'row']}\n\t\t\t\tgap={1}\n\t\t\t\talignItems={['flex-start', 'flex-end']}\n\t\t\t>\n\t\t\t\t<div aria-label=\"Site\" role=\"search\">\n\t\t\t\t\t<SearchInput label=\"Search\" hideOptionalLabel />\n\t\t\t\t</div>\n\t\t\t\t<Button variant=\"secondary\" iconAfter={FilterIcon}>\n\t\t\t\t\tShow filters\n\t\t\t\t</Button>\n\t\t\t</Flex>\n\t\t\t<Select\n\t\t\t\tlabel=\"Sort by\"\n\t\t\t\thideOptionalLabel\n\t\t\t\toptions={[\n\t\t\t\t\t{ value: 'newest', label: 'Newest to oldest' },\n\t\t\t\t\t{ value: 'old', label: 'Oldest to newest' },\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Flex>\n\t\t<Flex flexWrap=\"wrap\" gap={0.75} alignItems=\"flex-end\">\n\t\t\t<Tags\n\t\t\t\theading={<Text fontWeight=\"bold\">Active filters</Text>}\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Category: Plant', onRemove: console.log },\n\t\t\t\t\t{ label: 'Type: Organic', onRemove: console.log },\n\t\t\t\t\t{ label: 'Assignee: John', onRemove: console.log },\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"text\"\n\t\t\t\tonClick={console.log}\n\t\t\t\ticonAfter={CloseIcon}\n\t\t\t>\n\t\t\t\tClear filters\n\t\t\t</Button>\n\t\t</Flex>\n\t\t<Divider />\n\t</Stack>\n\t<Stack gap={1}>\n\t\t<H2>\n\t\t\t<span role=\"status\">25 results</span>\n\t\t</H2>\n\t\t{Array.from(Array(5).keys()).map((idx) => (\n\t\t\t<Card key={idx} shadow clickable>\n\t\t\t\t<CardInner>\n\t\t\t\t\t<Stack gap={1}>\n\t\t\t\t\t\t<H3>\n\t\t\t\t\t\t\t<CardLink href=\"#\">Card heading</CardLink>\n\t\t\t\t\t\t</H3>\n\t\t\t\t\t\t<Text as=\"p\">\n\t\t\t\t\t\t\tLorem ipsum dolor, sit amet consectetur adipisicing elit. In,\n\t\t\t\t\t\t\tvoluptat\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Stack>\n\t\t\t\t</CardInner>\n\t\t\t</Card>\n\t\t))}\n\t</Stack>\n\t<PaginationButtons\n\t\tcurrentPage={5}\n\t\ttotalPages={10}\n\t\tonChange={(page) => console.log(page)}\n\t/>\n</Stack>\n```\n\n<DoHeading />\n\n- choose the right filter pattern to meet user needs\n- prioritise filters by expected usage\n- display 1-2 of the most important filters above the dataset\n- include [loading, empty, and error states](/patterns/loading-error-empty-states)\n\n<DontHeading />\n\n- remove the applied filter tags, as they allow users to see and remove active filters\n\n## Filter inputs\n\nFilters can be made of from multiple input types including:\n\n- [Search input](/component/search-input)\n- [Text input](/components/text-input)\n- [Select](/components/select)\n- [Checkbox](/components/checkbox)\n- [Radio](/components/radio)\n- [Combobox](/components/combobox)\n- [Switch](/components/switch)\n- [Date picker](/components/date-picker)\n- [Date range picker](/components/date-picker)\n\n## Filter sizes\n\nFilters are available in 3 sizes to accommodate a wide range of use cases and data sets:\n\n- **Small:** 1-2 filters\n- **Medium:** 3-6 filters\n- **Large:** 6+ filters\n\n<Table>\n\t<TableCaption>How to decide on filter size</TableCaption>\n\t<TableHead>\n\t\t<TableRow>\n\t\t\t<TableCell />\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tSmall\n\t\t\t</TableHeader>\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tMedium\n\t\t\t</TableHeader>\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tLarge\n\t\t\t</TableHeader>\n\t\t</TableRow>\n\t</TableHead>\n\t<TableBody>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tNumber of filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>3-6</TableCell>\n\t\t\t<TableCell>6+</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tNumber of primary filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tTags display active filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tSubmission required\n\t\t\t</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t</TableRow>\n\t</TableBody>\n</Table>\n\n### Small\n\n1-2 visible filters sit above the dataset. Tags that display active filters are not needed in this case, as the filters are always visible.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--table-small)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-table-small.png\"\n\talt=\"Screenshot of the small table filtering pattern\"\n/>\n\n### Medium\n\n3-6 filters are displayed in an accordion that is triggered by a ‘Show filters’ button.\n\n1 to 2 of the most used filters can be displayed outside the accordion to make them easier and faster to access.\n\nApplied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--table-medium)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-table-medium.png\"\n\talt=\"Screenshot of the medium table filtering pattern\"\n/>\n\n### Large\n\n6 or more filters are displayed in a drawer that is triggered by a ‘Show filters’ button. The drawer has a submit button that applies the filters.\n\n1 to 2 of the most used filters can be displayed outside the drawer to make them easier and faster to access.\n\nApplied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--table-large)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-table-large.png\"\n\talt=\"Screenshot of the large table filtering pattern\"\n/>\n\n### Actions in drawer\n\nThe [Drawer](/components/drawer) component should contain a total of 4 actions:\n\n1. **Apply filters button:** When pressed, filters should be applied and the drawer should be closed.\n2. **Clear filters button:** When pressed, filters should be reset to their original state. The drawer should stay open.\n3. **Close button:** When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Cancel’ button.\n4. **Cancel button:** When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Close’ button.\n\n## Search filter sidebar\n\nIf you have filters that need to be quickly accessed on a regular basis, you could consider putting them in a [Filter sidebar](/components/filter-sidebar) on the left so that they are always visible. The filter sidebar makes it faster and easier for users to access filters.\n\nEnsure that the correct HTML order is maintained by including a hero banner at the top, followed by the filter sidebar on the left, and the card listing on the right.\n\nSince the filters are always visible, there is no need to also include tags to show the active filters.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--cards)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-search-filter-sidebar.png\"\n\talt=\"Screenshot of the search filter sidebar pattern\"\n/>\n\n## Empty state\n\nWhen a search filter doesn’t match any data, use an [empty state](/patterns/loading-error-empty-states) to let users know that they need to clear or change the search filter.\n\n```jsx live\n<Stack gap={3}>\n\t<Stack gap={1}>\n\t\t<Flex\n\t\t\tgap={1}\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tflexDirection={['column', 'row']}\n\t\t>\n\t\t\t<Flex\n\t\t\t\tflexDirection={['column', 'row']}\n\t\t\t\tgap={1}\n\t\t\t\talignItems={['flex-start', 'flex-end']}\n\t\t\t>\n\t\t\t\t<SearchInput label=\"Search\" hideOptionalLabel />\n\t\t\t\t<Button variant=\"secondary\" iconAfter={FilterIcon}>\n\t\t\t\t\tShow filters\n\t\t\t\t</Button>\n\t\t\t</Flex>\n\t\t\t<Select\n\t\t\t\tlabel=\"Sort by\"\n\t\t\t\thideOptionalLabel\n\t\t\t\toptions={[\n\t\t\t\t\t{ value: 'newest', label: 'Newest to oldest' },\n\t\t\t\t\t{ value: 'old', label: 'Oldest to newest' },\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Flex>\n\t\t<Divider />\n\t</Stack>\n\t<Stack gap={2} alignItems=\"flex-start\" role=\"alert\">\n\t\t<Stack gap={1}>\n\t\t\t<HelpIcon size=\"lg\" color=\"muted\" />\n\t\t\t<Heading type=\"h2\" fontSize=\"lg\">\n\t\t\t\tNo results found\n\t\t\t</Heading>\n\t\t\t<Text>Try adjusting your filter options.</Text>\n\t\t</Stack>\n\t\t<Button variant=\"secondary\">Clear filters</Button>\n\t</Stack>\n</Stack>\n```\n\n## Templates\n\nComing soon\n","data":{"title":"Search filters","description":"Search filters help users find what they’re looking for by displaying options that meet specified criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-search-filters--cards","relatedComponents":["card","drawer","filter-sidebar","pagination","table"]},"title":"Search filters","description":"Search filters help users find what they’re looking for by displaying options that meet specified criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-search-filters--cards","relatedComponents":["card","drawer","filter-sidebar","pagination","table"]}],"relatedComponents":[{"slug":"modal","name":"modal","title":"Modal","description":"A modal is a dialog box that appears above the parent page and provides advance notice of a destructive action and consequence. They tell users a decision is needed.","storybookPath":"/story/content-modal--basic","figmaGalleryNodeId":"11981%3A101667","subNavItems":[{"label":"Overview","href":"/components/modal","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/overview.mdx"},{"label":"Rationale","href":"/components/modal/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/rationale.mdx"},{"label":"Code","href":"/components/modal/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/code.mdx"}],"relatedComponents":["drawer"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}