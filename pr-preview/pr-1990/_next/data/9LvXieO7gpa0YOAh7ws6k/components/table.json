{"pageProps":{"pkg":{"slug":"table","name":"table","title":"Table","description":"Tables help make complex information easier to scan and compare. Use tables for exact values or information that would be hard to read in body text.","storybookPath":"/story/content-table--basic","figmaGalleryNodeId":"11981%3A101727","subNavItems":[{"label":"Overview","href":"/components/table","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/overview.mdx"},{"label":"Rationale","href":"/components/table/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/rationale.mdx"},{"label":"Content","href":"/components/table/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/content.mdx"},{"label":"Code","href":"/components/table/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/code.mdx"},{"label":"Accessibility","href":"/components/table/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/table/docs/accessibility.mdx"}],"relatedComponents":["summary-list"],"relatedPatterns":["search-filters","selectable-table-with-batch-actions"],"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Table"}],"toc":[{"id":"striped","title":"Striped","level":2,"slug":"striped","items":[]},{"id":"custom-column-width","title":"Custom column width","level":2,"slug":"custom-column-width","items":[]},{"id":"sortable-columns","title":"Sortable columns","level":2,"slug":"sortable-columns","items":[]},{"id":"labels-and-headings","title":"Labels and headings","level":2,"slug":"labels-and-headings","items":[]},{"id":"wide-tables","title":"Wide tables","level":2,"slug":"wide-tables","items":[]},{"id":"colspan-and-rowspan","title":"‘colSpan’ and ‘rowSpan’","level":2,"slug":"colspan-and-rowspan","items":[]},{"id":"actions","title":"Actions","level":2,"slug":"actions","items":[]},{"id":"selectable-with-batch-actions","title":"Selectable with batch actions","level":2,"slug":"selectable-with-batch-actions","items":[]},{"id":"indicating-an-invalid-row","title":"Indicating an invalid row","level":2,"slug":"indicating-an-invalid-row","items":[]},{"title":"Related patterns","slug":"related-patterns","id":"related-patterns","level":2,"items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2015\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Location</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tables are used to scan for information and compare values. They are useful for displaying exact values or information that would be hard to read in body text.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For data tables with a small amount of rows, use the default table. Align text columns and corresponding data cells to the left. When comparing numbers in a column, align data cells and column headers to the right.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use for datasets with more than 2 columns\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for tabular data - not layouts\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide a meaningful caption (heading), or use aria-labelledby to reference a heading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"keep row heights small\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a simple table structure - complex tables are difficult to navigate\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"avoid complex tables by splitting the data into simple, seperate tables\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"avoid empty table headers\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use Pagination to break up tables with many rows\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"align text left and numeric data right\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"only include text, tags, links, actions and status badges as content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"only use dropdown menu if you require three or more actions in a table cell\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"always use a label on the dropdown menu button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a human readable format for numeric data – for example, 1,234,000 instead of 12340000\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"allow row sorting by using \", _jsx(_components.code, {\n          children: \"TableHeaderSortable\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"repeat information across cells. If each cell has the same content, add it as the column header – for example, Width (cm)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use if a list, paragraph of text or diagram will work\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use to summarise form collection data - use a \", _jsx(_components.a, {\n          href: \"/components/summary-list\",\n          children: \"Summary list\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"add lists, diagrams or images\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a combination of actions in table cells and actions in dropdown menus together in the same table row\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"put form inputs in table cells - use an action in a cell to open a drawer or navigate to another page instead\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"have too many rows. Use pagination or start another table where logical – for example, an alphabetical list, Table 1: A to D, Table 2: E to H and so on\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use bespoke styling – follow consistent layouts and styles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"nest tables inside tables\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use inside an accordion\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use empty table headers unless spanning multiple columns and a header isn’t appropriate\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"set a row as invalid without adding a section alert.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Striped\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use zebra stripes for tables with complex information:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"4 or more rows\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"3 or more columns\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"comparing important or similar information.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can enable zebra stripes by applying the \", _jsx(_components.code, {\n        children: \"striped\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table striped>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2016\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Location</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Custom column width\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can use custom widths based on the expected length of the data under each corresponding column.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table striped>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2017\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"50%\\\">\\n\\t\\t\\t\\t\\tLocation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Sortable columns\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"<TableHeaderSortable>\"\n      }), \" component to make columns sortable. This component is a wrapper around the \", _jsx(_components.code, {\n        children: \"TableHeader\"\n      }), \" component and adds the necessary aria attributes to make the column sortable.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is important to add \", _jsx(_components.code, {\n        children: \"<VisuallyHidden>\"\n      }), \" text in the table’s caption to explain the purpose of the \", _jsx(_components.code, {\n        children: \"TableHeaderSortable\"\n      }), \" buttons. This reduces confusion for screen reader users who may not understand their significance when focusing them.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can see a working example of this component in the \", _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-medium\",\n        children: \"Search filters patterns\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table striped>\\n\\t\\t<TableCaption>\\n\\t\\t\\tPopulation of Australian states and territories, December 2018\\n\\t\\t\\t<VisuallyHidden>\\n\\t\\t\\t\\t, column headers with buttons are sortable.\\n\\t\\t\\t</VisuallyHidden>\\n\\t\\t</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeaderSortable\\n\\t\\t\\t\\t\\tscope=\\\"col\\\"\\n\\t\\t\\t\\t\\tsort=\\\"ASC\\\"\\n\\t\\t\\t\\t\\twidth=\\\"50%\\\"\\n\\t\\t\\t\\t\\tonClick={console.log}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tLocation\\n\\t\\t\\t\\t</TableHeaderSortable>\\n\\t\\t\\t\\t<TableHeaderSortable\\n\\t\\t\\t\\t\\tscope=\\\"col\\\"\\n\\t\\t\\t\\t\\twidth=\\\"50%\\\"\\n\\t\\t\\t\\t\\tonClick={console.log}\\n\\t\\t\\t\\t\\ttextAlign=\\\"right\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t</TableHeaderSortable>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Australian Capital Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>New South Wales</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Northern Territory</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Queensland</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>South Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Tasmania</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Victoria</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell>Western Australia</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Labels and headings\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A Table must have some form of caption or heading to describe the data it contains. This can be done using the \", _jsx(_components.code, {\n        children: \"TableCaption\"\n      }), \" component, or referencing a heading using \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t<H3 id=\\\"table-heading\\\">Applications</H3>\\n\\t<Text id=\\\"table-description\\\">Active establishment registrations</Text>\\n\\t<TableWrapper>\\n\\t\\t<Table aria-labelledby=\\\"table-heading table-description\\\">\\n\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Location</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\t\\tPopulation\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\t\\tChange over previous year %\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader textAlign=\\\"right\\\" scope=\\\"col\\\">\\n\\t\\t\\t\\t\\t\\tChange over previous decade %\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableHead>\\n\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tNew South Wales\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">7,670,700</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">3.1%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12.9%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tVictoria\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5,996,400</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.5%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.3%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tQueensland\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4,808,800</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.7%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">13.3%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tWestern Australia\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2,603,900</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.3%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">11.6%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tSouth Australia\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1,702,800</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.0%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">6.8%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tTasmania\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">517,400</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">5.3%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tNorthern Territory\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">244,400</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">1.2%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">4.5%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAustralian Capital Territory\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">393,000</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">2.4%</TableCell>\\n\\t\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">9.6%</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableBody>\\n\\t\\t</Table>\\n\\t</TableWrapper>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Wide tables\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When a table is too wide for its container, a custom scrollbar will be rendered. This scrollbar also sticks to the bottom of the screen when the bottom of the table is off-screen, so users can still easily scroll the table regardless of which rows they’re looking at.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t<H3 id=\\\"wide-table-heading\\\">Business registrations</H3>\\n\\t<TableWrapper>\\n\\t\\t<Table aria-labelledby=\\\"wide-table-heading\\\" tableLayout=\\\"fixed\\\">\\n\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"20rem\\\">\\n\\t\\t\\t\\t\\t\\tBusiness name\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"12rem\\\">\\n\\t\\t\\t\\t\\t\\tAssignee\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"16rem\\\">\\n\\t\\t\\t\\t\\t\\tCity\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"12rem\\\">\\n\\t\\t\\t\\t\\t\\tDate registered\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" width=\\\"11rem\\\">\\n\\t\\t\\t\\t\\t\\tStatus\\n\\t\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableHead>\\n\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAgriculture Victoria\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Oscar Piastri\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Oscar Piastri</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Melbourne, VIC</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>14/08/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge appearance=\\\"subtle\\\" label=\\\"Booked\\\" tone=\\\"infoMedium\\\" />\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAussie Acres Produce\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"George Russell\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>George Russell</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>White Plains, NSW</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>17/03/2024</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Completed\\\"\\n\\t\\t\\t\\t\\t\\t\\ttone=\\\"successMedium\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAussie Agribusiness\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Lando Norris\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Lando Norris</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Sydney, NSW</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>19/11/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge appearance=\\\"subtle\\\" label=\\\"Booked\\\" tone=\\\"infoMedium\\\" />\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAussie Agro Supplies\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Lando Norris\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Lando Norris</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Shanahanberg, TAS</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>16/07/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Not booked\\\"\\n\\t\\t\\t\\t\\t\\t\\ttone=\\\"notStartedLow\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tAustralian Cattle Co.\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Lando Norris\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Lando Norris</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>North Margarettaborough, WA</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>01/11/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge appearance=\\\"subtle\\\" label=\\\"Booked\\\" tone=\\\"infoMedium\\\" />\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tBaumbach, Williamson and Rosenbaum\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Oscar Piastri\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Oscar Piastri</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Oakland Park, VIC</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>02/09/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge appearance=\\\"subtle\\\" label=\\\"Booked\\\" tone=\\\"infoMedium\\\" />\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tBergnaum Inc\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Oscar Piastri\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Oscar Piastri</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Tallahassee, SA</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>23/12/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge appearance=\\\"subtle\\\" label=\\\"Booked\\\" tone=\\\"infoMedium\\\" />\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tBrown Group\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"George Russell\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>George Russell</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Elgin, VIC</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>28/12/2023</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Cancelled\\\"\\n\\t\\t\\t\\t\\t\\t\\ttone=\\\"errorMedium\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tBrown, Mayert and Robel\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>-</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>Ismaelshire, SA</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>21/04/2024</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Completed\\\"\\n\\t\\t\\t\\t\\t\\t\\ttone=\\\"successMedium\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tBushland Farms\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.25}>\\n\\t\\t\\t\\t\\t\\t\\t<Avatar name=\\\"Oscar Piastri\\\" size=\\\"sm\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t\\t<Text>Oscar Piastri</Text>\\n\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>New Oleta, TAS</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>22/05/2024</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Not booked\\\"\\n\\t\\t\\t\\t\\t\\t\\ttone=\\\"notStartedLow\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableBody>\\n\\t\\t</Table>\\n\\t</TableWrapper>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"‘colSpan’ and ‘rowSpan’\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some tables require cells which represent multiple rows or columns. Instead of repeating the spanning data each time, you can use the \", _jsx(_components.code, {\n        children: \"colSpan\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"rowSpan\"\n      }), \" props to specify how a specific cell spans multiple columns and rows, respectively.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table>\\n\\t\\t<TableCaption>Items sold December 2024</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader as=\\\"td\\\" colSpan={2}></TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" textAlign=\\\"right\\\">\\n\\t\\t\\t\\t\\tTrousers\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" textAlign=\\\"right\\\">\\n\\t\\t\\t\\t\\tSkirts\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" textAlign=\\\"right\\\">\\n\\t\\t\\t\\t\\tDresses\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\" textAlign=\\\"right\\\">\\n\\t\\t\\t\\t\\tBracelets\\n\\t\\t\\t\\t</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" rowSpan=\\\"2\\\" scope=\\\"rowgroup\\\">\\n\\t\\t\\t\\t\\tAustralia\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\tCanberra\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">80</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">12</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">43</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">36</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\tSydney\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">89</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">34</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">69</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">85</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" rowSpan=\\\"3\\\" scope=\\\"rowgroup\\\">\\n\\t\\t\\t\\t\\tBelgium\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\tAntwerp\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">56</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">22</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">43</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">72</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\tBrussels\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">51</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">27</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">38</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">69</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" fontWeight=\\\"bold\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\tGent\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">46</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">18</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">50</TableCell>\\n\\t\\t\\t\\t<TableCell textAlign=\\\"right\\\">61</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The actions associated with each table row (e.g. ‘Edit’, ‘Delete’, ‘Download’) should always be positioned in the last column, beneath the table header labeled ‘Actions’.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If rows contain three or more actions, they can instead be replaced with a Dropdown menu containing these actions.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To ensure the accessible name of each row’s actions is unique, associate them with an \", _jsx(_components.code, {\n        children: \"aria-describedby\"\n      }), \" that points to the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" of the primary, unique identifier for that row.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Links that open a page to view a record or more information should be located in the first column, be labelled with a unique identifier, and display as bold text.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table>\\n\\t\\t<TableCaption>Applications (with actions)</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Status</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-AB3CD4EF\\\">\\n\\t\\t\\t\\t\\t\\tREF-AB3CD4EF\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>20/06/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"infoMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"In progress\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-AB3CD4EF\\\">\\n\\t\\t\\t\\t\\t\\t\\tEdit\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-AB3CD4EF\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-5GH6IJ7K\\\">\\n\\t\\t\\t\\t\\t\\tREF-5GH6IJ7K\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>25/06/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"infoMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"In progress\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-5GH6IJ7K\\\">\\n\\t\\t\\t\\t\\t\\t\\tEdit\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-5GH6IJ7K\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-M8NO9PQR\\\">\\n\\t\\t\\t\\t\\t\\tREF-M8NO9PQR\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>02/07/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"successMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"Completed\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-M8NO9PQR\\\">\\n\\t\\t\\t\\t\\t\\t\\tEdit\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-M8NO9PQR\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-S1TU2VWX\\\">\\n\\t\\t\\t\\t\\t\\tREF-S1TU2VWX\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>05/08/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"infoMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"In progress\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-S1TU2VWX\\\">\\n\\t\\t\\t\\t\\t\\t\\tEdit\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-S1TU2VWX\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-Y3ZA4B5C\\\">\\n\\t\\t\\t\\t\\t\\tREF-Y3ZA4B5C\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>19/10/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"successMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"Completed\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-Y3ZA4B5C\\\">\\n\\t\\t\\t\\t\\t\\t\\tEdit\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" aria-describedby=\\\"REF-Y3ZA4B5C\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TableWrapper>\\n\\t<Table>\\n\\t\\t<TableCaption>Applications (with actions dropdown)</TableCaption>\\n\\t\\t<TableHead>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Status</TableHeader>\\n\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableHead>\\n\\t\\t<TableBody>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-ABC3CD4EF\\\">\\n\\t\\t\\t\\t\\t\\tREF-ABC3CD4EF\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>20/06/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"infoMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"In progress\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<DropdownMenu>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuButton aria-describedby=\\\"REF-ABC3CD4EF\\\">\\n\\t\\t\\t\\t\\t\\t\\tAction\\n\\t\\t\\t\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Edit</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Download</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Delete</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-5GHC6IJ7K\\\">\\n\\t\\t\\t\\t\\t\\tREF-5GHC6IJ7K\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>25/06/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"infoMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"In progress\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<DropdownMenu>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuButton aria-describedby=\\\"REF-5GHC6IJ7K\\\">\\n\\t\\t\\t\\t\\t\\t\\tAction\\n\\t\\t\\t\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Edit</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Download</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Delete</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-M8NCO9PQR\\\">\\n\\t\\t\\t\\t\\t\\tREF-M8NCO9PQR\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>02/07/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"successMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"Completed\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<DropdownMenu>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuButton aria-describedby=\\\"REF-M8NCO9PQR\\\">\\n\\t\\t\\t\\t\\t\\t\\tAction\\n\\t\\t\\t\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Edit</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Download</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Delete</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-S1TCU2VWX\\\">\\n\\t\\t\\t\\t\\t\\tREF-S1TCU2VWX\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>05/08/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"infoMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"In progress\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<DropdownMenu>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuButton aria-describedby=\\\"REF-S1TCU2VWX\\\">\\n\\t\\t\\t\\t\\t\\t\\tAction\\n\\t\\t\\t\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Edit</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Download</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Delete</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id=\\\"REF-Y3ZCA4B5C\\\">\\n\\t\\t\\t\\t\\t\\tREF-Y3ZCA4B5C\\n\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>19/10/2024</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\ttone=\\\"successMedium\\\"\\n\\t\\t\\t\\t\\t\\tlabel=\\\"Completed\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t<DropdownMenu>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuButton aria-describedby=\\\"REF-Y3ZCA4B5C\\\">\\n\\t\\t\\t\\t\\t\\t\\tAction\\n\\t\\t\\t\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Edit</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Download</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Delete</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t</TableRow>\\n\\t\\t</TableBody>\\n\\t</Table>\\n</TableWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Selectable with batch actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected items.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more information, read the \", _jsx(_components.a, {\n        href: \"/patterns/selectable-table-with-batch-actions\",\n        children: \"Selectable tables with batch actions pattern\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedRows, setSelectedRows] = React.useState([]);\\n\\n\\tfunction toggleRowSelection(rowIndex) {\\n\\t\\tif (selectedRows.includes(rowIndex)) {\\n\\t\\t\\tsetSelectedRows((r) => r.filter((s) => s !== rowIndex));\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows((r) => [...r, rowIndex]);\\n\\t\\t}\\n\\t}\\n\\n\\tconst anyRowsChecked = selectedRows.length > 0;\\n\\tconst allRowsChecked = selectedRows.length === 3;\\n\\n\\tfunction toggleAllRows() {\\n\\t\\tif (anyRowsChecked) {\\n\\t\\t\\tsetSelectedRows([]);\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows([0, 1, 2]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Stack gap={0.5}>\\n\\t\\t\\t<Stack>\\n\\t\\t\\t\\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\\n\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\tchecked={allRowsChecked}\\n\\t\\t\\t\\t\\t\\tindeterminate={anyRowsChecked && !allRowsChecked}\\n\\t\\t\\t\\t\\t\\tonChange={() => toggleAllRows()}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tSelect all rows\\n\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t<TableWrapper>\\n\\t\\t\\t\\t\\t<Table>\\n\\t\\t\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t\\t\\t{Array.from(new Array(3).keys()).map((index) => {\\n\\t\\t\\t\\t\\t\\t\\t\\tconst isRowSelected = selectedRows.includes(index);\\n\\t\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableRow selected={isRowSelected} key={index}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => toggleRowSelection(index)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\" id={`REF-AB${index}CD4EF`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tREF-AB{index}CD4EF\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>2{index}/06/2024</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`REF-AB${index}CD4EF`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thref=\\\"#\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`REF-AB${index}CD4EF`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thref=\\\"#\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDelete\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t\\t\\t</Table>\\n\\t\\t\\t\\t</TableWrapper>\\n\\t\\t\\t</Stack>\\n\\t\\t\\t{selectedRows.length > 0 ? (\\n\\t\\t\\t\\t<TableBatchActionsBar>\\n\\t\\t\\t\\t\\t<TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t\\tApply action to {selectedRows.length} items\\n\\t\\t\\t\\t\\t</TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDelete\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" size=\\\"sm\\\" onClick={toggleAllRows}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t</TableBatchActionsBar>\\n\\t\\t\\t) : null}\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Indicating an invalid row\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To indicate an error in a row containing an action, set the \", _jsx(_components.code, {\n        children: \"invalid\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \". This should be accompanied by a section alert.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2}>\\n\\t<SectionAlert title=\\\"There was an error\\\" tone=\\\"error\\\">\\n\\t\\t<UnorderedList>\\n\\t\\t\\t<ListItem>\\n\\t\\t\\t\\t<TextLink href=\\\"#operational-plan-of-management-upload-button\\\">\\n\\t\\t\\t\\t\\tFile is missing for Operational Plan of Management\\n\\t\\t\\t\\t</TextLink>\\n\\t\\t\\t</ListItem>\\n\\t\\t</UnorderedList>\\n\\t</SectionAlert>\\n\\n\\t<TableWrapper>\\n\\t\\t<Table>\\n\\t\\t\\t<TableCaption>Assessment files</TableCaption>\\n\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Document type</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">File</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Size</TableHeader>\\n\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Action</TableHeader>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableHead>\\n\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tRMS Vehicle registration\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Box>filename.pdf</Box>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>88kb</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Button\\n\\t\\t\\t\\t\\t\\t\\ticonBefore={UploadIcon}\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"rms-vehicle-registration-upload-button\\\"\\n\\t\\t\\t\\t\\t\\t\\tvariant=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tUpload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow invalid={true}>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tOperational Plan of Management\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell></TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<StatusBadge\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\tlabel=\\\"File missing\\\"\\n\\t\\t\\t\\t\\t\\t\\tappearance=\\\"subtle\\\"\\n\\t\\t\\t\\t\\t\\t\\ttone=\\\"errorHigh\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Button\\n\\t\\t\\t\\t\\t\\t\\ticonBefore={UploadIcon}\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"operational-plan-of-management-upload-button\\\"\\n\\t\\t\\t\\t\\t\\t\\tvariant=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tUpload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\tVehicle build and layout plans\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Box>filename.pdf</Box>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>88kb</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t<Button\\n\\t\\t\\t\\t\\t\\t\\ticonBefore={UploadIcon}\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"vehicle-build-and-layout-plans-upload-button\\\"\\n\\t\\t\\t\\t\\t\\t\\tvariant=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tUpload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t</TableBody>\\n\\t\\t</Table>\\n\\t</TableWrapper>\\n</Stack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Table","description":"Tables help make complex information easier to scan and compare. Use tables for exact values or information that would be hard to read in body text.","group":"Content","storybookPath":"/story/content-table--basic","figmaGalleryNodeId":"11981%3A101727","relatedComponents":["summary-list"],"relatedPatterns":["search-filters","selectable-table-with-batch-actions"]}},"relatedPatterns":[{"slug":"search-filters","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    strong: \"strong\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, Table, TableCaption, TableHead, TableRow, TableCell, TableHeader, TableBody, ImageWithBorder} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!ImageWithBorder) _missingMdxReference(\"ImageWithBorder\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  if (!TableBody) _missingMdxReference(\"TableBody\", true);\n  if (!TableCaption) _missingMdxReference(\"TableCaption\", true);\n  if (!TableCell) _missingMdxReference(\"TableCell\", true);\n  if (!TableHead) _missingMdxReference(\"TableHead\", true);\n  if (!TableHeader) _missingMdxReference(\"TableHeader\", true);\n  if (!TableRow) _missingMdxReference(\"TableRow\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Search filters help users find what they’re looking for by displaying options that meet specified criteria.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applied filters are displayed as tags, so users can quickly see which filters have been applied to the dataset. Filters can be removed by dismissing the tags.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The dataset should be displayed in a \", _jsx(_components.a, {\n        href: \"/components/table\",\n        children: \"Table\"\n      }), \" or a list of \", _jsx(_components.a, {\n        href: \"/components/card\",\n        children: \"Cards\"\n      }), \" under the search filters. Refer to the specific component guidance to help determine which is more suitable to display your dataset.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={3}>\\n\\t<Stack gap={1}>\\n\\t\\t<Flex\\n\\t\\t\\tgap={1}\\n\\t\\t\\tjustifyContent=\\\"space-between\\\"\\n\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t>\\n\\t\\t\\t<Flex\\n\\t\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t\\t\\tgap={1}\\n\\t\\t\\t\\talignItems={['flex-start', 'flex-end']}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<div aria-label=\\\"Site\\\" role=\\\"search\\\">\\n\\t\\t\\t\\t\\t<SearchInput label=\\\"Search\\\" hideOptionalLabel />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<Button variant=\\\"secondary\\\" iconAfter={FilterIcon}>\\n\\t\\t\\t\\t\\tShow filters\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t</Flex>\\n\\t\\t\\t<Select\\n\\t\\t\\t\\tlabel=\\\"Sort by\\\"\\n\\t\\t\\t\\thideOptionalLabel\\n\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t{ value: 'newest', label: 'Newest to oldest' },\\n\\t\\t\\t\\t\\t{ value: 'old', label: 'Oldest to newest' },\\n\\t\\t\\t\\t]}\\n\\t\\t\\t/>\\n\\t\\t</Flex>\\n\\t\\t<Flex flexWrap=\\\"wrap\\\" gap={0.75} alignItems=\\\"flex-end\\\">\\n\\t\\t\\t<Tags\\n\\t\\t\\t\\theading={<Text fontWeight=\\\"bold\\\">Active filters</Text>}\\n\\t\\t\\t\\titems={[\\n\\t\\t\\t\\t\\t{ label: 'Category: Plant', onRemove: console.log },\\n\\t\\t\\t\\t\\t{ label: 'Type: Organic', onRemove: console.log },\\n\\t\\t\\t\\t\\t{ label: 'Assignee: John', onRemove: console.log },\\n\\t\\t\\t\\t]}\\n\\t\\t\\t/>\\n\\t\\t\\t<Button\\n\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\tvariant=\\\"text\\\"\\n\\t\\t\\t\\tonClick={console.log}\\n\\t\\t\\t\\ticonAfter={CloseIcon}\\n\\t\\t\\t>\\n\\t\\t\\t\\tClear filters\\n\\t\\t\\t</Button>\\n\\t\\t</Flex>\\n\\t\\t<Divider />\\n\\t</Stack>\\n\\t<Stack gap={1}>\\n\\t\\t<H2>\\n\\t\\t\\t<span role=\\\"status\\\">25 results</span>\\n\\t\\t</H2>\\n\\t\\t{Array.from(Array(5).keys()).map((idx) => (\\n\\t\\t\\t<Card key={idx} shadow clickable>\\n\\t\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t\\t<Stack gap={1}>\\n\\t\\t\\t\\t\\t\\t<H3>\\n\\t\\t\\t\\t\\t\\t\\t<CardLink href=\\\"#\\\">Card heading</CardLink>\\n\\t\\t\\t\\t\\t\\t</H3>\\n\\t\\t\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor, sit amet consectetur adipisicing elit. In,\\n\\t\\t\\t\\t\\t\\t\\tvoluptat\\n\\t\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t\\t</Stack>\\n\\t\\t\\t\\t</CardInner>\\n\\t\\t\\t</Card>\\n\\t\\t))}\\n\\t</Stack>\\n\\t<PaginationButtons\\n\\t\\tcurrentPage={5}\\n\\t\\ttotalPages={10}\\n\\t\\tonChange={(page) => console.log(page)}\\n\\t/>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"choose the right filter pattern to meet user needs\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"prioritise filters by expected usage\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"display 1-2 of the most important filters above the dataset\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"include \", _jsx(_components.a, {\n          href: \"/patterns/loading-error-empty-states\",\n          children: \"loading, empty, and error states\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"remove the applied filter tags, as they allow users to see and remove active filters\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter inputs\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Filters can be made of from multiple input types including:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/component/search-input\",\n          children: \"Search input\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/text-input\",\n          children: \"Text input\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/select\",\n          children: \"Select\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/checkbox\",\n          children: \"Checkbox\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/radio\",\n          children: \"Radio\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/combobox\",\n          children: \"Combobox\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/switch\",\n          children: \"Switch\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/date-picker\",\n          children: \"Date picker\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/components/date-picker\",\n          children: \"Date range picker\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter sizes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Filters are available in 3 sizes to accommodate a wide range of use cases and data sets:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Small:\"\n        }), \" 1-2 filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Medium:\"\n        }), \" 3-6 filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Large:\"\n        }), \" 6+ filters\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(Table, {\n      children: [_jsx(TableCaption, {\n        children: \"How to decide on filter size\"\n      }), _jsx(TableHead, {\n        children: _jsxs(TableRow, {\n          children: [_jsx(TableCell, {}), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Small\"\n            })\n          }), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Medium\"\n            })\n          }), _jsx(TableHeader, {\n            width: \"15%\",\n            scope: \"col\",\n            children: _jsx(_components.p, {\n              children: \"Large\"\n            })\n          })]\n        })\n      }), _jsxs(TableBody, {\n        children: [_jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Number of filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"3-6\"\n          }), _jsx(TableCell, {\n            children: \"6+\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Number of primary filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          }), _jsx(TableCell, {\n            children: \"1-2\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Tags display active filters\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            as: \"th\",\n            scope: \"row\",\n            children: _jsx(_components.p, {\n              children: \"Submission required\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"No\"\n          }), _jsx(TableCell, {\n            children: \"Yes\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Small\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1-2 visible filters sit above the dataset. Tags that display active filters are not needed in this case, as the filters are always visible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-small\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-table-small.png\",\n      alt: \"Screenshot of the small table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Medium\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"3-6 filters are displayed in an accordion that is triggered by a ‘Show filters’ button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 to 2 of the most used filters can be displayed outside the accordion to make them easier and faster to access.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-medium\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-table-medium.png\",\n      alt: \"Screenshot of the medium table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Large\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"6 or more filters are displayed in a drawer that is triggered by a ‘Show filters’ button. The drawer has a submit button that applies the filters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1 to 2 of the most used filters can be displayed outside the drawer to make them easier and faster to access.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--table-large\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-table-large.png\",\n      alt: \"Screenshot of the large table filtering pattern\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Actions in drawer\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/drawer\",\n        children: \"Drawer\"\n      }), \" component should contain a total of 4 actions:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Apply filters button:\"\n        }), \" When pressed, filters should be applied and the drawer should be closed.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Clear filters button:\"\n        }), \" When pressed, filters should be reset to their original state. The drawer should stay open.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Close button:\"\n        }), \" When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Cancel’ button.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Cancel button:\"\n        }), \" When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Close’ button.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Search filter sidebar\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you have filters that need to be quickly accessed on a regular basis, you could consider putting them in a \", _jsx(_components.a, {\n        href: \"/components/filter-sidebar\",\n        children: \"Filter sidebar\"\n      }), \" on the left so that they are always visible. The filter sidebar makes it faster and easier for users to access filters.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure that the correct HTML order is maintained by including a hero banner at the top, followed by the filter sidebar on the left, and the card listing on the right.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since the filters are always visible, there is no need to also include tags to show the active filters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/patterns-search-filters--cards\",\n        children: \"View Storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/patterns/search-filters-search-filter-sidebar.png\",\n      alt: \"Screenshot of the search filter sidebar pattern\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Empty state\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a search filter doesn’t match any data, use an \", _jsx(_components.a, {\n        href: \"/patterns/loading-error-empty-states\",\n        children: \"empty state\"\n      }), \" to let users know that they need to clear or change the search filter.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={3}>\\n\\t<Stack gap={1}>\\n\\t\\t<Flex\\n\\t\\t\\tgap={1}\\n\\t\\t\\tjustifyContent=\\\"space-between\\\"\\n\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t>\\n\\t\\t\\t<Flex\\n\\t\\t\\t\\tflexDirection={['column', 'row']}\\n\\t\\t\\t\\tgap={1}\\n\\t\\t\\t\\talignItems={['flex-start', 'flex-end']}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<SearchInput label=\\\"Search\\\" hideOptionalLabel />\\n\\t\\t\\t\\t<Button variant=\\\"secondary\\\" iconAfter={FilterIcon}>\\n\\t\\t\\t\\t\\tShow filters\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t</Flex>\\n\\t\\t\\t<Select\\n\\t\\t\\t\\tlabel=\\\"Sort by\\\"\\n\\t\\t\\t\\thideOptionalLabel\\n\\t\\t\\t\\toptions={[\\n\\t\\t\\t\\t\\t{ value: 'newest', label: 'Newest to oldest' },\\n\\t\\t\\t\\t\\t{ value: 'old', label: 'Oldest to newest' },\\n\\t\\t\\t\\t]}\\n\\t\\t\\t/>\\n\\t\\t</Flex>\\n\\t\\t<Divider />\\n\\t</Stack>\\n\\t<Stack gap={2} alignItems=\\\"flex-start\\\" role=\\\"alert\\\">\\n\\t\\t<Stack gap={1}>\\n\\t\\t\\t<HelpIcon size=\\\"lg\\\" color=\\\"muted\\\" />\\n\\t\\t\\t<Heading type=\\\"h2\\\" fontSize=\\\"lg\\\">\\n\\t\\t\\t\\tNo results found\\n\\t\\t\\t</Heading>\\n\\t\\t\\t<Text>Try adjusting your filter options.</Text>\\n\\t\\t</Stack>\\n\\t\\t<Button variant=\\\"secondary\\\">Clear filters</Button>\\n\\t</Stack>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Templates\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Coming soon\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Search filters","description":"Search filters help users find what they’re looking for by displaying options that meet specified criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-search-filters--cards","relatedComponents":["card","drawer","filter-sidebar","pagination","table"]}},"content":"\nSearch filters help users find what they’re looking for by displaying options that meet specified criteria.\n\nApplied filters are displayed as tags, so users can quickly see which filters have been applied to the dataset. Filters can be removed by dismissing the tags.\n\nThe dataset should be displayed in a [Table](/components/table) or a list of [Cards](/components/card) under the search filters. Refer to the specific component guidance to help determine which is more suitable to display your dataset.\n\n```jsx live\n<Stack gap={3}>\n\t<Stack gap={1}>\n\t\t<Flex\n\t\t\tgap={1}\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tflexDirection={['column', 'row']}\n\t\t>\n\t\t\t<Flex\n\t\t\t\tflexDirection={['column', 'row']}\n\t\t\t\tgap={1}\n\t\t\t\talignItems={['flex-start', 'flex-end']}\n\t\t\t>\n\t\t\t\t<div aria-label=\"Site\" role=\"search\">\n\t\t\t\t\t<SearchInput label=\"Search\" hideOptionalLabel />\n\t\t\t\t</div>\n\t\t\t\t<Button variant=\"secondary\" iconAfter={FilterIcon}>\n\t\t\t\t\tShow filters\n\t\t\t\t</Button>\n\t\t\t</Flex>\n\t\t\t<Select\n\t\t\t\tlabel=\"Sort by\"\n\t\t\t\thideOptionalLabel\n\t\t\t\toptions={[\n\t\t\t\t\t{ value: 'newest', label: 'Newest to oldest' },\n\t\t\t\t\t{ value: 'old', label: 'Oldest to newest' },\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Flex>\n\t\t<Flex flexWrap=\"wrap\" gap={0.75} alignItems=\"flex-end\">\n\t\t\t<Tags\n\t\t\t\theading={<Text fontWeight=\"bold\">Active filters</Text>}\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Category: Plant', onRemove: console.log },\n\t\t\t\t\t{ label: 'Type: Organic', onRemove: console.log },\n\t\t\t\t\t{ label: 'Assignee: John', onRemove: console.log },\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"text\"\n\t\t\t\tonClick={console.log}\n\t\t\t\ticonAfter={CloseIcon}\n\t\t\t>\n\t\t\t\tClear filters\n\t\t\t</Button>\n\t\t</Flex>\n\t\t<Divider />\n\t</Stack>\n\t<Stack gap={1}>\n\t\t<H2>\n\t\t\t<span role=\"status\">25 results</span>\n\t\t</H2>\n\t\t{Array.from(Array(5).keys()).map((idx) => (\n\t\t\t<Card key={idx} shadow clickable>\n\t\t\t\t<CardInner>\n\t\t\t\t\t<Stack gap={1}>\n\t\t\t\t\t\t<H3>\n\t\t\t\t\t\t\t<CardLink href=\"#\">Card heading</CardLink>\n\t\t\t\t\t\t</H3>\n\t\t\t\t\t\t<Text as=\"p\">\n\t\t\t\t\t\t\tLorem ipsum dolor, sit amet consectetur adipisicing elit. In,\n\t\t\t\t\t\t\tvoluptat\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Stack>\n\t\t\t\t</CardInner>\n\t\t\t</Card>\n\t\t))}\n\t</Stack>\n\t<PaginationButtons\n\t\tcurrentPage={5}\n\t\ttotalPages={10}\n\t\tonChange={(page) => console.log(page)}\n\t/>\n</Stack>\n```\n\n<DoHeading />\n\n- choose the right filter pattern to meet user needs\n- prioritise filters by expected usage\n- display 1-2 of the most important filters above the dataset\n- include [loading, empty, and error states](/patterns/loading-error-empty-states)\n\n<DontHeading />\n\n- remove the applied filter tags, as they allow users to see and remove active filters\n\n## Filter inputs\n\nFilters can be made of from multiple input types including:\n\n- [Search input](/component/search-input)\n- [Text input](/components/text-input)\n- [Select](/components/select)\n- [Checkbox](/components/checkbox)\n- [Radio](/components/radio)\n- [Combobox](/components/combobox)\n- [Switch](/components/switch)\n- [Date picker](/components/date-picker)\n- [Date range picker](/components/date-picker)\n\n## Filter sizes\n\nFilters are available in 3 sizes to accommodate a wide range of use cases and data sets:\n\n- **Small:** 1-2 filters\n- **Medium:** 3-6 filters\n- **Large:** 6+ filters\n\n<Table>\n\t<TableCaption>How to decide on filter size</TableCaption>\n\t<TableHead>\n\t\t<TableRow>\n\t\t\t<TableCell />\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tSmall\n\t\t\t</TableHeader>\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tMedium\n\t\t\t</TableHeader>\n\t\t\t<TableHeader width=\"15%\" scope=\"col\">\n\t\t\t\tLarge\n\t\t\t</TableHeader>\n\t\t</TableRow>\n\t</TableHead>\n\t<TableBody>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tNumber of filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>3-6</TableCell>\n\t\t\t<TableCell>6+</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tNumber of primary filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t\t<TableCell>1-2</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tTags display active filters\n\t\t\t</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t</TableRow>\n\t\t<TableRow>\n\t\t\t<TableCell as=\"th\" scope=\"row\">\n\t\t\t\tSubmission required\n\t\t\t</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>No</TableCell>\n\t\t\t<TableCell>Yes</TableCell>\n\t\t</TableRow>\n\t</TableBody>\n</Table>\n\n### Small\n\n1-2 visible filters sit above the dataset. Tags that display active filters are not needed in this case, as the filters are always visible.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--table-small)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-table-small.png\"\n\talt=\"Screenshot of the small table filtering pattern\"\n/>\n\n### Medium\n\n3-6 filters are displayed in an accordion that is triggered by a ‘Show filters’ button.\n\n1 to 2 of the most used filters can be displayed outside the accordion to make them easier and faster to access.\n\nApplied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--table-medium)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-table-medium.png\"\n\talt=\"Screenshot of the medium table filtering pattern\"\n/>\n\n### Large\n\n6 or more filters are displayed in a drawer that is triggered by a ‘Show filters’ button. The drawer has a submit button that applies the filters.\n\n1 to 2 of the most used filters can be displayed outside the drawer to make them easier and faster to access.\n\nApplied filters are displayed as tags under the filter inputs. This helps users quickly see which filters have been applied. Filters can be removed by dismissing the tags.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--table-large)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-table-large.png\"\n\talt=\"Screenshot of the large table filtering pattern\"\n/>\n\n### Actions in drawer\n\nThe [Drawer](/components/drawer) component should contain a total of 4 actions:\n\n1. **Apply filters button:** When pressed, filters should be applied and the drawer should be closed.\n2. **Clear filters button:** When pressed, filters should be reset to their original state. The drawer should stay open.\n3. **Close button:** When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Cancel’ button.\n4. **Cancel button:** When pressed, the drawer should close. Any changes that have been made since opening the drawer should be discarded. This is essentially the same as the ‘Close’ button.\n\n## Search filter sidebar\n\nIf you have filters that need to be quickly accessed on a regular basis, you could consider putting them in a [Filter sidebar](/components/filter-sidebar) on the left so that they are always visible. The filter sidebar makes it faster and easier for users to access filters.\n\nEnsure that the correct HTML order is maintained by including a hero banner at the top, followed by the filter sidebar on the left, and the card listing on the right.\n\nSince the filters are always visible, there is no need to also include tags to show the active filters.\n\n[View Storybook preview](/storybook/index.html?path=/story/patterns-search-filters--cards)\n\n<ImageWithBorder\n\tsrc=\"/img/patterns/search-filters-search-filter-sidebar.png\"\n\talt=\"Screenshot of the search filter sidebar pattern\"\n/>\n\n## Empty state\n\nWhen a search filter doesn’t match any data, use an [empty state](/patterns/loading-error-empty-states) to let users know that they need to clear or change the search filter.\n\n```jsx live\n<Stack gap={3}>\n\t<Stack gap={1}>\n\t\t<Flex\n\t\t\tgap={1}\n\t\t\tjustifyContent=\"space-between\"\n\t\t\tflexDirection={['column', 'row']}\n\t\t>\n\t\t\t<Flex\n\t\t\t\tflexDirection={['column', 'row']}\n\t\t\t\tgap={1}\n\t\t\t\talignItems={['flex-start', 'flex-end']}\n\t\t\t>\n\t\t\t\t<SearchInput label=\"Search\" hideOptionalLabel />\n\t\t\t\t<Button variant=\"secondary\" iconAfter={FilterIcon}>\n\t\t\t\t\tShow filters\n\t\t\t\t</Button>\n\t\t\t</Flex>\n\t\t\t<Select\n\t\t\t\tlabel=\"Sort by\"\n\t\t\t\thideOptionalLabel\n\t\t\t\toptions={[\n\t\t\t\t\t{ value: 'newest', label: 'Newest to oldest' },\n\t\t\t\t\t{ value: 'old', label: 'Oldest to newest' },\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Flex>\n\t\t<Divider />\n\t</Stack>\n\t<Stack gap={2} alignItems=\"flex-start\" role=\"alert\">\n\t\t<Stack gap={1}>\n\t\t\t<HelpIcon size=\"lg\" color=\"muted\" />\n\t\t\t<Heading type=\"h2\" fontSize=\"lg\">\n\t\t\t\tNo results found\n\t\t\t</Heading>\n\t\t\t<Text>Try adjusting your filter options.</Text>\n\t\t</Stack>\n\t\t<Button variant=\"secondary\">Clear filters</Button>\n\t</Stack>\n</Stack>\n```\n\n## Templates\n\nComing soon\n","data":{"title":"Search filters","description":"Search filters help users find what they’re looking for by displaying options that meet specified criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-search-filters--cards","relatedComponents":["card","drawer","filter-sidebar","pagination","table"]},"title":"Search filters","description":"Search filters help users find what they’re looking for by displaying options that meet specified criteria.","figmaTemplateNodeId":"18586-56265","githubTemplatePath":"/.storybook/stories/DataFiltering","storybookPath":"/story/patterns-search-filters--cards","relatedComponents":["card","drawer","filter-sidebar","pagination","table"]},{"slug":"selectable-table-with-batch-actions","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Individual row selection\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To toggle the selection of an individual row, users can use the \", _jsx(_components.a, {\n        href: \"/components/checkbox\",\n        children: \"Checkbox\"\n      }), \" in the first column which should have the row heading ‘Select’.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Selected rows have a solid action coloured outline, which is achieved by setting \", _jsx(_components.code, {\n        children: \"selected={true}\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"TableRow\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isRowSelected, setIsRowSelected] = React.useState(false);\\n\\treturn (\\n\\t\\t<TableWrapper>\\n\\t\\t\\t<Table>\\n\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => setIsRowSelected((x) => !x)}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select row</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t<TableCell>20/06/2024</TableCell>\\n\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t</Table>\\n\\t\\t</TableWrapper>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Selecting all rows\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To toggle the selection of all rows at once, users can use the ‘Select all rows’ checkbox above the table. The ‘Select all rows’ checkbox should always be placed just above the table element, with a border to divide the two elements.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Do not use \", _jsx(_components.code, {\n        children: \"TableCaption\"\n      }), \" component in combination with the ‘Select all rows’ checkbox as the caption will sit in between the checkbox and table. Instead, place a \", _jsx(_components.a, {\n        href: \"/components/heading\",\n        children: \"Heading\"\n      }), \" component above the Checkbox and connect the heading and table using \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \". For more information, please refer to the \", _jsx(_components.a, {\n        href: \"/components/table#labels-and-headings\",\n        children: \"Labels and headings\"\n      }), \" section of the table documentation.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Unlike the checkboxes in each row, the ‘Select all rows’ checkbox above the table has three states: checked, unchecked, and indeterminate. When some, but not all, rows are selected, the ‘Select all rows’ checkbox should enter an indeterminate state. This visual indicator signals to users that not all rows are selected and allows them to toggle all rows on or off with a single click.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedRows, setSelectedRows] = React.useState([]);\\n\\n\\tfunction toggleRowSelection(rowIdx) {\\n\\t\\tif (selectedRows.includes(rowIdx)) {\\n\\t\\t\\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows((r) => [...r, rowIdx]);\\n\\t\\t}\\n\\t}\\n\\n\\tconst anyRowsChecked = selectedRows.length > 0;\\n\\tconst allRowsChecked = selectedRows.length === 3;\\n\\n\\tfunction toggleAllRows() {\\n\\t\\tif (anyRowsChecked) {\\n\\t\\t\\tsetSelectedRows([]);\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows([0, 1, 2]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Stack>\\n\\t\\t\\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\\n\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\tchecked={allRowsChecked}\\n\\t\\t\\t\\t\\tindeterminate={anyRowsChecked && !allRowsChecked}\\n\\t\\t\\t\\t\\tonChange={() => toggleAllRows()}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tSelect all rows\\n\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t</Box>\\n\\t\\t\\t<TableWrapper>\\n\\t\\t\\t\\t<Table>\\n\\t\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t\\t{Array.from(new Array(3).keys()).map((idx) => {\\n\\t\\t\\t\\t\\t\\t\\tconst isRowSelected = selectedRows.includes(idx);\\n\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => toggleRowSelection(idx)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>20/06/2024</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t\\t</Table>\\n\\t\\t\\t</TableWrapper>\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Batch actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When a data table has a set of actions that can be performed against every selectable row, those actions can be applied as a batch. Batch actions can increase user efficiency by allowing an action to be applied to multiple items simultaneously. This is far more efficient than repeatedly applying the same action to multiple table rows one at a time.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Once a row from the table has been selected, the \", _jsx(_components.code, {\n        children: \"TableBatchActionsBar\"\n      }), \" component is positioned sticky at the bottom of the table, presenting a set of possible actions to apply to all selected rows.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Only small \", _jsx(_components.a, {\n        href: \"/components/button\",\n        children: \"Buttons\"\n      }), \" should be placed inside of the \", _jsx(_components.code, {\n        children: \"TableBatchActionsBar\"\n      }), \" component. When pressed, these buttons should trigger \", _jsx(_components.a, {\n        href: \"/components/drawer\",\n        children: \"Drawers\"\n      }), \" that contain the form related to the action.\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ensure each batch action can be performed on every selectable row\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a ‘Cancel’ button at the end of the batch actions button group\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use small buttons for batch actions\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"include batch actions that can not be performed on every selectable row\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"place form components inside the \", _jsx(_components.code, {\n          children: \"TableBatchActionsBar\"\n        }), \" component, as they can introduce inconsistencies as well as complexities related to validation and submission.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/content-table--selectable-with-batch-actions\",\n        children: \"View an example in Storybook\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedRows, setSelectedRows] = React.useState([]);\\n\\n\\tfunction toggleRowSelection(rowIdx) {\\n\\t\\tif (selectedRows.includes(rowIdx)) {\\n\\t\\t\\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows((r) => [...r, rowIdx]);\\n\\t\\t}\\n\\t}\\n\\n\\tconst anyRowsChecked = selectedRows.length > 0;\\n\\tconst allRowsChecked = selectedRows.length === 3;\\n\\n\\tfunction toggleAllRows() {\\n\\t\\tif (anyRowsChecked) {\\n\\t\\t\\tsetSelectedRows([]);\\n\\t\\t} else {\\n\\t\\t\\tsetSelectedRows([0, 1, 2]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Stack gap={0.5}>\\n\\t\\t\\t<Stack>\\n\\t\\t\\t\\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\\n\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\tchecked={allRowsChecked}\\n\\t\\t\\t\\t\\t\\tindeterminate={anyRowsChecked && !allRowsChecked}\\n\\t\\t\\t\\t\\t\\tonChange={() => toggleAllRows()}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tSelect all rows\\n\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t<TableWrapper>\\n\\t\\t\\t\\t\\t<Table>\\n\\t\\t\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader>Select</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Reference</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Date submitted</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<TableHeader scope=\\\"col\\\">Actions</TableHeader>\\n\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t\\t\\t{Array.from(new Array(3).keys()).map((idx) => {\\n\\t\\t\\t\\t\\t\\t\\t\\tconst isRowSelected = selectedRows.includes(idx);\\n\\t\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableRow selected={isRowSelected}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Checkbox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={isRowSelected}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={() => toggleRowSelection(idx)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<VisuallyHidden>Select</VisuallyHidden>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell as=\\\"th\\\" scope=\\\"row\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">REF-AB3CD4EF</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>20/06/2024</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Flex gap={1}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Download</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextLink href=\\\"#\\\">Delete</TextLink>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Flex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t\\t\\t</Table>\\n\\t\\t\\t\\t</TableWrapper>\\n\\t\\t\\t</Stack>\\n\\t\\t\\t{selectedRows.length > 0 ? (\\n\\t\\t\\t\\t<TableBatchActionsBar>\\n\\t\\t\\t\\t\\t<TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t\\tApply action to {selectedRows.length} items\\n\\t\\t\\t\\t\\t</TableBatchActionsTitle>\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDownload\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\t\\t\\t\\t\\t\\tDelete\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" size=\\\"sm\\\" onClick={toggleAllRows}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t</TableBatchActionsBar>\\n\\t\\t\\t) : null}\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Selectable tables with batch actions","description":"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected rows. A batch action is any action that can be performed against any selectable row of a table.","storybookPath":"/story/content-table--selectable-with-batch-actions","relatedComponents":["table","checkbox","button","drawer"],"githubTemplatePath":"/.storybook/stories/SelectableTableBatchActions"}},"content":"\n## Individual row selection\n\nTo toggle the selection of an individual row, users can use the [Checkbox](/components/checkbox) in the first column which should have the row heading ‘Select’.\n\nSelected rows have a solid action coloured outline, which is achieved by setting `selected={true}` on the `TableRow` component.\n\n```jsx live\n() => {\n\tconst [isRowSelected, setIsRowSelected] = React.useState(false);\n\treturn (\n\t\t<TableWrapper>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableHeader>Select</TableHeader>\n\t\t\t\t\t\t<TableHeader scope=\"col\">Reference</TableHeader>\n\t\t\t\t\t\t<TableHeader scope=\"col\">Date submitted</TableHeader>\n\t\t\t\t\t\t<TableHeader scope=\"col\">Actions</TableHeader>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow selected={isRowSelected}>\n\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tchecked={isRowSelected}\n\t\t\t\t\t\t\t\tonChange={() => setIsRowSelected((x) => !x)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<VisuallyHidden>Select row</VisuallyHidden>\n\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell as=\"th\" scope=\"row\" fontWeight=\"bold\">\n\t\t\t\t\t\t\t<TextLink href=\"#\">REF-AB3CD4EF</TextLink>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell>20/06/2024</TableCell>\n\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t<Flex gap={1}>\n\t\t\t\t\t\t\t\t<TextLink href=\"#\">Download</TextLink>\n\t\t\t\t\t\t\t\t<TextLink href=\"#\">Delete</TextLink>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableWrapper>\n\t);\n};\n```\n\n## Selecting all rows\n\nTo toggle the selection of all rows at once, users can use the ‘Select all rows’ checkbox above the table. The ‘Select all rows’ checkbox should always be placed just above the table element, with a border to divide the two elements.\n\nDo not use `TableCaption` component in combination with the ‘Select all rows’ checkbox as the caption will sit in between the checkbox and table. Instead, place a [Heading](/components/heading) component above the Checkbox and connect the heading and table using `aria-labelledby`. For more information, please refer to the [Labels and headings](/components/table#labels-and-headings) section of the table documentation.\n\nUnlike the checkboxes in each row, the ‘Select all rows’ checkbox above the table has three states: checked, unchecked, and indeterminate. When some, but not all, rows are selected, the ‘Select all rows’ checkbox should enter an indeterminate state. This visual indicator signals to users that not all rows are selected and allows them to toggle all rows on or off with a single click.\n\n```jsx live\n() => {\n\tconst [selectedRows, setSelectedRows] = React.useState([]);\n\n\tfunction toggleRowSelection(rowIdx) {\n\t\tif (selectedRows.includes(rowIdx)) {\n\t\t\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\n\t\t} else {\n\t\t\tsetSelectedRows((r) => [...r, rowIdx]);\n\t\t}\n\t}\n\n\tconst anyRowsChecked = selectedRows.length > 0;\n\tconst allRowsChecked = selectedRows.length === 3;\n\n\tfunction toggleAllRows() {\n\t\tif (anyRowsChecked) {\n\t\t\tsetSelectedRows([]);\n\t\t} else {\n\t\t\tsetSelectedRows([0, 1, 2]);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Stack>\n\t\t\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\n\t\t\t\t<Checkbox\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tchecked={allRowsChecked}\n\t\t\t\t\tindeterminate={anyRowsChecked && !allRowsChecked}\n\t\t\t\t\tonChange={() => toggleAllRows()}\n\t\t\t\t>\n\t\t\t\t\tSelect all rows\n\t\t\t\t</Checkbox>\n\t\t\t</Box>\n\t\t\t<TableWrapper>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableHeader>Select</TableHeader>\n\t\t\t\t\t\t\t<TableHeader scope=\"col\">Reference</TableHeader>\n\t\t\t\t\t\t\t<TableHeader scope=\"col\">Date submitted</TableHeader>\n\t\t\t\t\t\t\t<TableHeader scope=\"col\">Actions</TableHeader>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{Array.from(new Array(3).keys()).map((idx) => {\n\t\t\t\t\t\t\tconst isRowSelected = selectedRows.includes(idx);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TableRow selected={isRowSelected}>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={isRowSelected}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => toggleRowSelection(idx)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<VisuallyHidden>Select</VisuallyHidden>\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell as=\"th\" scope=\"row\" fontWeight=\"bold\">\n\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">REF-AB3CD4EF</TextLink>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>20/06/2024</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Flex gap={1}>\n\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Download</TextLink>\n\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Delete</TextLink>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableWrapper>\n\t\t</Stack>\n\t);\n};\n```\n\n## Batch actions\n\nWhen a data table has a set of actions that can be performed against every selectable row, those actions can be applied as a batch. Batch actions can increase user efficiency by allowing an action to be applied to multiple items simultaneously. This is far more efficient than repeatedly applying the same action to multiple table rows one at a time.\n\nOnce a row from the table has been selected, the `TableBatchActionsBar` component is positioned sticky at the bottom of the table, presenting a set of possible actions to apply to all selected rows.\n\nOnly small [Buttons](/components/button) should be placed inside of the `TableBatchActionsBar` component. When pressed, these buttons should trigger [Drawers](/components/drawer) that contain the form related to the action.\n\n<DoHeading />\n\n- ensure each batch action can be performed on every selectable row\n- include a ‘Cancel’ button at the end of the batch actions button group\n- use small buttons for batch actions\n\n<DontHeading />\n\n- include batch actions that can not be performed on every selectable row\n- place form components inside the `TableBatchActionsBar` component, as they can introduce inconsistencies as well as complexities related to validation and submission.\n\n[View an example in Storybook](/storybook/index.html?path=/story/content-table--selectable-with-batch-actions)\n\n```jsx live\n() => {\n\tconst [selectedRows, setSelectedRows] = React.useState([]);\n\n\tfunction toggleRowSelection(rowIdx) {\n\t\tif (selectedRows.includes(rowIdx)) {\n\t\t\tsetSelectedRows((r) => r.filter((s) => s !== rowIdx));\n\t\t} else {\n\t\t\tsetSelectedRows((r) => [...r, rowIdx]);\n\t\t}\n\t}\n\n\tconst anyRowsChecked = selectedRows.length > 0;\n\tconst allRowsChecked = selectedRows.length === 3;\n\n\tfunction toggleAllRows() {\n\t\tif (anyRowsChecked) {\n\t\t\tsetSelectedRows([]);\n\t\t} else {\n\t\t\tsetSelectedRows([0, 1, 2]);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Stack gap={0.5}>\n\t\t\t<Stack>\n\t\t\t\t<Box paddingBottom={0.75} paddingLeft={0.75} borderBottom>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tchecked={allRowsChecked}\n\t\t\t\t\t\tindeterminate={anyRowsChecked && !allRowsChecked}\n\t\t\t\t\t\tonChange={() => toggleAllRows()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSelect all rows\n\t\t\t\t\t</Checkbox>\n\t\t\t\t</Box>\n\t\t\t\t<TableWrapper>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableHeader>Select</TableHeader>\n\t\t\t\t\t\t\t\t<TableHeader scope=\"col\">Reference</TableHeader>\n\t\t\t\t\t\t\t\t<TableHeader scope=\"col\">Date submitted</TableHeader>\n\t\t\t\t\t\t\t\t<TableHeader scope=\"col\">Actions</TableHeader>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{Array.from(new Array(3).keys()).map((idx) => {\n\t\t\t\t\t\t\t\tconst isRowSelected = selectedRows.includes(idx);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow selected={isRowSelected}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isRowSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => toggleRowSelection(idx)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<VisuallyHidden>Select</VisuallyHidden>\n\t\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell as=\"th\" scope=\"row\" fontWeight=\"bold\">\n\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">REF-AB3CD4EF</TextLink>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>20/06/2024</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Flex gap={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Download</TextLink>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextLink href=\"#\">Delete</TextLink>\n\t\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableWrapper>\n\t\t\t</Stack>\n\t\t\t{selectedRows.length > 0 ? (\n\t\t\t\t<TableBatchActionsBar>\n\t\t\t\t\t<TableBatchActionsTitle>\n\t\t\t\t\t\tApply action to {selectedRows.length} items\n\t\t\t\t\t</TableBatchActionsTitle>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\">\n\t\t\t\t\t\t\tDownload\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\">\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"tertiary\" size=\"sm\" onClick={toggleAllRows}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</TableBatchActionsBar>\n\t\t\t) : null}\n\t\t</Stack>\n\t);\n};\n```\n","data":{"title":"Selectable tables with batch actions","description":"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected rows. A batch action is any action that can be performed against any selectable row of a table.","storybookPath":"/story/content-table--selectable-with-batch-actions","relatedComponents":["table","checkbox","button","drawer"],"githubTemplatePath":"/.storybook/stories/SelectableTableBatchActions"},"title":"Selectable tables with batch actions","description":"Selectable tables allow users to select one or more rows simultaneously and perform batch actions against the selected rows. A batch action is any action that can be performed against any selectable row of a table.","figmaTemplateNodeId":null,"githubTemplatePath":"/.storybook/stories/SelectableTableBatchActions","storybookPath":"/story/content-table--selectable-with-batch-actions","relatedComponents":["table","checkbox","button","drawer"]}],"relatedComponents":[{"slug":"summary-list","name":"summary-list","title":"Summary list","description":"Summary list is used to summarise information such as a user’s responses at the end of a form.","storybookPath":"/story/Content-SummaryList--basic","figmaGalleryNodeId":"12908%3A103687","subNavItems":[{"label":"Overview","href":"/components/summary-list","path":"/home/runner/work/agds-next/agds-next/packages/react/src/summary-list/docs/overview.mdx"},{"label":"Code","href":"/components/summary-list/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/summary-list/docs/code.mdx"}],"relatedComponents":["table"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}