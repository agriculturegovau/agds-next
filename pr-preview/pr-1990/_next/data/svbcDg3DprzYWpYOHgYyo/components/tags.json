{"pageProps":{"pkg":{"slug":"tags","name":"tags","title":"Tags","description":"Tags classify content using keywords or labels. They are added to a web page, asset or content to help users search for related content quickly and easily.","storybookPath":"/story/content-tags--basic","figmaGalleryNodeId":"11981%3A101715","subNavItems":[{"label":"Overview","href":"/components/tags","path":"/home/runner/work/agds-next/agds-next/packages/react/src/tags/docs/overview.mdx"},{"label":"Code","href":"/components/tags/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/tags/docs/code.mdx"}],"relatedComponents":["indicator-dot","notification-badge","status-badge"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Tags"}],"toc":[{"id":"tags-with-links","title":"Tags with links","level":2,"slug":"tags-with-links","items":[]},{"id":"tags-without-links","title":"Tags without links","level":2,"slug":"tags-without-links","items":[]},{"id":"removable-tags","title":"Removable tags","level":2,"slug":"removable-tags","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use when content has multiple categories\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use with or without links\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"add to a page to improve SEO\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use links to filter/group data types\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"precede them with an appropriate heading.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use as a status indicator – use StatusBadge\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"overwrite Tag colours or fills.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use Tags with links and remove buttons together, as it is confusing for users.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tags with links\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A list of related tags that use links.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: An appropriate heading level should be used to introduce the purpose of the list.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Tags\\n\\theading={\\n\\t\\t<Text as=\\\"h2\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\tTags:\\n\\t\\t</Text>\\n\\t}\\n\\titems={[\\n\\t\\t{ href: '#', label: 'Apple' },\\n\\t\\t{ href: '#', label: 'Orange' },\\n\\t\\t{ href: '#', label: 'Peach' },\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tags without links\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A list of related tags without links.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Tags\\n\\theading={\\n\\t\\t<Text as=\\\"h2\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\tTags:\\n\\t\\t</Text>\\n\\t}\\n\\titems={[{ label: 'Apple' }, { label: 'Orange' }, { label: 'Peach' }]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Removable tags\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tags can be removed from a list by passing a function to the \", _jsx(_components.code, {\n        children: \"onRemove\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a user removes a tag, their focus automatically shifts to the previous tag in the list. If the last tag is removed, focus is lost, and depending on the context, you may need to manually set focus within \", _jsx(_components.code, {\n        children: \"onRemove\"\n      }), \" to help the user continue their task.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For screen reader users, it’s important to provide feedback when a tag is removed; the method of which depends on the context. In the example below, an explicit announcement is made. More commonly, however, the page that the tags affect would announce the resulting changes (e.g., “25 results found”), similar to the approach used in the \", _jsx(_components.a, {\n        href: \"/patterns/search-filters\",\n        children: \"Search filter pattern\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Avoid using Tags with links and Remove buttons together, as this will confuse users.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [items, setItems] = React.useState([\\n\\t\\t{ label: 'Apple' },\\n\\t\\t{ label: 'Orange' },\\n\\t\\t{ label: 'Peach' },\\n\\t]);\\n\\tconst [announcement, setAnnouncement] = React.useState('');\\n\\n\\tconst handleRemove = (label) => {\\n\\t\\tsetItems((prevItems) => prevItems.filter((item) => item.label !== label));\\n\\t\\tsetAnnouncement(`${label} removed`);\\n\\t};\\n\\n\\tconst itemsWithHandlers = items.map((item) => ({\\n\\t\\t...item,\\n\\t\\tonRemove: () => handleRemove(item.label),\\n\\t}));\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t<Box css={visuallyHiddenStyles} role=\\\"status\\\">\\n\\t\\t\\t\\t{announcement}\\n\\t\\t\\t</Box>\\n\\t\\t\\t{items.length > 0 ? (\\n\\t\\t\\t\\t<Tags\\n\\t\\t\\t\\t\\theading={\\n\\t\\t\\t\\t\\t\\t<Text as=\\\"h2\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\t\\t\\t\\tTags:\\n\\t\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\titems={itemsWithHandlers}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t) : undefined}\\n\\t\\t</>\\n\\t);\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Tags","description":"Tags classify content using keywords or labels. They are added to a web page, asset or content to help users search for related content quickly and easily.","group":"Content","storybookPath":"/story/content-tags--basic","figmaGalleryNodeId":"11981%3A101715","relatedComponents":["indicator-dot","notification-badge","status-badge"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"indicator-dot","name":"indicator-dot","title":"Indicator dot","description":"Indicator dots are small, decorative, badge-like indicators used to call attention to an item, such as an unread message.","storybookPath":"/story/content-indicatordot--basic","figmaGalleryNodeId":"11981%3A101236","subNavItems":[{"label":"Overview","href":"/components/indicator-dot","path":"/home/runner/work/agds-next/agds-next/packages/react/src/indicator-dot/docs/overview.mdx"},{"label":"Code","href":"/components/indicator-dot/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/indicator-dot/docs/code.mdx"}],"relatedComponents":["notification-badge","status-badge","tags"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"notification-badge","name":"notification-badge","title":"Notification badge","description":"Notification badges are visual indicators for numeric values.","storybookPath":"/story/content-notificationbadge--basic","figmaGalleryNodeId":"18568%3A86109","subNavItems":[{"label":"Overview","href":"/components/notification-badge","path":"/home/runner/work/agds-next/agds-next/packages/react/src/notification-badge/docs/overview.mdx"},{"label":"Code","href":"/components/notification-badge/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/notification-badge/docs/code.mdx"}],"relatedComponents":["indicator-dot","status-badge","tags"],"relatedPatterns":null,"deprecated":false,"unreleased":false},{"slug":"status-badge","name":"status-badge","title":"Status badge","description":"Status badges are visual indicators used to highlight an item’s status for quick recognition.","storybookPath":"/story/content-statusbadge--success-high","figmaGalleryNodeId":"18568%3A86192","subNavItems":[{"label":"Overview","href":"/components/status-badge","path":"/home/runner/work/agds-next/agds-next/packages/react/src/status-badge/docs/overview.mdx"},{"label":"Content","href":"/components/status-badge/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/status-badge/docs/content.mdx"},{"label":"Code","href":"/components/status-badge/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/status-badge/docs/code.mdx"}],"relatedComponents":["indicator-dot","notification-badge","tags"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}