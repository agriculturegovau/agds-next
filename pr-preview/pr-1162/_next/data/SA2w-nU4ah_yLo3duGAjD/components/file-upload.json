{"pageProps":{"pkg":{"slug":"file-upload","name":"file-upload","version":"1.5.1","title":"File upload","description":"The File upload component allows users to attach multiple files to a form via drag-and-drop or by browsing the device.","storybookPath":"/story/forms-fileupload--basic","figmaGalleryNodeId":"12444%3A100384","subNavItems":[{"label":"Overview","href":"/components/file-upload","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-upload/docs/overview.mdx"},{"label":"Code","href":"/components/file-upload/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-upload/docs/code.mdx"}],"relatedComponents":["file-input"],"deprecated":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"File upload"}],"toc":[{"id":"indicating-upload-status","title":"Indicating upload status","level":2,"slug":"indicating-upload-status","items":[{"id":"uploading-on-submission","title":"Uploading on submission","level":3,"slug":"uploading-on-submission","items":[]},{"id":"uploading-files-instantly","title":"Uploading files instantly","level":3,"slug":"uploading-files-instantly","items":[]}]},{"id":"props","title":"Props","level":2,"slug":"props","items":[{"id":"multiple-files","title":"Multiple files","level":3,"slug":"multiple-files","items":[]},{"id":"maximum-size","title":"Maximum size","level":3,"slug":"maximum-size","items":[]},{"id":"accepted-files","title":"Accepted files","level":3,"slug":"accepted-files","items":[]}]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileUpload\\n\\tlabel=\\\"Avatar image\\\"\\n\\thint=\\\"Formats accepted: .png, .jpg.\\\"\\n\\tmultiple={false}\\n\\taccept={['image/jpeg', 'image/jpg', 'image/png']}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"FileUpload\"\n      }), \" is a \", _jsx(_components.a, {\n        href: \"https://reactjs.org/docs/forms.html#controlled-components\",\n        children: \"controlled component\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"upload selected files instantly as they are selected or on submission\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"provide the accepted file types, maximum file size and whether the user can upload one file at a time or several at once\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include hint text to provide information about the field\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate file uploading state\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate successful file upload\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate unsuccessful file uploads with a meaningful error message.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"change the default behaviour of the component by adding a standalone upload file button.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Indicating upload status\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When using FileUpload, you need to consider how to communicate to the user that the upload is in progress. Otherwise the page will appear \\\"frozen\\\" as the operation happens in the background.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Uploading on submission\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, we are submitting a file as part of a typical form submission to an API.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We recommend wrapping the FileUpload in a LoadingBanner as the form submits, to indicate to the user that any delays are being caused by a potentially larger file being uploaded. If your backend system supports it, you can also use this UI to indicate upload status as a percentage.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As normal, we indicate that the form is submitting by adding a \", _jsx(_components.code, {\n        children: \"loading={true}\"\n      }), \" to the submit button. This will show animated dots to signify that the user has to wait for the operation to complete.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FormStack>\\n\\t<div style={{ position: 'relative' }}>\\n\\t\\t<FileUpload\\n\\t\\t\\tlabel=\\\"Avatar image\\\"\\n\\t\\t\\thint=\\\"Formats accepted: .png, .jpg.\\\"\\n\\t\\t\\tmultiple={false}\\n\\t\\t\\taccept={['image/jpeg', 'image/jpg', 'image/png']}\\n\\t\\t/>\\n\\t\\t<LoadingBlanket label=\\\"Uploading file (53%)\\\" />\\n\\t</div>\\n\\t<div>\\n\\t\\t<Button loading>Submit</Button>\\n\\t</div>\\n</FormStack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Uploading files instantly\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, the file is instantly uploaded to a file hosting service, and the URL of the uploaded asset would be added to the form for submission. This means the form should not be allowed to submit until all assets are uploaded, but that the submission should be very quick as it's only text content being submitted.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"FileUpload\"\n      }), \" component allows you to indicate the status of an upload via a \", _jsx(_components.code, {\n        children: \"file.status\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst uploadingFile = new File(['this is an example file'], 'example.jpg', {\\n\\t\\ttype: 'image/jpg',\\n\\t});\\n\\tuploadingFile.status = 'uploading';\\n\\tconst uploadedFile = new File(\\n\\t\\t['this is another example file that has uploaded'],\\n\\t\\t'example.jpg',\\n\\t\\t{\\n\\t\\t\\ttype: 'image/jpg',\\n\\t\\t}\\n\\t);\\n\\tuploadedFile.status = 'success';\\n\\treturn (\\n\\t\\t<FileUpload\\n\\t\\t\\tlabel=\\\"Avatar image\\\"\\n\\t\\t\\thint=\\\"Formats accepted: .png, .jpg.\\\"\\n\\t\\t\\tmultiple={false}\\n\\t\\t\\taccept={['image/jpeg', 'image/jpg', 'image/png']}\\n\\t\\t\\tvalue={[uploadedFile, uploadingFile]}\\n\\t\\t\\tonChange={console.log}\\n\\t\\t/>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiple files\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Selecting multiple files is also supported with FileUpload. Simply add \", _jsx(_components.code, {\n        children: \"multiple={true}\"\n      }), \", and you can select as many files as you want. You can also set \", _jsx(_components.code, {\n        children: \"maxFiles\"\n      }), \" to limit how many files can be selected.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileUpload multiple={true} maxFiles={3} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Maximum size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"maxSize\"\n      }), \" prop to set a maximum size for each file. This value is measured in kB.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileUpload maxSize={200} /> // 200kB\\n<FileUpload maxSize={20000} /> // 20MB\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accepted files\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"accept\"\n      }), \" prop, you can specify what filetypes are allowed to be selected. Filetypes include...\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"application/msword\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"application/pdf\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"application/rtf\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"application/vnd.ms-excel\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        }), \" (.xls)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n        }), \" (.doc)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"application/zip\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"application/xml\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"audio/*\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"audio/mpeg\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"audio/wav\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/*\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/gif\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/heic\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/jpeg\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/png\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/svg+xml\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/tiff\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"image/webp\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"text/*\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"text/csv\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"text/plain\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"text/rtf\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"text/xml\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"video/*\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"video/mp4\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"video/mpeg\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<FileUpload accept={['image/jpeg', 'image/jpg', 'image/png']} />\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"File upload","description":"The File upload component allows users to attach multiple files to a form via drag-and-drop or by browsing the device.","group":"Forms","storybookPath":"/story/forms-fileupload--basic","figmaGalleryNodeId":"12444%3A100384","relatedComponents":["file-input"]}},"relatedComponents":[{"slug":"file-input","name":"file-input","version":"1.5.1","title":"File input","description":"The File input component allows users to attach one file to a form field by browsing their device.","storybookPath":"/story/Forms-FileInput--basic","figmaGalleryNodeId":"16180%3A41550","subNavItems":[{"label":"Overview","href":"/components/file-input","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-input/docs/overview.mdx"},{"label":"Code","href":"/components/file-input/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/file-input/docs/code.mdx"}],"relatedComponents":["file-upload"],"deprecated":false}]},"__N_SSG":true}