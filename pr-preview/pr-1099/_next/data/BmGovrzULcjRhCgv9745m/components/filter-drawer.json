{"pageProps":{"pkg":{"slug":"filter-drawer","name":"filter-drawer","version":"1.6.0","title":"Filter drawer","description":"Filter drawers are a type of modal which are used to apply several filters to a data set, without taking up a large area of the main page.","storybookPath":"/story/content-FilterDrawer--basic","figmaGalleryNodeId":"11981%3A101667","subNavItems":[{"label":"Overview","href":"/components/filter-drawer","path":"/home/runner/work/agds-next/agds-next/packages/react/src/filter-drawer/docs/overview.mdx"},{"label":"Code","href":"/components/filter-drawer/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/filter-drawer/docs/code.mdx"}],"relatedComponents":null,"deprecated":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter drawer","href":"/components/filter-drawer"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Filter drawer"}],"toc":[],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isFilterDrawerOpen, openFilterDrawer, closeFilterDrawer] =\\n\\t\\tuseTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openFilterDrawer}>Open FilterDrawer</Button>\\n\\t\\t\\t<FilterDrawer\\n\\t\\t\\t\\tisOpen={isFilterDrawerOpen}\\n\\t\\t\\t\\tonDismiss={closeFilterDrawer}\\n\\t\\t\\t\\ttitle=\\\"Filter by\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeFilterDrawer}>Apply filters</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeFilterDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tReset filters\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeFilterDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">This is the FilterDrawer Body.</Text>\\n\\t\\t\\t</FilterDrawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The user can scroll through and interact with the vertical list of filter controls, which can include checkboxes, radio buttons, dropdowns, and text fields. The filters are applied when the user clicks the Apply button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the user opens the FilterDrawer, the main page is dimmed and the FilterDrawer appears on the right edge of the screen. The user cannot interact with the main page while the FilterDrawer is open. The FilterDrawer can be closed by clicking the Close button or by clicking outside the FilterDrawer.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use to allow a user to filter a data list or table\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a Button or Button group for actions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a Close button in the top right corner\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ensure the FilterDrawer closes when the action is completed.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"change the Button group order\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"remove the Close button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"change default behaviour\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use a FilterDrawer to explain why a user cannot continue in a flow - use PageAlert\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"embed forms in a FilterDrawer\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for error, success or loading messages.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Filter drawer","description":"Filter drawers are a type of modal which are used to apply several filters to a data set, without taking up a large area of the main page.","group":"Content","storybookPath":"/story/content-FilterDrawer--basic","figmaGalleryNodeId":"11981%3A101667"}},"relatedComponents":null},"__N_SSG":true}