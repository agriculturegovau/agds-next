import{j as a}from"./responsive-1d67a6a2.js";import"./Combobox-137b4b5f.js";import"./ComboboxMulti-7143082b.js";import{C as l}from"./ComboboxAsync-b5cdc439.js";import"./ComboboxAsyncMulti-f71f0c73.js";import"./ComboboxListItem-0acb222d.js";function t({emptyResultsMessage:e="No results found",...n}){return a(l,{...n,emptyResultsMessage:e,showDropdownTrigger:!1,clearable:!0})}try{t.displayName="Autocomplete",t.__docgenInfo={description:"",displayName:"Autocomplete",props:{id:{defaultValue:null,description:"Defines an identifier (ID) which must be unique.",name:"id",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value of the field.",name:"value",required:!1,type:{name:"DefaultComboboxOption | null"}},name:{defaultValue:null,description:"A string specifying a name for the input control.",name:"name",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Describes the purpose of the field.",name:"label",required:!0,type:{name:"string"}},maxWidth:{defaultValue:null,description:"The maximum width of the field.",name:"maxWidth",required:!1,type:{name:"enum",value:[{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},block:{defaultValue:null,description:"If true, the field will stretch to the fill the width of its container.",name:"block",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If true, the field will not be interactive.",name:"disabled",required:!1,type:{name:"boolean"}},onBlur:{defaultValue:null,description:"Function to be fired following a blur event.",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"Function to be fired following a focus event.",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}},hideOptionalLabel:{defaultValue:null,description:'If true, "(optional)" will never be appended to the label.',name:"hideOptionalLabel",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Function to be fired following a change event.",name:"onChange",required:!1,type:{name:"((value: Option | null) => void)"}},required:{defaultValue:null,description:'If false, "(optional)" will be appended to the label.',name:"required",required:!1,type:{name:"boolean"}},hint:{defaultValue:null,description:"Provides extra information about the field.",name:"hint",required:!1,type:{name:"string"}},message:{defaultValue:null,description:"Message to show when the field is invalid.",name:"message",required:!1,type:{name:"string"}},invalid:{defaultValue:null,description:"If true, the invalid state will be rendered.",name:"invalid",required:!1,type:{name:"boolean"}},inputRef:{defaultValue:null,description:"Ref to the input element.",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},loadOptions:{defaultValue:null,description:"Function to be used when options need to be loaded over the network.",name:"loadOptions",required:!0,type:{name:"(inputValue: string) => Promise<Option[]>"}},renderItem:{defaultValue:null,description:"Used to override the default item rendering.",name:"renderItem",required:!1,type:{name:"((item: Option, inputValue: string) => ReactNode)"}},emptyResultsMessage:{defaultValue:{value:"No results found"},description:"Message to display when no options match the users search term.",name:"emptyResultsMessage",required:!1,type:{name:"string"}},openDropdownOnFocus:{defaultValue:null,description:"@deprecated This prop is no longer being used. When true, the dropdown will open when the user focuses on the element",name:"openDropdownOnFocus",required:!1,type:{name:"boolean"}}}}}catch{}try{ComboboxRenderItem.displayName="ComboboxRenderItem",ComboboxRenderItem.__docgenInfo={description:"",displayName:"ComboboxRenderItem",props:{itemLabel:{defaultValue:null,description:"The label of the item.",name:"itemLabel",required:!0,type:{name:"string"}},inputValue:{defaultValue:null,description:"The value of the Combobox/Autocomplete text input.",name:"inputValue",required:!0,type:{name:"string"}},tertiaryText:{defaultValue:null,description:"Supporting text for the item.",name:"tertiaryText",required:!1,type:{name:"ReactNode"}},secondaryText:{defaultValue:null,description:"Supporting text for the item.",name:"secondaryText",required:!1,type:{name:"ReactNode"}},beforeElement:{defaultValue:null,description:"Used to add decorative elements to the end of the item such as Indicator dot or Notification badge.",name:"beforeElement",required:!1,type:{name:"ReactNode"}},endElement:{defaultValue:null,description:"Used to add decorative elements to the end of the item such as Indicator dot or Notification badge.",name:"endElement",required:!1,type:{name:"ReactNode"}}}}}catch{}export{t as A};
