import{a as _,j as c}from"./responsive-1d67a6a2.js";import{r as n}from"./index-42611d8b.js";import{u as O}from"./useTernaryState-6ea40a94.js";import{u as P}from"./useClickOutside-f1a14f0e.js";import{u as x,P as L}from"./Popover-7f6cfd9c.js";import{u as H}from"./Calendar-0f15ac31.js";import{f as S,t as v,D as j,p as B,c as N}from"./DatePickerInput-6534a915.js";const g=({value:l,onChange:o,onInputChange:s,minDate:r,maxDate:u,initialMonth:V,yearRange:q,inputRef:w,invalid:h=!1,maxWidth:D="md",...C})=>{const y=n.useRef(null),[i,I,a]=O(!1),k=i?a:I,d=x(),E=n.useCallback((t,e,p)=>{p.disabled||(f(S(e)),o(e),a())},[o,a]),[R,f]=n.useState(v(l)),F=t=>{const e=t.target.value;f(e);const p=B(e),m=N(p,r,u);if(!e||m){o(m);return}o(m),s==null||s(e)};n.useEffect(()=>{f(v(l))},[l]);const M=n.useCallback(()=>{i&&a()},[i,a]);P([d.popoverRef,y],M),n.useEffect(()=>{const t=e=>{i&&e.code==="Escape"&&(e.preventDefault(),e.stopPropagation(),a())};return window.addEventListener("keydown",t),()=>window.removeEventListener("keydown",t)},[i,a]);const T=n.useMemo(()=>{if(r||u)return[r?{before:r}:void 0,u?{after:u}:void 0].filter(t=>!!t)},[r,u]),b=typeof l=="string"?void 0:l;return _("div",{...d.getReferenceProps(),children:[c(j,{...C,maxWidth:D,invalid:{field:h,input:h},ref:w,value:R,onChange:F,buttonRef:y,buttonOnClick:k}),i&&c(L,{...d.getPopoverProps(),children:c(H,{initialFocus:!0,selected:b,onSelect:E,defaultMonth:b||V,yearRange:q,numberOfMonths:1,disabled:T})})]})};try{g.displayName="DatePicker",g.__docgenInfo={description:"",displayName:"DatePicker",props:{autoComplete:{defaultValue:null,description:"",name:"autoComplete",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}},label:{defaultValue:null,description:"Describes the purpose of the field.",name:"label",required:!0,type:{name:"string"}},hideOptionalLabel:{defaultValue:null,description:'If true, "(optional)" will never be appended to the label.',name:"hideOptionalLabel",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:'If false, "(optional)" will be appended to the label.',name:"required",required:!1,type:{name:"boolean"}},hint:{defaultValue:null,description:"Provides extra information about the field.",name:"hint",required:!1,type:{name:"string"}},message:{defaultValue:null,description:"Message to show when the field is invalid.",name:"message",required:!1,type:{name:"string"}},invalid:{defaultValue:{value:"false"},description:"If true, the invalid state will be rendered.",name:"invalid",required:!1,type:{name:"boolean"}},block:{defaultValue:null,description:"If true, the field will stretch to the fill the width of its container.",name:"block",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:{value:"md"},description:"The maximum width of the field.",name:"maxWidth",required:!1,type:{name:"enum",value:[{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},minDate:{defaultValue:null,description:"If set, any days before this date will not be selectable.",name:"minDate",required:!1,type:{name:"Date"}},maxDate:{defaultValue:null,description:"If set, any days after this date will not be selectable.",name:"maxDate",required:!1,type:{name:"Date"}},initialMonth:{defaultValue:null,description:"The calendar month to initially show if no value is set.",name:"initialMonth",required:!1,type:{name:"Date"}},yearRange:{defaultValue:null,description:"The range of options to display in calendar year select.",name:"yearRange",required:!1,type:{name:"{ from: number; to: number; }"}},value:{defaultValue:null,description:"The value of the field.",name:"value",required:!0,type:{name:"string | Date | undefined"}},onChange:{defaultValue:null,description:"Function to be fired following a change event.",name:"onChange",required:!0,type:{name:"(day: Date | undefined) => void"}},onInputChange:{defaultValue:null,description:"Function to be fired when the input value is updated.",name:"onInputChange",required:!1,type:{name:"((inputValue: string) => void)"}},inputRef:{defaultValue:null,description:"Ref to the input element.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement>"}}}}}catch{}export{g as D};
