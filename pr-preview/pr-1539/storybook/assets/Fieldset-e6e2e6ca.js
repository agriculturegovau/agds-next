import{j as i,h as r,a as y}from"./responsive-1d67a6a2.js";import{u as g}from"./useId-d335a68c.js";import{r as u}from"./index-42611d8b.js";import{T as m}from"./Text-d916011d.js";const a=({"aria-describedby":e,children:t,id:s})=>i("fieldset",{"aria-describedby":e,id:s,css:{padding:0,margin:0,border:"none"},children:t});try{a.displayName="FieldsetContainer",a.__docgenInfo={description:"",displayName:"FieldsetContainer",props:{"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}}}}}catch{}const n=({children:e})=>u.isValidElement(e)?i("legend",{children:e}):i(m,{as:"legend",fontWeight:"bold",fontSize:"lg",lineHeight:"heading",children:e});try{n.displayName="FieldsetLegend",n.__docgenInfo={description:"",displayName:"FieldsetLegend",props:{}}}catch{}const o=({children:e,id:t})=>u.isValidElement(e)?i("div",{id:t,css:{marginTop:r(.75)},children:e}):i(m,{fontSize:"sm",color:"muted",display:"block",css:{marginTop:r(.75)},id:t,children:e});try{o.displayName="FieldsetHint",o.__docgenInfo={description:"",displayName:"FieldsetHint",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}}}}}catch{}const l=({children:e})=>i("div",{css:{marginTop:r(2)},children:e});try{l.displayName="FieldsetContent",l.__docgenInfo={description:"",displayName:"FieldsetContent",props:{}}}catch{}const _=({children:e,hint:t,legend:s,id:d})=>{const{fieldsetId:f,hintId:p}=c(d);return y(a,{id:f,"aria-describedby":t?p:void 0,children:[i(n,{children:s}),t?i(o,{id:p,children:t}):null,i(l,{children:e})]})},c=e=>{const t=g(e),s=e||`fieldset-${t}`,d=`fieldset-${t}-hint`;return{fieldsetId:s,hintId:d}};try{_.displayName="Fieldset",_.__docgenInfo={description:"",displayName:"Fieldset",props:{hint:{defaultValue:null,description:"Provides extra information about the fieldset.",name:"hint",required:!1,type:{name:"ReactNode"}},legend:{defaultValue:null,description:"Describes the purpose of the group of fields.",name:"legend",required:!0,type:{name:"ReactNode"}},id:{defaultValue:null,description:"Defines an identifier (ID) which must be unique.",name:"id",required:!1,type:{name:"string"}}}}}catch{}try{c.displayName="useFieldsetIds",c.__docgenInfo={description:"",displayName:"useFieldsetIds",props:{}}}catch{}export{_ as F,a,l as b,o as c,n as d,c as u};
