{"pageProps":{"pkg":{"slug":"loading","name":"loading","version":"1.5.1","title":"Loading","description":"Loading indicators inform users their action is being processed.","storybookPath":"/story/content-loading-loadingblanket--basic","figmaGalleryNodeId":"11981%3A101666","subNavItems":[{"label":"Overview","href":"/components/loading","path":"/home/runner/work/agds-next/agds-next/packages/react/src/loading/docs/overview.mdx"},{"label":"Code","href":"/components/loading/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/loading/docs/code.mdx"}],"relatedComponents":["skeleton"],"deprecated":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"SectionAlert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Loading"}],"toc":[{"id":"loading-dots","title":"Loading Dots","level":2,"slug":"loading-dots","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Box height=\\\"300px\\\" width=\\\"100%\\\" border style={{ position: 'relative' }}>\\n\\t<LoadingBlanket label=\\\"Component loading state\\\" />\\n</Box>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"LoadingBlanket\"\n      }), \" component can be used indicate the loading state of a component or page.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default this component is positioned absolutely, so you will need to make sure your component container is positioned relatively.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Adding the \", _jsx(_components.code, {\n        children: \"fullScreen\"\n      }), \" prop will position the component over the whole screen. We recommend limiting the use of this pattern to certain use cases such as before or after a redirection.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<LoadingBlanket fullScreen label=\\\"Page loading state\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use for charts and components that are loading.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use full-screen blanket for partially loaded pages â€“ use patterns such as Skeleton.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Loading Dots\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"LoadingDots\"\n      }), \" component can be used on it's own, for example when fetching data from a remote source.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2} alignItems=\\\"center\\\">\\n\\t<LoadingDots size=\\\"sm\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n\\t<LoadingDots size=\\\"md\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n\\t<LoadingDots size=\\\"lg\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n</Stack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Loading","description":"Loading indicators inform users their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic","figmaGalleryNodeId":"11981%3A101666","relatedComponents":["skeleton"]}},"relatedComponents":[{"slug":"skeleton","name":"skeleton","version":"1.5.1","title":"Skeleton","description":"Skeletons are visual placeholders for information while data is still loading.","storybookPath":"/story/content-skeleton-skeletonheading--basic","figmaGalleryNodeId":"11981%3A101691","subNavItems":[{"label":"Overview","href":"/components/skeleton","path":"/home/runner/work/agds-next/agds-next/packages/react/src/skeleton/docs/overview.mdx"},{"label":"Code","href":"/components/skeleton/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/skeleton/docs/code.mdx"},{"label":"Accessibility","href":"/components/skeleton/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/skeleton/docs/accessibility.mdx"}],"relatedComponents":["loading"],"deprecated":false}]},"__N_SSG":true}