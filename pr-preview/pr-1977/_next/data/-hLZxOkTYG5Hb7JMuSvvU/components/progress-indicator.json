{"pageProps":{"pkg":{"slug":"progress-indicator","name":"progress-indicator","title":"Progress indicator","description":"Progress indicators show users the number of steps in a task, where they are up to in the process and how much is left to do.","storybookPath":"/story/forms-progressindicator--basic","figmaGalleryNodeId":"12444%3A100448","subNavItems":[{"label":"Overview","href":"/components/progress-indicator","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/overview.mdx"},{"label":"Rationale","href":"/components/progress-indicator/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/rationale.mdx"},{"label":"Content","href":"/components/progress-indicator/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/content.mdx"},{"label":"Code","href":"/components/progress-indicator/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/code.mdx"}],"relatedComponents":["task-list"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Progress indicator"}],"toc":[{"id":"background","title":"Background","level":2,"slug":"background","items":[]},{"id":"status","title":"Status","level":2,"slug":"status","items":[]},{"id":"currently-active-item","title":"Currently active item","level":2,"slug":"currently-active-item","items":[]},{"id":"hiding-the-sub-title","title":"Hiding the sub title","level":2,"slug":"hiding-the-sub-title","items":[]},{"id":"adding-level-2-steps","title":"Adding level 2 steps","level":2,"slug":"adding-level-2-steps","items":[{"id":"an-example-of-a-level-2-step","title":"An example of a level 2 step","level":3,"slug":"an-example-of-a-level-2-step","items":[]}]},{"id":"notes","title":"Notes","level":2,"slug":"notes","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, Table, TableCaption, TableHead, TableRow, TableHeader, TableBody, TableCell, ImageWithBorder} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!ImageWithBorder) _missingMdxReference(\"ImageWithBorder\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  if (!TableBody) _missingMdxReference(\"TableBody\", true);\n  if (!TableCaption) _missingMdxReference(\"TableCaption\", true);\n  if (!TableCell) _missingMdxReference(\"TableCell\", true);\n  if (!TableHead) _missingMdxReference(\"TableHead\", true);\n  if (!TableHeader) _missingMdxReference(\"TableHeader\", true);\n  if (!TableRow) _missingMdxReference(\"TableRow\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ProgressIndicator\\n\\tactivePath=\\\"#organisations\\\"\\n\\titems={[\\n\\t\\t{ label: 'Introduction', status: 'done', href: '#introduction' },\\n\\t\\t{ label: 'Submit evidence', status: 'saved', href: '#evidence' },\\n\\t\\t{ label: 'Organisations', status: 'started', href: '#organisations' },\\n\\t\\t{ label: 'Business contacts', status: 'error', href: '#contacts' },\\n\\t\\t{ label: 'Case studies', status: 'todo', href: '#case-studies' },\\n\\t\\t{ label: 'Attachments', status: 'started', href: '#attachments' },\\n\\t\\t{ label: 'Review and submit', status: 'blocked', href: '#review' },\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Progress indicators are used to help users navigate to each step of a multi-step form, show users how many steps are needed to complete a form and how far they have progressed through the process of completing it.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Progress indicators can be applied to larger tasks that can be completed in any order and returned to at a later date, like doing a tax return or applying for a driverâ€™s licence.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Progress indicators can be applied to multi-step forms if the form has a known number of steps to be completed. \", _jsx(\"sup\", {\n        children: _jsx(\"a\", {\n          href: \"#cite-1\",\n          children: \"1\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Avoid adding or removing pages to a multi-step form where a progress indicator is used as this can confuse and mislead users. Consider another approach if the number of steps might change due to user input. \", _jsx(\"sup\", {\n        children: _jsx(\"a\", {\n          href: \"#cite-2\",\n          children: \"2\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default, a Progress indicator contains links to each level 1 page of a multi-step form.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When a user navigates to a secondary action page from a level 1 page, a level 2 link is revealed in the Progress indicator to help a user understand where they have navigated to and how to return to the previous step.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"display steps in order from top to bottom\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"allow users to navigate to any step\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use in forms and multi-page processes\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for processes of 2 - 10 steps\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"always present the mobile menu closed by default\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use a \", _jsx(_components.a, {\n          href: \"/components/task-list\",\n          children: \"Task list\"\n        }), \" to guide users through processes with multiple progress managed forms\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ensure step names match H1s and truncate if long\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"frontload keywords\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"group related steps.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"dynamically or conditionally change the number of steps in a progress indicator list\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for fewer than 2 steps\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"disable steps - allow users to navigate to pages and use Page alerts to indicate a step is not available yet\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"have any other components in the left-hand column\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"add the step number to the text - list only the action the user needs to take\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"mix with other navigation patterns - for example, \", _jsx(_components.a, {\n          href: \"/components/side-nav\",\n          children: \"Side nav\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"change labels or icons\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"make progress indicators a sticky nav item as this may cause reading order issues.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Background\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The background of the Progress indicator must match the background it is being placed on.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the Progress indicator is placed on a \", _jsx(_components.code, {\n        children: \"bodyAlt\"\n      }), \" background, set the \", _jsx(_components.code, {\n        children: \"background\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"bodyAlt\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Status\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"status\"\n      }), \" prop can be used to indicate the status of each item. The following values are available:\"]\n    }), \"\\n\", _jsxs(Table, {\n      children: [_jsx(TableCaption, {\n        children: \"Available statuses for a Progress Indicator\"\n      }), _jsx(TableHead, {\n        children: _jsxs(TableRow, {\n          children: [_jsx(TableHeader, {\n            scope: \"col\",\n            children: \"Status\"\n          }), _jsx(TableHeader, {\n            scope: \"col\",\n            children: \"Label\"\n          }), _jsx(TableHeader, {\n            scope: \"col\",\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(TableBody, {\n        children: [_jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"todo\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Not started\"\n          }), _jsx(TableCell, {\n            children: \"This step is available for the user to start.\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"started\"\n            })\n          }), _jsx(TableCell, {\n            children: \"In progress\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"This step has been started and still needs to be completed.\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"done\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Completed\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"This step is complete. The user has submitted valid data and it has been\\nverified (where necessary).\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"blocked\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Cannot start yet\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"This step is not yet available for the user to start.\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"saved\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Saved\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"This step has valid saved data that can still be changed.\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"error\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Error\"\n          }), _jsx(TableCell, {\n            children: \"This step has an error that requires attention.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Currently active item\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To indicate the currently active level 1 or level 2 item, pass in a matching path to the \", _jsx(_components.code, {\n        children: \"activePath\"\n      }), \" prop, e.g. \", _jsx(_components.code, {\n        children: \"activePath=\\\"/organisations/change-name\\\"\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Hiding the sub title\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Progress indicator component displays a subtitle \\\"x of y steps completed\\\" by default. To hide this subtitle, set the \", _jsx(_components.code, {\n        children: \"hideSubtitle\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ProgressIndicator\\n\\tactivePath=\\\"#organisations\\\"\\n\\thideSubtitle\\n\\titems={[\\n\\t\\t{ href: '#introduction', label: 'Introduction', status: 'done' },\\n\\t\\t{ href: '#organisations', label: 'Organisations', status: 'started' },\\n\\t\\t{\\n\\t\\t\\thref: '#contacts',\\n\\t\\t\\tlabel: 'Business contacts',\\n\\t\\t\\tstatus: 'started',\\n\\t\\t},\\n\\t\\t{ href: '#case-studies', label: 'Case studies', status: 'todo' },\\n\\t\\t{ href: '#attachments', label: 'Attachments', status: 'blocked' },\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Adding level 2 steps\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If a level 1 page has a secondary step, such as editing its content, use a separate page for this secondary step.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When users navigate to this secondary step, let them know where they are by adding a level 2 step \", _jsx(_components.code, {\n        children: \"item\"\n      }), \". Only one level 2 step may exist for each level 1 step.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ProgressIndicator\\n\\tactivePath=\\\"#organisations/add-organisation\\\"\\n\\titems={[\\n\\t\\t{ href: '#introduction', label: 'Introduction', status: 'done' },\\n\\t\\t{\\n\\t\\t\\thref: '#organisations',\\n\\t\\t\\tlabel: 'Organisations',\\n\\t\\t\\tstatus: 'started',\\n\\t\\t\\titems: [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tlabel: 'Add an organisation',\\n\\t\\t\\t\\t\\thref: '#organisations/add-organisation',\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t},\\n\\t\\t{ href: '#review', label: 'Review and submit', status: 'blocked' },\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"An example of a level 2 step\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default, Progress indicators contain level 1 links to each page of a multi-step form. When additional pages are required for secondary actions under level 1 pages, level 2 links are revealed in the Progress indicator to help a user understand where they have navigated to and how to return to the previous step.\"\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/progress-indicator-level-two--1.png\",\n      alt: \"\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The level 2 step is a separate page, so it is displayed under the main level 1 step in the progress indicator. This helps the user understand where they are in the process.\"\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/progress-indicator-level-two--2.png\",\n      alt: \"\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once the user saves their changes, theyâ€™re taken back to the main step page and a section alert is displayed to let them know that their changes were made successfully. The level 2 step is no longer displayed in the Progress indicator; itâ€™s only displayed when the user is on the level 2 step page.\"\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      src: \"/img/progress-indicator-level-two--3.png\",\n      alt: \"\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Notes\"\n    }), \"\\n\", _jsxs(\"ol\", {\n      children: [_jsx(\"li\", {\n        id: \"cite-1\",\n        children: _jsx(\"a\", {\n          href: \"https://www.w3.org/WAI/tutorials/forms/multi-page/#using-step-by-step-indicator\",\n          children: _jsx(_components.p, {\n            children: \"W3C Multi-page Forms\"\n          })\n        })\n      }), _jsx(\"li\", {\n        id: \"cite-2\",\n        children: _jsx(\"a\", {\n          href: \"https://designsystem.digital.gov/components/step-indicator\",\n          children: _jsx(_components.p, {\n            children: \"U.S. Web Design System (USWDS) Step indicator\"\n          })\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Progress indicator","description":"Progress indicators show users the number of steps in a task, where they are up to in the process and how much is left to do.","group":"Forms","storybookPath":"/story/forms-progressindicator--basic","figmaGalleryNodeId":"12444%3A100448","relatedComponents":["task-list"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"task-list","name":"task-list","title":"Task list","description":"Task list is a navigation tool that show users what input is required to complete a task or transaction.","storybookPath":"/story/forms-tasklist--unordered","figmaGalleryNodeId":"12444%3A100628","subNavItems":[{"label":"Overview","href":"/components/task-list","path":"/home/runner/work/agds-next/agds-next/packages/react/src/task-list/docs/overview.mdx"},{"label":"Code","href":"/components/task-list/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/task-list/docs/code.mdx"}],"relatedComponents":["progress-indicator"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}