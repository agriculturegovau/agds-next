{"pageProps":{"pkg":{"slug":"dropdown-menu","name":"dropdown-menu","title":"Dropdown menu","description":"A dropdown menu displays a list of actions when a trigger is pressed.","storybookPath":"/story/layout-dropdownmenu--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/dropdown-menu","path":"/home/runner/work/agds-next/agds-next/packages/react/src/dropdown-menu/docs/overview.mdx"},{"label":"Code","href":"/components/dropdown-menu/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/dropdown-menu/docs/code.mdx"},{"label":"Accessibility","href":"/components/dropdown-menu/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/react/src/dropdown-menu/docs/accessibility.mdx"}],"relatedComponents":["combobox","select"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Dropdown menu"}],"toc":[{"id":"triggers","title":"Triggers","level":2,"slug":"triggers","items":[]},{"id":"placement","title":"Placement","level":2,"slug":"placement","items":[]},{"id":"text-only","title":"Text only","level":2,"slug":"text-only","items":[]},{"id":"icons-and-badges","title":"Icons and badges","level":2,"slug":"icons-and-badges","items":[]},{"id":"divider","title":"Divider","level":2,"slug":"divider","items":[]},{"id":"grouping","title":"Grouping","level":2,"slug":"grouping","items":[]},{"id":"radio-groups","title":"Radio groups","level":2,"slug":"radio-groups","items":[]},{"id":"overflow","title":"Overflow","level":2,"slug":"overflow","items":[]},{"id":"offset","title":"Offset","level":2,"slug":"offset","items":[]},{"id":"accessing-state","title":"Accessing state","level":2,"slug":"accessing-state","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Profile')}>\\n\\t\\t\\tProfile\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Messages')}>\\n\\t\\t\\tMessages\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Account settings')}>\\n\\t\\t\\tAccount settings\\n\\t\\t</DropdownMenuItem>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A dropdown menu displays a list of actions when triggered by a \", _jsx(_components.code, {\n        children: \"DropdownMenuButton\"\n      }), \". Dropdown menus float on top of the content they sit on. Consider using them when there isn’t sufficient space to display actions.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Dropdown menus pose multiple usability problems which you should consider before using them:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"since the actions in a dropdown menu are hidden by default, they could be missed.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"dropdown menus can increase cognitive load, as users need to recall what the actions were. This can be especially problematic for users with cognitive impairments.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"due to their fiddly nature, some users can struggle to use dropdown menus. Elderly people and people with motor impairments, in particular, often have difficulty using dropdown menus.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ensure that actions in the dropdown can be accessed elsewhere on the same page, as some users won’t be able to access them via the dropdown menu\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"only use a dropdown menu if there’s insufficient space to display actions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"trigger a dropdown menu on click of an element\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"keep the dropdown menu open until a user has made a selection or clicked outside the menu\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"organise actions in a logical way\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"consider listing actions in alphabetical order by default\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"group related actions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"consider setting a maximum height when there are 10 or more actions.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use a dropdown menu if there’s space to display actions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"trigger a dropdown menu on hover of an element, ensure it’s triggered on click\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use in the \", _jsx(_components.a, {\n          href: \"/components/main-nav\",\n          children: \"Main nav\"\n        }), \" or other nav components\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use a dropdown menu in a form where users need to select a single option - use a \", _jsx(_components.a, {\n          href: \"/components/select\",\n          children: \"Select\"\n        }), \" component instead.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Triggers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dropdown menus can be triggered by a \", _jsx(_components.code, {\n        children: \"DropdownMenuButton\"\n      }), \", which can accept all of the same props as \", _jsx(_components.a, {\n        href: \"/components/button\",\n        children: \"Button\"\n      }), \". This gives you flexibility in what your trigger looks like.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={1}>\\n\\t{['md', 'sm'].map((size) => (\\n\\t\\t<ButtonGroup key={size}>\\n\\t\\t\\t{['primary', 'secondary', 'tertiary', 'text'].map((variant) => (\\n\\t\\t\\t\\t<DropdownMenu key={variant}>\\n\\t\\t\\t\\t\\t<DropdownMenuButton variant={variant} size={size}>\\n\\t\\t\\t\\t\\t\\tActions\\n\\t\\t\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Item A</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Item B</DropdownMenuItem>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuItem>Item C</DropdownMenuItem>\\n\\t\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t))}\\n\\t\\t</ButtonGroup>\\n\\t))}\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Placement\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default the dropdown menu is aligned to the bottom left (\", _jsx(_components.code, {\n        children: \"bottom-start\"\n      }), \") of the \", _jsx(_components.code, {\n        children: \"DropdownMenuButton\"\n      }), \" when opened. It can alternatively be aligned to the bottom right (\", _jsx(_components.code, {\n        children: \"bottom-end\"\n      }), \") or the bottom (\", _jsx(_components.code, {\n        children: \"bottom\"\n      }), \"). If there’s not enough space in the browser window to align the menu on the left, the dropdown menu will automatically be aligned to the right to help ensure it fits on the screen.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2} alignItems=\\\"center\\\">\\n\\t{['bottom-start', 'bottom-end', 'bottom'].map((size) => (\\n\\t\\t<DropdownMenu key={size} popoverPlacement={size}>\\n\\t\\t\\t<DropdownMenuButton>{size}</DropdownMenuButton>\\n\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t<DropdownMenuItem>Profile</DropdownMenuItem>\\n\\t\\t\\t\\t<DropdownMenuItem>Messages</DropdownMenuItem>\\n\\t\\t\\t\\t<DropdownMenuItem>Account settings</DropdownMenuItem>\\n\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t</DropdownMenu>\\n\\t))}\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Text only\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The simplest dropdown menu contains text only list items. Use \", _jsx(_components.code, {\n        children: \"DropdownMenuItem\"\n      }), \" to perform on-page actions and \", _jsx(_components.code, {\n        children: \"DropdownMenuItemLink\"\n      }), \" to link to separate pages.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Profile')}>\\n\\t\\t\\tProfile\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Messages')}>\\n\\t\\t\\tMessages\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItemLink href=\\\"#\\\">\\n\\t\\t\\tAccount settings\\n\\t\\t</DropdownMenuItem>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you’re opening links in a new tab, we recommend you use the \", _jsx(_components.code, {\n        children: \"ExternalLinkIcon\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuItemLink href=\\\"#link-1\\\">Link 1</DropdownMenuItemLink>\\n\\t\\t<DropdownMenuItemLink href=\\\"#link-2\\\">Link 2</DropdownMenuItemLink>\\n\\t\\t<DropdownMenuItemLink\\n\\t\\t\\thref=\\\"https://www.agriculture.gov.au\\\"\\n\\t\\t\\ttarget=\\\"_blank\\\"\\n\\t\\t\\ticon={ExternalLinkIcon}\\n\\t\\t>\\n\\t\\t\\tExternal link\\n\\t\\t</DropdownMenuItemLink>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Icons and badges\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Icons can be added to list items to help users recognise actions more quickly. Use the icon prop to add an \", _jsx(_components.a, {\n        href: \"/components/icon\",\n        children: \"Icon\"\n      }), \" to the beginning of list items.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"endElement\"\n      }), \" prop to add elements such as an \", _jsx(_components.a, {\n        href: \"/components/indicator-dot\",\n        children: \"Indicator dot\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/components/notification-badge\",\n        children: \"Notification badge\"\n      }), \" to the end of list items.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuItem icon={AvatarIcon}>Profile</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem\\n\\t\\t\\ticon={EmailIcon}\\n\\t\\t\\tendElement={\\n\\t\\t\\t\\t<React.Fragment>\\n\\t\\t\\t\\t\\t<NotificationBadge value={100} max={99} tone=\\\"action\\\" aria-hidden />\\n\\t\\t\\t\\t\\t<VisuallyHidden>, 99+ unread</VisuallyHidden>\\n\\t\\t\\t\\t</React.Fragment>\\n\\t\\t\\t}\\n\\t\\t>\\n\\t\\t\\tMessages\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem icon={SettingsIcon}>Account settings</DropdownMenuItem>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Divider\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use a \", _jsx(_components.code, {\n        children: \"DropdownMenuDivider\"\n      }), \" to separate destructive actions at the bottom of the list. This helps ensure they’re less likely to be actioned by mistake.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuItem icon={AvatarIcon}>Profile</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem\\n\\t\\t\\ticon={EmailIcon}\\n\\t\\t\\tendElement={\\n\\t\\t\\t\\t<React.Fragment>\\n\\t\\t\\t\\t\\t<NotificationBadge value={100} max={99} tone=\\\"action\\\" aria-hidden />\\n\\t\\t\\t\\t\\t<VisuallyHidden>, 99+ unread</VisuallyHidden>\\n\\t\\t\\t\\t</React.Fragment>\\n\\t\\t\\t}\\n\\t\\t>\\n\\t\\t\\tMessages\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem icon={SettingsIcon}>Account settings</DropdownMenuItem>\\n\\t\\t<DropdownMenuDivider />\\n\\t\\t<DropdownMenuItem icon={ExitIcon}>Sign out</DropdownMenuItem>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Grouping\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider grouping long lists of items under headings to help decrease cognitive load. Each group should be separated by a \", _jsx(_components.code, {\n        children: \"DropdownMenuDivider\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"DropdownMenuGroup\"\n      }), \" component to group related items. Use the label prop to describe the group.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuGroup label=\\\"Services\\\">\\n\\t\\t\\t<DropdownMenuItem icon={PrintIcon}>Print online</DropdownMenuItem>\\n\\t\\t\\t<DropdownMenuItem icon={CalendarIcon}>Scheduler</DropdownMenuItem>\\n\\t\\t</DropdownMenuGroup>\\n\\t\\t<DropdownMenuDivider />\\n\\t\\t<DropdownMenuGroup label=\\\"Account\\\">\\n\\t\\t\\t<DropdownMenuItem icon={AvatarIcon}>Profile</DropdownMenuItem>\\n\\t\\t\\t<DropdownMenuItem\\n\\t\\t\\t\\ticon={EmailIcon}\\n\\t\\t\\t\\tendElement={\\n\\t\\t\\t\\t\\t<React.Fragment>\\n\\t\\t\\t\\t\\t\\t<NotificationBadge value={100} max={99} tone=\\\"action\\\" aria-hidden />\\n\\t\\t\\t\\t\\t\\t<VisuallyHidden>, 99+ unread</VisuallyHidden>\\n\\t\\t\\t\\t\\t</React.Fragment>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\tMessages\\n\\t\\t\\t</DropdownMenuItem>\\n\\t\\t\\t<DropdownMenuItem icon={SettingsIcon}>Account settings</DropdownMenuItem>\\n\\t\\t</DropdownMenuGroup>\\n\\t\\t<DropdownMenuDivider />\\n\\t\\t<DropdownMenuItem icon={ExitIcon}>Sign out</DropdownMenuItem>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Radio groups\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"DropdownMenuGroup\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"DropdownMenuRadioItem\"\n      }), \" components to create a list of options that users can switch between. Only 1 item can be selected at a time, similar to a list of Radios.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"DropdownMenuGroupLink\"\n      }), \" component to add a link to the bottom of the Radio group.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [selectedItem, setSelectedItem] = React.useState('');\\n\\treturn (\\n\\t\\t<Stack gap={2} alignItems=\\\"flex-start\\\">\\n\\t\\t\\t<DropdownMenu>\\n\\t\\t\\t\\t<DropdownMenuButton>Toggle dropdown menu</DropdownMenuButton>\\n\\t\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t\\t<DropdownMenuGroup label=\\\"Businesses\\\">\\n\\t\\t\\t\\t\\t\\t<DropdownMenuItemRadio\\n\\t\\t\\t\\t\\t\\t\\tchecked={selectedItem === 'Antfix'}\\n\\t\\t\\t\\t\\t\\t\\tonClick={() => setSelectedItem('Antfix')}\\n\\t\\t\\t\\t\\t\\t\\tsecondaryText=\\\"Sydney\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tAntfix\\n\\t\\t\\t\\t\\t\\t</DropdownMenuItemRadio>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuItemRadio\\n\\t\\t\\t\\t\\t\\t\\tchecked={selectedItem === 'Produce Fresh'}\\n\\t\\t\\t\\t\\t\\t\\tonClick={() => setSelectedItem('Produce Fresh')}\\n\\t\\t\\t\\t\\t\\t\\tsecondaryText=\\\"Brisbane\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tProduce Fresh\\n\\t\\t\\t\\t\\t\\t</DropdownMenuItemRadio>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuItemRadio\\n\\t\\t\\t\\t\\t\\t\\tchecked={selectedItem === 'Organic Co'}\\n\\t\\t\\t\\t\\t\\t\\tonClick={() => setSelectedItem('Organic Co')}\\n\\t\\t\\t\\t\\t\\t\\tsecondaryText=\\\"Canberra\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tOrganic Co\\n\\t\\t\\t\\t\\t\\t</DropdownMenuItemRadio>\\n\\t\\t\\t\\t\\t\\t<DropdownMenuGroupLink href=\\\"#\\\">View all</DropdownMenuGroupLink>\\n\\t\\t\\t\\t\\t</DropdownMenuGroup>\\n\\t\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t\\t</DropdownMenu>\\n\\t\\t\\t<Text>\\n\\t\\t\\t\\tCurrently selected: {selectedItem ? selectedItem : 'Unselected'}\\n\\t\\t\\t</Text>\\n\\t\\t</Stack>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Overflow\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For dropdown menus with many items, consider setting a maximum height using the \", _jsx(_components.code, {\n        children: \"maxHeight\"\n      }), \" prop. This will make the actions in the dropdown menu scrollable. If the height of the actions list is taller than the screen height, the dropdown menu will automatically resize to ensure that it fits on the screen.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2} alignItems=\\\"flex-start\\\">\\n\\t<DropdownMenu>\\n\\t\\t<DropdownMenuButton>\\n\\t\\t\\tToggle dropdown menu (without max height)\\n\\t\\t</DropdownMenuButton>\\n\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t{Array.from(Array(20).keys()).map((i) => (\\n\\t\\t\\t\\t<DropdownMenuItem key={i}>Item {i + 1}</DropdownMenuItem>\\n\\t\\t\\t))}\\n\\t\\t</DropdownMenuPanel>\\n\\t</DropdownMenu>\\n\\t<DropdownMenu popoverMaxHeight={288}>\\n\\t\\t<DropdownMenuButton>\\n\\t\\t\\tToggle dropdown menu (with max height)\\n\\t\\t</DropdownMenuButton>\\n\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t{Array.from(Array(20).keys()).map((i) => (\\n\\t\\t\\t\\t<DropdownMenuItem key={i}>Item {i + 1}</DropdownMenuItem>\\n\\t\\t\\t))}\\n\\t\\t</DropdownMenuPanel>\\n\\t</DropdownMenu>\\n</Stack>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Offset\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"popoverOffset\"\n      }), \" prop to control the vertical distance between the button and panel. This value needs to be specified in pixels\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu popoverOffset={-8}>\\n\\t<DropdownMenuButton variant=\\\"primary\\\">\\n\\t\\tToggle dropdown menu\\n\\t</DropdownMenuButton>\\n\\t<DropdownMenuPanel>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Profile')}>\\n\\t\\t\\tProfile\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Messages')}>\\n\\t\\t\\tMessages\\n\\t\\t</DropdownMenuItem>\\n\\t\\t<DropdownMenuItem onClick={() => console.log('Account settings')}>\\n\\t\\t\\tAccount settings\\n\\t\\t</DropdownMenuItem>\\n\\t</DropdownMenuPanel>\\n</DropdownMenu>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessing state\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to access the internal state of the menu, you can provide a render callback to \", _jsx(_components.code, {\n        children: \"DropdownMenu\"\n      }), \". This is useful if you want to change the appearance of the dropdown menu button based on whether the dropdown menu is opened or closed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<DropdownMenu>\\n\\t{({ isMenuOpen }) => (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<DropdownMenuButton\\n\\t\\t\\t\\ticonAfter={isMenuOpen ? ChevronUpIcon : ChevronDownIcon}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{isMenuOpen ? 'Close dropdown menu' : 'Open dropdown menu'}\\n\\t\\t\\t</DropdownMenuButton>\\n\\t\\t\\t<DropdownMenuPanel>\\n\\t\\t\\t\\t<DropdownMenuItem>Profile</DropdownMenuItem>\\n\\t\\t\\t\\t<DropdownMenuItem>Messages</DropdownMenuItem>\\n\\t\\t\\t\\t<DropdownMenuItem>Account settings</DropdownMenuItem>\\n\\t\\t\\t</DropdownMenuPanel>\\n\\t\\t</React.Fragment>\\n\\t)}\\n</DropdownMenu>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Dropdown menu","description":"A dropdown menu displays a list of actions when a trigger is pressed.","group":"Layout","storybookPath":"/story/layout-dropdownmenu--basic","relatedComponents":["combobox","select"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"combobox","name":"combobox","title":"Combobox","description":"This component allows users to select from a list of options. It’s especially useful when there are many options to choose from.","storybookPath":"/story/forms-combobox-combobox--basic","figmaGalleryNodeId":"12925%3A104632","subNavItems":[{"label":"Overview","href":"/components/combobox","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/overview.mdx"},{"label":"Code","href":"/components/combobox/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/combobox/docs/code.mdx"}],"relatedComponents":["autocomplete","dropdown-menu","select","text-input"],"relatedPatterns":["selecting-multiple-options"],"deprecated":false,"unreleased":false},{"slug":"select","name":"select","title":"Select","description":"Select provides a way for users to choose one item from a collapsible list. It helps reduce input errors and screen space.","storybookPath":"/story/forms-select--basic","figmaGalleryNodeId":"12444%3A100538","subNavItems":[{"label":"Overview","href":"/components/select","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/overview.mdx"},{"label":"Code","href":"/components/select/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/select/docs/code.mdx"}],"relatedComponents":["combobox","dropdown-menu"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}