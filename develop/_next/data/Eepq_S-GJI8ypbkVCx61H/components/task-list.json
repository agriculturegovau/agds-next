{"pageProps":{"pkg":{"slug":"task-list","name":"task-list","title":"Task list","description":"Task list is a navigation tool that show users what input is required to complete a task or transaction.","storybookPath":"/story/forms-tasklist--unordered","figmaGalleryNodeId":"12444%3A100628","subNavItems":[{"label":"Overview","href":"/components/task-list","path":"/home/runner/work/agds-next/agds-next/packages/react/src/task-list/docs/overview.mdx"},{"label":"Code","href":"/components/task-list/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/task-list/docs/code.mdx"}],"relatedComponents":["progress-indicator"],"relatedPatterns":null,"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Task list"}],"toc":[{"id":"task-status","title":"Task status","level":2,"slug":"task-status","items":[]},{"id":"sequential","title":"Sequential","level":2,"slug":"sequential","items":[]},{"id":"recently-completed","title":"Recently completed","level":2,"slug":"recently-completed","items":[]},{"id":"buttons","title":"Buttons","level":2,"slug":"buttons","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, Table, TableCaption, TableHead, TableRow, TableHeader, TableBody, TableCell} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  if (!TableBody) _missingMdxReference(\"TableBody\", true);\n  if (!TableCaption) _missingMdxReference(\"TableCaption\", true);\n  if (!TableCell) _missingMdxReference(\"TableCell\", true);\n  if (!TableHead) _missingMdxReference(\"TableHead\", true);\n  if (!TableHeader) _missingMdxReference(\"TableHeader\", true);\n  if (!TableRow) _missingMdxReference(\"TableRow\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'doing',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Personal details',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'notRequired',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tmessage: 'Not available until previous tasks are done',\\n\\t\\t\\tstatus: 'blocked',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use only for longer transactions involving multiple tasks that may take several sessions to complete\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"show at the start of the transaction and when the user resumes the session\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"categorise tasks into logical sections\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"show task status\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"show the order in which tasks should be completed\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"indicate if step is optional\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use for single page forms\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Task status\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can indicate the status of each task using the \", _jsx(_components.code, {\n        children: \"status\"\n      }), \" parameter. The following values are available:\"]\n    }), \"\\n\", _jsxs(Table, {\n      children: [_jsx(TableCaption, {\n        children: \"Available statuses for a TaskList\"\n      }), _jsx(TableHead, {\n        children: _jsxs(TableRow, {\n          children: [_jsx(TableHeader, {\n            scope: \"col\",\n            children: \"Status\"\n          }), _jsx(TableHeader, {\n            scope: \"col\",\n            children: \"Label\"\n          }), _jsx(TableHeader, {\n            scope: \"col\",\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(TableBody, {\n        children: [_jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"todo\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Not started\"\n          }), _jsx(TableCell, {\n            children: \"The task is available for the user to do\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"doing\"\n            })\n          }), _jsx(TableCell, {\n            children: \"In progress\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"The task has been started, and is ready for the user to continue.\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"done\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Completed\"\n          }), _jsx(TableCell, {\n            children: \"The task has been completed\"\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"doneRecently\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Completed\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"The task has just been completed recently, so it shows a green highlight\\nto indicate activity.\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"blocked\"\n            })\n          }), _jsx(TableCell, {\n            children: \"Cannot start yet\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"The task cannot be completed until other tasks have been.\"\n            })\n          })]\n        }), _jsxs(TableRow, {\n          children: [_jsx(TableCell, {\n            children: _jsx(\"code\", {\n              children: \"notRequired\"\n            })\n          }), _jsx(TableCell, {\n            children: \"No longer required\"\n          }), _jsx(TableCell, {\n            children: _jsx(_components.p, {\n              children: \"The task is no longer required based on your selection criteria.\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Sequential\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the list of tasks must be completed in order, you can set the \", _jsx(_components.code, {\n        children: \"ordered\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\tordered={true}\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Personal details',\\n\\t\\t\\tstatus: 'doing',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tmessage: 'Not available until previous tasks are done',\\n\\t\\t\\tstatus: 'blocked',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Recently completed\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the user has just completed a task, and then navigated back to the TaskList screen, you can highlight that the task is completed by setting the status of the item to \", _jsx(_components.code, {\n        children: \"doneRecently\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This should be a temporary state, and should be removed after a short period of time.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Personal details',\\n\\t\\t\\tstatus: 'doneRecently',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tmessage: 'Not available until previous tasks are done',\\n\\t\\t\\tstatus: 'blocked',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If an item does not specify an \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" attribute a \", _jsx(_components.code, {\n        children: \"button\"\n      }), \" element will be rendered. This enables you to respond to various mouse events, such as \", _jsx(_components.code, {\n        children: \"onClick\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Personal details',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'doing',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tmessage: 'Not available until previous tasks are done',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Task list","description":"Task list is a navigation tool that show users what input is required to complete a task or transaction.","group":"Forms","storybookPath":"/story/forms-tasklist--unordered","figmaGalleryNodeId":"12444%3A100628","relatedComponents":["progress-indicator"]}},"relatedPatterns":null,"relatedComponents":[{"slug":"progress-indicator","name":"progress-indicator","title":"Progress indicator","description":"Progress indicators show users the number of steps in a task, where they are up to in the process and how much is left to do.","storybookPath":"/story/forms-progressindicator--basic","figmaGalleryNodeId":"12444%3A100448","subNavItems":[{"label":"Overview","href":"/components/progress-indicator","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/overview.mdx"},{"label":"Rationale","href":"/components/progress-indicator/rationale","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/rationale.mdx"},{"label":"Content","href":"/components/progress-indicator/content","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/content.mdx"},{"label":"Code","href":"/components/progress-indicator/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/progress-indicator/docs/code.mdx"}],"relatedComponents":["task-list"],"relatedPatterns":null,"deprecated":false,"unreleased":false}]},"__N_SSG":true}