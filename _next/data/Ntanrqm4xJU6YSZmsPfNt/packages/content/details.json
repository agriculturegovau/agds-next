{"pageProps":{"pkg":{"slug":"details","source":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var p=(e,t,a)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,i=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&p(e,a,t[a]);if(l)for(var a of l(t))o.call(t,a)&&p(e,a,t[a]);return e},r=(e,t)=>u(e,h(t));var c=(e,t)=>{var a={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&l)for(var n of l(e))t.indexOf(n)<0&&o.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,t=c(n,[\"components\"]);return mdx(MDXLayout,r(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,'Information is visible only when the widget is toggled into an \"open\" state. Unlike Accordion, inner content is surfacable in a page search (cmd/ctrl-f).'),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Details, {\\\\n    label: \\\\\"Details\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\"\\\\n  }, \\\\\"This is a small paragraph of text that is supplementary to the main page content.\\\\\"));\\\\n}\",\"globals\":[\"Details\",\"Text\"],\"exampleType\":\"jsx\"}'}),`<Details label=\"Details\">\n    <Text as=\"p\">\n        This is a small paragraph of text that is supplementary to the main page\n        content.\n    </Text>\n</Details>\n`)),mdx(\"h2\",null,\"With icon\"),mdx(\"p\",null,\"Setting the \",mdx(\"inlineCode\",{parentName:\"p\"},\"iconBefore\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\" will render the \",mdx(\"inlineCode\",{parentName:\"p\"},\"InfoIcon\"),\" before the label.\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Details, {\\\\n    label: \\\\\"Details\\\\\",\\\\n    iconBefore: true\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\"\\\\n  }, \\\\\"This is a small paragraph of text that is supplementary to the main page content.\\\\\"));\\\\n}\",\"globals\":[\"Details\",\"Text\"],\"exampleType\":\"jsx\"}'}),`<Details label=\"Details\" iconBefore>\n    <Text as=\"p\">\n        This is a small paragraph of text that is supplementary to the main page\n        content.\n    </Text>\n</Details>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Details","description":"A disclosure widget for supplimental information that explains a component, section or flow.","group":"Content","storybookPath":"/story/content-details--basic"}},"data":{"title":"Details","description":"A disclosure widget for supplimental information that explains a component, section or flow.","group":"Content","storybookPath":"/story/content-details--basic"},"name":"@ag.ds-next/details","version":"1.0.0","title":"Details","storybookPath":"/story/content-details--basic","subNavItems":[{"label":"Overview","href":"/packages/content/details","path":"/home/runner/work/agds-next/agds-next/packages/details/docs/overview.mdx"},{"label":"Code","href":"/packages/content/details/code","path":"/home/runner/work/agds-next/agds-next/packages/details/docs/code.mdx"}]},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content","items":[{"label":"Badge","href":"/packages/content/badge"},{"label":"Callout","href":"/packages/content/callout"},{"label":"Details","href":"/packages/content/details"},{"label":"Heading","href":"/packages/content/heading"},{"label":"Keyword List","href":"/packages/content/keyword-list"},{"label":"Loading","href":"/packages/content/loading"},{"label":"Modal","href":"/packages/content/modal"},{"label":"Page Alert","href":"/packages/content/page-alert"},{"label":"Prose","href":"/packages/content/prose"},{"label":"Skeleton","href":"/packages/content/skeleton"},{"label":"Summary List","href":"/packages/content/summary-list"},{"label":"Table","href":"/packages/content/table"},{"label":"Tags","href":"/packages/content/tags"}]},{"label":"Forms","href":"/packages/forms"},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/packages","label":"Packages"},{"href":"/packages/content","label":"Content"},{"label":"Details"}],"content":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var p=(e,t,a)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,i=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&p(e,a,t[a]);if(l)for(var a of l(t))o.call(t,a)&&p(e,a,t[a]);return e},r=(e,t)=>u(e,h(t));var c=(e,t)=>{var a={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&l)for(var n of l(e))t.indexOf(n)<0&&o.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,t=c(n,[\"components\"]);return mdx(MDXLayout,r(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,'Information is visible only when the widget is toggled into an \"open\" state. Unlike Accordion, inner content is surfacable in a page search (cmd/ctrl-f).'),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Details, {\\\\n    label: \\\\\"Details\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\"\\\\n  }, \\\\\"This is a small paragraph of text that is supplementary to the main page content.\\\\\"));\\\\n}\",\"globals\":[\"Details\",\"Text\"],\"exampleType\":\"jsx\"}'}),`<Details label=\"Details\">\n    <Text as=\"p\">\n        This is a small paragraph of text that is supplementary to the main page\n        content.\n    </Text>\n</Details>\n`)),mdx(\"h2\",null,\"With icon\"),mdx(\"p\",null,\"Setting the \",mdx(\"inlineCode\",{parentName:\"p\"},\"iconBefore\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\" will render the \",mdx(\"inlineCode\",{parentName:\"p\"},\"InfoIcon\"),\" before the label.\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Details, {\\\\n    label: \\\\\"Details\\\\\",\\\\n    iconBefore: true\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\"\\\\n  }, \\\\\"This is a small paragraph of text that is supplementary to the main page content.\\\\\"));\\\\n}\",\"globals\":[\"Details\",\"Text\"],\"exampleType\":\"jsx\"}'}),`<Details label=\"Details\" iconBefore>\n    <Text as=\"p\">\n        This is a small paragraph of text that is supplementary to the main page\n        content.\n    </Text>\n</Details>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Details","description":"A disclosure widget for supplimental information that explains a component, section or flow.","group":"Content","storybookPath":"/story/content-details--basic"}}},"__N_SSG":true}