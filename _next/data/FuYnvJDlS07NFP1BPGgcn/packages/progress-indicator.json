{"pageProps":{"pkg":{"slug":"progress-indicator","source":{"compiledSource":"var c=Object.defineProperty,p=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var r=(e,n,t)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,a=(e,n)=>{for(var t in n||(n={}))i.call(n,t)&&r(e,t,n[t]);if(s)for(var t of s(n))l.call(n,t)&&r(e,t,n[t]);return e},d=(e,n)=>p(e,m(n));var u=(e,n)=>{var t={};for(var o in e)i.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&s)for(var o of s(e))n.indexOf(o)<0&&l.call(e,o)&&(t[o]=e[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,n=u(o,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Our design system provides a progress indicator for larger tasks that can be completed out of order and returned to at a later date, like doing a tax return or applying for a driver\\u2019s licence.\"),mdx(\"p\",null,\"The individual tasks or steps are shown as either:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"todo\"),\" \\u2013 the task is available for the user to do\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"doing\"),\" \\u2013 the task has been started\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"done\"),\" \\u2013 the task has been completed\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ProgressIndicator, {\\\\n    items: [{\\\\n      href: '#',\\\\n      label: 'Introduction',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Business Contacts',\\\\n      status: 'doing'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"ProgressIndicator\"],\"exampleType\":\"jsx\"}`}),`<ProgressIndicator\n    items={[\n        { href: '#', label: 'Introduction', status: 'done' },\n        { href: '#', label: 'Business Contacts', status: 'doing' },\n        { href: '#', label: 'Case Studies', status: 'todo' },\n    ]}\n/>\n`)),mdx(\"p\",null,\"The background of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ProgressIndicator\"),\" must match the background it is being placed on. For example, if \",mdx(\"inlineCode\",{parentName:\"p\"},\"ProgressIndicator\"),\" is placed on a 'bodyAlt' background, please set the \",mdx(\"inlineCode\",{parentName:\"p\"},\"background\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"bodyAlt\"),\".\"),mdx(\"h3\",null,\"Buttons\"),mdx(\"p\",null,\"If an item does not specify a \",mdx(\"inlineCode\",{parentName:\"p\"},\"href\"),\" attribute a \",mdx(\"inlineCode\",{parentName:\"p\"},\"button\"),\" element will be rendered. This enables you to reponds to various mouse events such as \",mdx(\"inlineCode\",{parentName:\"p\"},\"onClick\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ProgressIndicator, {\\\\n    items: [{\\\\n      onClick: console.log,\\\\n      label: 'Introduction',\\\\n      status: 'done'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Business Contacts',\\\\n      status: 'doing'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"ProgressIndicator\",\"console\"],\"exampleType\":\"jsx\"}`}),`<ProgressIndicator\n    items={[\n        { onClick: console.log, label: 'Introduction', status: 'done' },\n        { onClick: console.log, label: 'Business Contacts', status: 'doing' },\n        { onClick: console.log, label: 'Case Studies', status: 'todo' },\n    ]}\n/>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Progress Indicator","description":"Progress indicators provide visual feedback to users to let them know and understand their current context at any given time and be assured that they are progressing through the system.","group":"Forms","storybookPath":"/story/forms-progressindicator--basic"}},"data":{"title":"Progress Indicator","description":"Progress indicators provide visual feedback to users to let them know and understand their current context at any given time and be assured that they are progressing through the system.","group":"Forms","storybookPath":"/story/forms-progressindicator--basic"},"name":"@ag.ds-next/progress-indicator","version":"13.0.0","title":"Progress Indicator","storybookPath":"/story/forms-progressindicator--basic","subNavItems":[{"label":"Overview","href":"/packages/progress-indicator","path":"/home/runner/work/agds-next/agds-next/packages/progress-indicator/docs/overview.mdx"},{"label":"Code","href":"/packages/progress-indicator/code","path":"/home/runner/work/agds-next/agds-next/packages/progress-indicator/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/packages/a11y"},{"label":"AG Branding","href":"/packages/ag-branding"},{"label":"Accordion","href":"/packages/accordion"},{"label":"Autocomplete","href":"/packages/autocomplete"},{"label":"Badge","href":"/packages/badge"},{"label":"Box","href":"/packages/box"},{"label":"Breadcrumbs","href":"/packages/breadcrumbs"},{"label":"Button","href":"/packages/button"},{"label":"Call To Action","href":"/packages/call-to-action"},{"label":"Callout","href":"/packages/callout"},{"label":"Card","href":"/packages/card"},{"label":"Columns","href":"/packages/columns"},{"label":"Combobox","href":"/packages/combobox"},{"label":"Content","href":"/packages/content"},{"label":"Control Input","href":"/packages/control-input"},{"label":"Core","href":"/packages/core"},{"label":"Date Picker","href":"/packages/date-picker"},{"label":"Details","href":"/packages/details"},{"label":"Direction Link","href":"/packages/direction-link"},{"label":"Field","href":"/packages/field"},{"label":"Fieldset","href":"/packages/fieldset"},{"label":"File Upload","href":"/packages/file-upload"},{"label":"Footer","href":"/packages/footer"},{"label":"Form Stack","href":"/packages/form-stack"},{"label":"Header","href":"/packages/header"},{"label":"Heading","href":"/packages/heading"},{"label":"Hero Banner","href":"/packages/hero-banner"},{"label":"Icon","href":"/packages/icon"},{"label":"Inpage Nav","href":"/packages/inpage-nav"},{"label":"Keyword List","href":"/packages/keyword-list"},{"label":"Link List","href":"/packages/link-list"},{"label":"Loading","href":"/packages/loading"},{"label":"Main Nav","href":"/packages/main-nav"},{"label":"Modal","href":"/packages/modal"},{"label":"Page Alert","href":"/packages/page-alert"},{"label":"Pagination","href":"/packages/pagination"},{"label":"Progress Indicator","href":"/packages/progress-indicator"},{"label":"Prose","href":"/packages/prose"},{"label":"Search Box","href":"/packages/search-box"},{"label":"Select","href":"/packages/select"},{"label":"Side Nav","href":"/packages/side-nav"},{"label":"Skeleton","href":"/packages/skeleton"},{"label":"Skip Link","href":"/packages/skip-link"},{"label":"Sub Nav","href":"/packages/sub-nav"},{"label":"Summary List","href":"/packages/summary-list"},{"label":"Switch","href":"/packages/switch"},{"label":"Table","href":"/packages/table"},{"label":"Tags","href":"/packages/tags"},{"label":"Task List","href":"/packages/task-list"},{"label":"Text","href":"/packages/text"},{"label":"Text Input","href":"/packages/text-input"},{"label":"Text Link","href":"/packages/text-link"},{"label":"Textarea","href":"/packages/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/packages","label":"Packages"},{"label":"Progress Indicator"}],"content":{"compiledSource":"var c=Object.defineProperty,p=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var r=(e,n,t)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,a=(e,n)=>{for(var t in n||(n={}))i.call(n,t)&&r(e,t,n[t]);if(s)for(var t of s(n))l.call(n,t)&&r(e,t,n[t]);return e},d=(e,n)=>p(e,m(n));var u=(e,n)=>{var t={};for(var o in e)i.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&s)for(var o of s(e))n.indexOf(o)<0&&l.call(e,o)&&(t[o]=e[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,n=u(o,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Our design system provides a progress indicator for larger tasks that can be completed out of order and returned to at a later date, like doing a tax return or applying for a driver\\u2019s licence.\"),mdx(\"p\",null,\"The individual tasks or steps are shown as either:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"todo\"),\" \\u2013 the task is available for the user to do\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"doing\"),\" \\u2013 the task has been started\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"done\"),\" \\u2013 the task has been completed\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ProgressIndicator, {\\\\n    items: [{\\\\n      href: '#',\\\\n      label: 'Introduction',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Business Contacts',\\\\n      status: 'doing'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"ProgressIndicator\"],\"exampleType\":\"jsx\"}`}),`<ProgressIndicator\n    items={[\n        { href: '#', label: 'Introduction', status: 'done' },\n        { href: '#', label: 'Business Contacts', status: 'doing' },\n        { href: '#', label: 'Case Studies', status: 'todo' },\n    ]}\n/>\n`)),mdx(\"p\",null,\"The background of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ProgressIndicator\"),\" must match the background it is being placed on. For example, if \",mdx(\"inlineCode\",{parentName:\"p\"},\"ProgressIndicator\"),\" is placed on a 'bodyAlt' background, please set the \",mdx(\"inlineCode\",{parentName:\"p\"},\"background\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"bodyAlt\"),\".\"),mdx(\"h3\",null,\"Buttons\"),mdx(\"p\",null,\"If an item does not specify a \",mdx(\"inlineCode\",{parentName:\"p\"},\"href\"),\" attribute a \",mdx(\"inlineCode\",{parentName:\"p\"},\"button\"),\" element will be rendered. This enables you to reponds to various mouse events such as \",mdx(\"inlineCode\",{parentName:\"p\"},\"onClick\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ProgressIndicator, {\\\\n    items: [{\\\\n      onClick: console.log,\\\\n      label: 'Introduction',\\\\n      status: 'done'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Business Contacts',\\\\n      status: 'doing'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"ProgressIndicator\",\"console\"],\"exampleType\":\"jsx\"}`}),`<ProgressIndicator\n    items={[\n        { onClick: console.log, label: 'Introduction', status: 'done' },\n        { onClick: console.log, label: 'Business Contacts', status: 'doing' },\n        { onClick: console.log, label: 'Case Studies', status: 'todo' },\n    ]}\n/>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Progress Indicator","description":"Progress indicators provide visual feedback to users to let them know and understand their current context at any given time and be assured that they are progressing through the system.","group":"Forms","storybookPath":"/story/forms-progressindicator--basic"}}},"__N_SSG":true}