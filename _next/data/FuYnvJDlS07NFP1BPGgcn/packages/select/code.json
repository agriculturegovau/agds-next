{"pageProps":{"pkg":{"slug":"select","source":{"compiledSource":"var r=Object.defineProperty,b=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(e,l,a)=>l in e?r(e,l,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[l]=a,t=(e,l)=>{for(var a in l||(l={}))i.call(l,a)&&s(e,a,l[a]);if(o)for(var a of o(l))p.call(l,a)&&s(e,a,l[a]);return e},c=(e,l)=>b(e,d(l));var u=(e,l)=>{var a={};for(var n in e)i.call(e,n)&&l.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&o)for(var n of o(e))l.indexOf(n)<0&&p.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,l=u(n,[\"components\"]);return mdx(MDXLayout,c(t(t({},layoutProps),l),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h3\",null,\"Default\"),mdx(\"p\",null,\"Select boxes (drop-down lists) allow users to select a value from a list.\"),mdx(\"p\",null,\"By default, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Select\"),\" component does not expand to fill the available space.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    options={[\n        { value: 'a', label: 'Option A' },\n        { value: 'b', label: 'Option B' },\n        { value: 'c', label: 'Option C' },\n    ]}\n/>\n`)),mdx(\"h3\",null,\"Block\"),mdx(\"p\",null,\"Use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"block\"),\" prop to expand the component to fill the available space.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }],\\\\n    block: true\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    options={[\n        { value: 'a', label: 'Option A' },\n        { value: 'b', label: 'Option B' },\n        { value: 'c', label: 'Option C' },\n    ]}\n    block\n/>\n`)),mdx(\"h3\",null,\"Required\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"Select\"),\" component will always append \",mdx(\"inlineCode\",{parentName:\"p\"},\"(optional)\"),\" to the label based on the \",mdx(\"inlineCode\",{parentName:\"p\"},\"required\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Default\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }), /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Required\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    required: true,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }), /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Optional\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    required: false,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"Select\"],\"exampleType\":\"jsx\"}`}),`<Stack gap={1}>\n    <Select\n        label=\"Default\"\n        placeholder=\"Please select\"\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n    <Select\n        label=\"Required\"\n        placeholder=\"Please select\"\n        required\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n    <Select\n        label=\"Optional\"\n        placeholder=\"Please select\"\n        required={false}\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n</Stack>\n`)),mdx(\"h3\",null,\"Valid and invalid selects\"),mdx(\"p\",null,\"Use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"invalid\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"valid\"),\" props to indicate whether user select is valid (validates according to the elements settings) or invalid (does not validate according to the elements settings).\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Invalid\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    invalid: true,\\\\n    message: \\\\\"This select is invalid\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }), /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Valid\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    valid: true,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"Select\"],\"exampleType\":\"jsx\"}`}),`<Stack gap={1}>\n    <Select\n        label=\"Invalid\"\n        placeholder=\"Please select\"\n        invalid\n        message=\"This select is invalid\"\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n    <Select\n        label=\"Valid\"\n        placeholder=\"Please select\"\n        valid\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n</Stack>\n`)),mdx(\"h3\",null,\"Disabled\"),mdx(\"p\",null,\"Disabled select elements are unusable and can not be clicked. This prevents a user from interacting with the select element until another action is complete. Disabled select elements in a form will not be submitted.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    disabled: true,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    disabled\n    options={[\n        { value: 'a', label: 'Option A' },\n        { value: 'b', label: 'Option B' },\n        { value: 'c', label: 'Option C' },\n    ]}\n/>\n`)),mdx(\"h3\",null,\"Groups\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      label: 'Group A',\\\\n      options: [{\\\\n        value: 'a',\\\\n        label: 'Option A'\\\\n      }, {\\\\n        value: 'b',\\\\n        label: 'Option B'\\\\n      }, {\\\\n        value: 'c',\\\\n        label: 'Option C'\\\\n      }]\\\\n    }, {\\\\n      label: 'Group B',\\\\n      options: [{\\\\n        value: 'd',\\\\n        label: 'Option D'\\\\n      }, {\\\\n        value: 'e',\\\\n        label: 'Option E'\\\\n      }, {\\\\n        value: 'f',\\\\n        label: 'Option F'\\\\n      }]\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    options={[\n        {\n            label: 'Group A',\n            options: [\n                { value: 'a', label: 'Option A' },\n                { value: 'b', label: 'Option B' },\n                { value: 'c', label: 'Option C' },\n            ],\n        },\n        {\n            label: 'Group B',\n            options: [\n                { value: 'd', label: 'Option D' },\n                { value: 'e', label: 'Option E' },\n                { value: 'f', label: 'Option F' },\n            ],\n        },\n    ]}\n/>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Select","description":"Select provides a means to select a single item from a collapsible list. Use of select helps to reduce input errors and screen space. It's commonly used to help users enter a value into a form field.","group":"Forms","storybookPath":"/story/forms-select--basic"}},"data":{"title":"Select","description":"Select provides a means to select a single item from a collapsible list. Use of select helps to reduce input errors and screen space. It's commonly used to help users enter a value into a form field.","group":"Forms","storybookPath":"/story/forms-select--basic"},"name":"@ag.ds-next/select","version":"12.0.0","title":"Select","storybookPath":"/story/forms-select--basic","subNavItems":[{"label":"Overview","href":"/packages/select","path":"/home/runner/work/agds-next/agds-next/packages/select/docs/overview.mdx"},{"label":"Code","href":"/packages/select/code","path":"/home/runner/work/agds-next/agds-next/packages/select/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/packages/a11y"},{"label":"AG Branding","href":"/packages/ag-branding"},{"label":"Accordion","href":"/packages/accordion"},{"label":"Autocomplete","href":"/packages/autocomplete"},{"label":"Badge","href":"/packages/badge"},{"label":"Box","href":"/packages/box"},{"label":"Breadcrumbs","href":"/packages/breadcrumbs"},{"label":"Button","href":"/packages/button"},{"label":"Call To Action","href":"/packages/call-to-action"},{"label":"Callout","href":"/packages/callout"},{"label":"Card","href":"/packages/card"},{"label":"Columns","href":"/packages/columns"},{"label":"Combobox","href":"/packages/combobox"},{"label":"Content","href":"/packages/content"},{"label":"Control Input","href":"/packages/control-input"},{"label":"Core","href":"/packages/core"},{"label":"Date Picker","href":"/packages/date-picker"},{"label":"Details","href":"/packages/details"},{"label":"Direction Link","href":"/packages/direction-link"},{"label":"Field","href":"/packages/field"},{"label":"Fieldset","href":"/packages/fieldset"},{"label":"File Upload","href":"/packages/file-upload"},{"label":"Footer","href":"/packages/footer"},{"label":"Form Stack","href":"/packages/form-stack"},{"label":"Header","href":"/packages/header"},{"label":"Heading","href":"/packages/heading"},{"label":"Hero Banner","href":"/packages/hero-banner"},{"label":"Icon","href":"/packages/icon"},{"label":"Inpage Nav","href":"/packages/inpage-nav"},{"label":"Keyword List","href":"/packages/keyword-list"},{"label":"Link List","href":"/packages/link-list"},{"label":"Loading","href":"/packages/loading"},{"label":"Main Nav","href":"/packages/main-nav"},{"label":"Modal","href":"/packages/modal"},{"label":"Page Alert","href":"/packages/page-alert"},{"label":"Pagination","href":"/packages/pagination"},{"label":"Progress Indicator","href":"/packages/progress-indicator"},{"label":"Prose","href":"/packages/prose"},{"label":"Search Box","href":"/packages/search-box"},{"label":"Select","href":"/packages/select"},{"label":"Side Nav","href":"/packages/side-nav"},{"label":"Skeleton","href":"/packages/skeleton"},{"label":"Skip Link","href":"/packages/skip-link"},{"label":"Sub Nav","href":"/packages/sub-nav"},{"label":"Summary List","href":"/packages/summary-list"},{"label":"Switch","href":"/packages/switch"},{"label":"Table","href":"/packages/table"},{"label":"Tags","href":"/packages/tags"},{"label":"Task List","href":"/packages/task-list"},{"label":"Text","href":"/packages/text"},{"label":"Text Input","href":"/packages/text-input"},{"label":"Text Link","href":"/packages/text-link"},{"label":"Textarea","href":"/packages/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/packages","label":"Packages"},{"href":"/packages/select","label":"Select"},{"label":"Code"}],"content":{"compiledSource":"var u=Object.defineProperty,l=Object.defineProperties;var D=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var a=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var c=(o,e,n)=>e in o?u(o,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[e]=n,p=(o,e)=>{for(var n in e||(e={}))a.call(e,n)&&c(o,n,e[n]);if(r)for(var n of r(e))s.call(e,n)&&c(o,n,e[n]);return o},m=(o,e)=>l(o,D(e));var d=(o,e)=>{var n={};for(var t in o)a.call(o,t)&&e.indexOf(t)<0&&(n[t]=o[t]);if(o!=null&&r)for(var t of r(o))e.indexOf(t)<0&&s.call(o,t)&&(n[t]=o[t]);return n};const makeShortcode=o=>function(n){return console.warn(\"Component \"+o+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",p({},n))},ComponentPropsTable=makeShortcode(\"ComponentPropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:o}=t,e=d(t,[\"components\"]);return mdx(MDXLayout,m(p(p({},layoutProps),e),{components:o,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Props\"),mdx(ComponentPropsTable,{name:\"Select\",mdxType:\"ComponentPropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}