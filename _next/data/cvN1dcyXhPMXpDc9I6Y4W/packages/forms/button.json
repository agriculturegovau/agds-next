{"pageProps":{"pkg":{"slug":"button","source":{"compiledSource":"var p=Object.defineProperty,m=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var s=(e,t,n)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,r=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&s(e,n,t[n]);if(o)for(var n of o(t))l.call(t,n)&&s(e,n,t[n]);return e},c=(e,t)=>m(e,d(t));var u=(e,t)=>{var n={};for(var a in e)i.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&o)for(var a of o(e))t.indexOf(a)<0&&l.call(e,a)&&(n[a]=e[a]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var a=n,{components:e}=a,t=u(a,[\"components\"]);return mdx(MDXLayout,c(r(r({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Props\"),mdx(\"h3\",null,\"Variant\"),mdx(\"p\",null,\"Our Button component has three visual weights, to convey heirarchy.\"),mdx(\"h4\",null,\"Primary\"),mdx(\"p\",null,\"A strong button style used for primary actions on a screen such as a Submit button on a form, or other actions that are critical in a user workflow. A primary button should be only used once per view.\"),mdx(\"h4\",null,\"Secondary\"),mdx(\"p\",null,\"A standard button style used to highlight an important action such as a Save button on a form. (A secondary button assumes there is already a primary button.)\"),mdx(\"h4\",null,\"Tertiary\"),mdx(\"p\",null,\"A light button style used for tertiary actions on a screen such as a Cancel button on a form. (A tertiary button assumes there is already a secondary button.) Typically it performs the opposite action to the secondary button (e.g. Cancel vs Save).\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Flex, {\\\\n    gap: 0.5\\\\n  }, /*#__PURE__*/React.createElement(Button, {\\\\n    variant: \\\\\"primary\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('primary');\\\\n    }\\\\n  }, \\\\\"Primary\\\\\"), /*#__PURE__*/React.createElement(Button, {\\\\n    variant: \\\\\"secondary\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('secondary');\\\\n    }\\\\n  }, \\\\\"Secondary\\\\\"), /*#__PURE__*/React.createElement(Button, {\\\\n    variant: \\\\\"tertiary\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('tertiary');\\\\n    }\\\\n  }, \\\\\"Tertiary\\\\\"));\\\\n}\",\"globals\":[\"Flex\",\"Button\",\"alert\"],\"exampleType\":\"jsx\"}`}),`<Flex gap={0.5}>\n    <Button variant=\"primary\" onClick={() => alert('primary')}>\n        Primary\n    </Button>\n    <Button variant=\"secondary\" onClick={() => alert('secondary')}>\n        Secondary\n    </Button>\n    <Button variant=\"tertiary\" onClick={() => alert('tertiary')}>\n        Tertiary\n    </Button>\n</Flex>\n`)),mdx(\"h3\",null,\"Size\"),mdx(\"p\",null,\"Size is another prop that allows adjustment of visual weight. The medium button should be used for most circumstances.\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Flex, {\\\\n    gap: 0.25\\\\n  }, /*#__PURE__*/React.createElement(Button, {\\\\n    variant: \\\\\"primary\\\\\",\\\\n    size: \\\\\"sm\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('primary');\\\\n    }\\\\n  }, \\\\\"Primary\\\\\"), /*#__PURE__*/React.createElement(Button, {\\\\n    variant: \\\\\"secondary\\\\\",\\\\n    size: \\\\\"sm\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('secondary');\\\\n    }\\\\n  }, \\\\\"Secondary\\\\\"), /*#__PURE__*/React.createElement(Button, {\\\\n    variant: \\\\\"tertiary\\\\\",\\\\n    size: \\\\\"sm\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('tertiary');\\\\n    }\\\\n  }, \\\\\"Tertiary\\\\\"));\\\\n}\",\"globals\":[\"Flex\",\"Button\",\"alert\"],\"exampleType\":\"jsx\"}`}),`<Flex gap={0.25}>\n    <Button variant=\"primary\" size=\"sm\" onClick={() => alert('primary')}>\n        Primary\n    </Button>\n    <Button variant=\"secondary\" size=\"sm\" onClick={() => alert('secondary')}>\n        Secondary\n    </Button>\n    <Button variant=\"tertiary\" size=\"sm\" onClick={() => alert('tertiary')}>\n        Tertiary\n    </Button>\n</Flex>\n`)),mdx(\"h3\",null,\"Disabled\"),mdx(\"p\",null,\"A button that can\\u2019t be interacted with. A disabled button is typically greyed out to indicate to users that they cannot undertake the action associated with it. This is usually for page logic reasons.\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Flex, {\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Button, {\\\\n    disabled: true,\\\\n    variant: \\\\\"primary\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('primary');\\\\n    }\\\\n  }, \\\\\"Primary\\\\\"), /*#__PURE__*/React.createElement(Button, {\\\\n    disabled: true,\\\\n    variant: \\\\\"secondary\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('secondary');\\\\n    }\\\\n  }, \\\\\"Secondary\\\\\"), /*#__PURE__*/React.createElement(Button, {\\\\n    disabled: true,\\\\n    variant: \\\\\"tertiary\\\\\",\\\\n    onClick: function onClick() {\\\\n      return alert('tertiary');\\\\n    }\\\\n  }, \\\\\"Tertiary\\\\\"));\\\\n}\",\"globals\":[\"Flex\",\"Button\",\"alert\"],\"exampleType\":\"jsx\"}`}),`<Flex gap={1}>\n    <Button disabled variant=\"primary\" onClick={() => alert('primary')}>\n        Primary\n    </Button>\n    <Button disabled variant=\"secondary\" onClick={() => alert('secondary')}>\n        Secondary\n    </Button>\n    <Button disabled variant=\"tertiary\" onClick={() => alert('tertiary')}>\n        Tertiary\n    </Button>\n</Flex>\n`)),mdx(\"h3\",null,\"Block\"),mdx(\"p\",null,\"A block-level button uses 100% of the available width of the container or parent element. A block- level button is used for visual prominence.\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Button, {\\\\n    block: true\\\\n  }, \\\\\"Submit\\\\\");\\\\n}\",\"globals\":[\"Button\"],\"exampleType\":\"jsx\"}'}),`<Button block>Submit</Button>\n`)),mdx(\"h3\",null,\"Icons\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"iconAfter\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"iconBefore\"),\" props can be used to add system icons to buttons.\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ButtonLink, {\\\\n    iconAfter: ExternalLinkIcon,\\\\n    href: \\\\\"https://steelthreads.github.io/agds-next\\\\\",\\\\n    target: \\\\\"_blank\\\\\",\\\\n    rel: \\\\\"noopener noreferrer\\\\\"\\\\n  }, \\\\\"Open external link\\\\\");\\\\n}\",\"globals\":[\"ButtonLink\",\"ExternalLinkIcon\"],\"exampleType\":\"jsx\"}'}),`<ButtonLink\n    iconAfter={ExternalLinkIcon}\n    href=\"https://steelthreads.github.io/agds-next\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n>\n    Open external link\n</ButtonLink>\n`)),mdx(\"h3\",null,\"Loading\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"loading\"),\" prop can be used to inform users that their action is being processed.\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Button, {\\\\n    loading: true\\\\n  }, \\\\\"Submit\\\\\");\\\\n}\",\"globals\":[\"Button\"],\"exampleType\":\"jsx\"}'}),`<Button loading>Submit</Button>\n`)),mdx(\"h2\",null,\"Buttons links\"),mdx(\"p\",null,\"For situations where you need something that has the visual weight of a Button, but the functionality of a link, you can use \",mdx(\"inlineCode\",{parentName:\"p\"},\"ButtonLink\"),\"!\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"ButtonLink\"),\" adopts the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Link\"),\" component from your chosen router framework, which you can set in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Core\"),\" component.\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ButtonLink, {\\\\n    href: \\\\\"/sign-in\\\\\"\\\\n  }, \\\\\"Sign in\\\\\");\\\\n}\",\"globals\":[\"ButtonLink\"],\"exampleType\":\"jsx\"}'}),`<ButtonLink href=\"/sign-in\">Sign in</ButtonLink>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Button","description":"Buttons make common actions more obvious and help users more easily perform them. Buttons use labels and sometimes icons to communicate the action that will occur when the user touches them.","group":"Forms"}},"data":{"title":"Button","description":"Buttons make common actions more obvious and help users more easily perform them. Buttons use labels and sometimes icons to communicate the action that will occur when the user touches them.","group":"Forms"},"name":"@ag.ds-next/button","version":"6.0.0","title":"Button"},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms","items":[{"label":"Button","href":"/packages/forms/button"},{"label":"Control input","href":"/packages/forms/control-input"},{"label":"Date Picker","href":"/packages/forms/date-picker"},{"label":"Field","href":"/packages/forms/field"},{"label":"Fieldset","href":"/packages/forms/fieldset"},{"label":"FileUpload","href":"/packages/forms/file-upload"},{"label":"Form Stack","href":"/packages/forms/form-stack"},{"label":"Progress indicator","href":"/packages/forms/progress-indicator"},{"label":"Search Box","href":"/packages/forms/search-box"},{"label":"Select","href":"/packages/forms/select"},{"label":"Task List","href":"/packages/forms/task-list"},{"label":"Text Input","href":"/packages/forms/text-input"},{"label":"Textarea","href":"/packages/forms/textarea"}]},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/forms","label":"Forms"},{"label":"Button"}]},"__N_SSG":true}