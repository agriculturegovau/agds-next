{"pageProps":{"pkg":{"slug":"card","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Basic card\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cards are used to organise information related to a single topic. Cards can contain multiple elements, such as images, links, actions, text and more.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex gap={1} flexDirection=\\\"row\\\">\\n\\t<Flex\\n\\t\\tflexDirection=\\\"column\\\"\\n\\t\\tflexGrow={1}\\n\\t\\tpalette=\\\"light\\\"\\n\\t\\tpadding={1}\\n\\t\\tbackground=\\\"body\\\"\\n\\t>\\n\\t\\t<Card shadow clickable>\\n\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t<Stack gap={1}>\\n\\t\\t\\t\\t\\t<Box as=\\\"h3\\\">\\n\\t\\t\\t\\t\\t\\t<CardLink href=\\\"#\\\">Card link</CardLink>\\n\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t<Text>\\n\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras non\\n\\t\\t\\t\\t\\t\\tfinibus leo.\\n\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t</Stack>\\n\\t\\t\\t</CardInner>\\n\\t\\t</Card>\\n\\t</Flex>\\n\\t<Flex\\n\\t\\tflexDirection=\\\"column\\\"\\n\\t\\tflexGrow={1}\\n\\t\\tpalette=\\\"dark\\\"\\n\\t\\tpadding={1}\\n\\t\\tbackground=\\\"body\\\"\\n\\t>\\n\\t\\t<Card clickable>\\n\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t<Stack gap={1}>\\n\\t\\t\\t\\t\\t<Box as=\\\"h3\\\">\\n\\t\\t\\t\\t\\t\\t<CardLink href=\\\"#\\\">Card link</CardLink>\\n\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t<Text>\\n\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras non\\n\\t\\t\\t\\t\\t\\tfinibus leo.\\n\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t</Stack>\\n\\t\\t\\t</CardInner>\\n\\t\\t</Card>\\n\\t</Flex>\\n</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Images\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A card with an image. For full width images, add the img tag outside the \", _jsx(_components.code, {\n        children: \"CardInner\"\n      }), \" container. For images with inner padding, add the img tag inside the \", _jsx(_components.code, {\n        children: \"CardInner\"\n      }), \" container.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Card>\\n\\t<PlaceholderImage />\\n\\t<CardInner>\\n\\t\\t<TextLink href=\\\"#\\\">Action</TextLink>\\n\\t</CardInner>\\n</Card>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Clickable cards\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For cards that contain a single link, the hit area for that link can be made to wrap the entire card. This pattern may be used on cards that act as a preview for an article or blog post, for example. These cards could contain an image, a title and a brief summary of the article. Avoid wrapping an entire card in an anchor tag as this can be a difficult experience for a screen reader user.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Card shadow clickable>\\n\\t<PlaceholderImage />\\n\\t<CardInner>\\n\\t\\t<Stack gap={1}>\\n\\t\\t\\t<Heading type=\\\"h3\\\">\\n\\t\\t\\t\\t<CardLink href=\\\"#\\\">Title of article</CardLink>\\n\\t\\t\\t</Heading>\\n\\t\\t\\t<Text as=\\\"p\\\">Some text</Text>\\n\\t\\t</Stack>\\n\\t</CardInner>\\n</Card>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Feature headers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use feature headers to give the card heading more visual prominence.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Columns>\\n\\t<Column columnSpan={6}>\\n\\t\\t<Card>\\n\\t\\t\\t<CardHeader>\\n\\t\\t\\t\\t<Heading type=\\\"h4\\\">Feature card title</Heading>\\n\\t\\t\\t</CardHeader>\\n\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">Additional conent relating to the card</Text>\\n\\t\\t\\t</CardInner>\\n\\t\\t</Card>\\n\\t</Column>\\n\\t<Column columnSpan={6}>\\n\\t\\t<Card>\\n\\t\\t\\t<CardHeader background=\\\"bodyAlt\\\">\\n\\t\\t\\t\\t<Heading type=\\\"h4\\\">Feature card title</Heading>\\n\\t\\t\\t</CardHeader>\\n\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">Additional conent relating to the card</Text>\\n\\t\\t\\t</CardInner>\\n\\t\\t</Card>\\n\\t</Column>\\n</Columns>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Feature footers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use feature footers to give the card footer more visual prominence. This can be used to guide users to the call to action.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Columns>\\n\\t<Column columnSpan={6}>\\n\\t\\t<Card>\\n\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t<Stack gap={1}>\\n\\t\\t\\t\\t\\t<Heading type=\\\"h3\\\">Card title</Heading>\\n\\t\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\t\\tLorem ipsum dolor, sit amet consectetur adipisicing elit. In,\\n\\t\\t\\t\\t\\t\\tvoluptatibus.\\n\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t</Stack>\\n\\t\\t\\t</CardInner>\\n\\t\\t\\t<CardFooter>\\n\\t\\t\\t\\t<TextLink href=\\\"#\\\">Action</TextLink>\\n\\t\\t\\t</CardFooter>\\n\\t\\t</Card>\\n\\t</Column>\\n\\t<Column columnSpan={6}>\\n\\t\\t<Card>\\n\\t\\t\\t<CardInner>\\n\\t\\t\\t\\t<Stack gap={1}>\\n\\t\\t\\t\\t\\t<Heading type=\\\"h3\\\">Card title</Heading>\\n\\t\\t\\t\\t\\t<Text as=\\\"p\\\">\\n\\t\\t\\t\\t\\t\\tLorem ipsum dolor, sit amet consectetur adipisicing elit. In,\\n\\t\\t\\t\\t\\t\\tvoluptatibus.\\n\\t\\t\\t\\t\\t</Text>\\n\\t\\t\\t\\t</Stack>\\n\\t\\t\\t</CardInner>\\n\\t\\t\\t<CardFooter background=\\\"bodyAlt\\\">\\n\\t\\t\\t\\t<TextLink href=\\\"#\\\">Action</TextLink>\\n\\t\\t\\t</CardFooter>\\n\\t\\t</Card>\\n\\t</Column>\\n</Columns>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Card","description":"The card component is used to provide a brief summary of content or a task, often with a link to more detail. Cards are frequently displayed alongside other cards to group related content or tasks.","group":"Layout","storybookPath":"/story/layout-card--basic"}},"data":{"title":"Card","description":"The card component is used to provide a brief summary of content or a task, often with a link to more detail. Cards are frequently displayed alongside other cards to group related content or tasks.","group":"Layout","storybookPath":"/story/layout-card--basic"},"name":"@ag.ds-next/card","version":"8.0.0","title":"Card","description":"The card component is used to provide a brief summary of content or a task, often with a link to more detail. Cards are frequently displayed alongside other cards to group related content or tasks.","storybookPath":"/story/layout-card--basic","subNavItems":[{"label":"Overview","href":"/components/card","path":"/home/runner/work/agds-next/agds-next/packages/card/docs/overview.mdx"},{"label":"Code","href":"/components/card/code","path":"/home/runner/work/agds-next/agds-next/packages/card/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG Branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call To Action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control Input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date Picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction Link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File Upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form Stack","href":"/components/form-stack"},{"label":"Global Alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero Banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage Nav","href":"/components/inpage-nav"},{"label":"Keyword List","href":"/components/keyword-list"},{"label":"Link List","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main Nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page Alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress Indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search Box","href":"/components/search-box"},{"label":"Search Input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side Nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip Link","href":"/components/skip-link"},{"label":"Sub Nav","href":"/components/sub-nav"},{"label":"Summary List","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task List","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text Input","href":"/components/text-input"},{"label":"Text Link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/card","label":"Card"},{"label":"Code"}],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"Card\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"CardInner\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"CardLink\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"CardHeader\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"CardFooter\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}