{"pageProps":{"guide":{"slug":"responsive-props","source":{"compiledSource":"var m=Object.defineProperty,c=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(e,a,n)=>a in e?m(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,o=(e,a)=>{for(var n in a||(a={}))r.call(a,n)&&s(e,n,a[n]);if(i)for(var n of i(a))p.call(a,n)&&s(e,n,a[n]);return e},d=(e,a)=>c(e,h(a));var l=(e,a)=>{var n={};for(var t in e)r.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&i)for(var t of i(e))a.indexOf(t)<0&&p.call(e,t)&&(n[t]=e[t]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:e}=t,a=l(t,[\"components\"]);return mdx(MDXLayout,d(o(o({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Breakpoints\"),mdx(\"p\",null,\"It is important to understand that our responsive style APIs are dependant on the global \",mdx(\"inlineCode\",{parentName:\"p\"},\"breakpoints\"),\" token. Each key in the object refers to the breakpoint name, and each value refers to the the minimum width of the breakpoint.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`const breakpoint = {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n};\n`)),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"We use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"@media (min-width)\"),\" syntax to ensure styles are generated for mobile-first.\")),mdx(\"h2\",null,\"The array syntax\"),mdx(\"p\",null,\"As a simple example, we will create a \",mdx(\"inlineCode\",{parentName:\"p\"},\"Box\"),\" with some padding.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"live\",live:!0}),`<Box background=\"shade\" padding={2}>\n    Hello world\n</Box>\n`)),mdx(\"p\",null,\"Now let's update the \",mdx(\"inlineCode\",{parentName:\"p\"},\"padding\"),\" prop to make it responsive.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"live\",live:!0}),`<Box background=\"shade\" padding={[1, 2, 4]}>\n    Hello world\n</Box>\n`)),mdx(\"p\",null,\"Under the hood, this simple example has generated the following CSS:\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-css\"}),`.css-1ped26i {\n    padding: 1rem;\n}\n\n@media (min-width: 576px) {\n    .css-1ped26i {\n        padding: 2rem;\n    }\n}\n\n@media (min-width: 768px) {\n    .css-1ped26i {\n        padding: 4rem;\n    }\n}\n`)),mdx(\"p\",null,\"To interpret array responsive values, we convert the values defined in our \",mdx(\"inlineCode\",{parentName:\"p\"},\"breakpoints\"),\" token and sort them in ascending order. Afterward, we map each value in the array to a \",mdx(\"inlineCode\",{parentName:\"p\"},\"min-width\"),\" media query.\"),mdx(\"p\",null,\"To skip certain breakpoints, you can pass \",mdx(\"inlineCode\",{parentName:\"p\"},\"null\"),\" to any item in the array to avoid generating unnecessary CSS.\"),mdx(\"h2\",null,\"The object syntax\"),mdx(\"p\",null,\"You can also define responsive styles as an object, with each key in the object mapping to a breakpoint name.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"live\",live:!0}),`<Box background=\"shade\" padding={{ xs: 1, xl: 2 }}>\n    Hello world\n</Box>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"order":6,"title":"Responsive props","description":"The Agriculture Design System provides first class support for mobile-first responsive styles. Instead of manually writing CSS media queries throughout your codebase, our primitive components allow you to provide arrays and objects to generate responsive styles in your project."}},"data":{"order":6,"title":"Responsive props","description":"The Agriculture Design System provides first class support for mobile-first responsive styles. Instead of manually writing CSS media queries throughout your codebase, our primitive components allow you to provide arrays and objects to generate responsive styles in your project."},"title":"Responsive props","description":"The Agriculture Design System provides first class support for mobile-first responsive styles. Instead of manually writing CSS media queries throughout your codebase, our primitive components allow you to provide arrays and objects to generate responsive styles in your project."},"guideLinks":[{"href":"/guides/getting-started","label":"Getting started"},{"href":"/guides/contribution","label":"Contribution guidelines"},{"href":"/guides/design-principles","label":"Design Principles"},{"href":"/guides/figma","label":"Figma library"},{"href":"/guides/forms","label":"Forms"},{"href":"/guides/responsive-props","label":"Responsive props"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/guides","label":"Guides"},{"label":"Responsive props"}],"slug":"responsive-props"},"__N_SSG":true}