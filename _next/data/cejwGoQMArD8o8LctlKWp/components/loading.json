{"pageProps":{"pkg":{"slug":"loading","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Loading Blanket\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"LoadingBlanket\"\n      }), \" component can be used indicate the loading state of a component or page.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default this component is positioned absolutely, so you will need to make sure your component container is positioned relatively.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Box height=\\\"300px\\\" width=\\\"100%\\\" border style={{ position: 'relative' }}>\\n\\t<LoadingBlanket label=\\\"Component loading state\\\" />\\n</Box>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Full-screen\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Adding the \", _jsx(_components.code, {\n        children: \"fullScreen\"\n      }), \" prop will position the component over the whole screen.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We recommend limiting the use of this pattern to certain use cases such as before or after a redirection.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<LoadingBlanket fullScreen label=\\\"Page loading state\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Loading Dots\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"LoadingDots\"\n      }), \" component can be used on it's own, for example when fetching data from a remote source.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2} alignItems=\\\"center\\\">\\n\\t<LoadingDots size=\\\"sm\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n\\t<LoadingDots size=\\\"md\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n\\t<LoadingDots size=\\\"lg\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n</Stack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Loading","description":"Loading indicators inform users that their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic"}},"data":{"title":"Loading","description":"Loading indicators inform users that their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic"},"name":"@ag.ds-next/loading","version":"7.0.0","title":"Loading","storybookPath":"/story/content-loading-loadingblanket--basic","subNavItems":[{"label":"Overview","href":"/components/loading","path":"/home/runner/work/agds-next/agds-next/packages/loading/docs/overview.mdx"},{"label":"Code","href":"/components/loading/code","path":"/home/runner/work/agds-next/agds-next/packages/loading/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG Branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call To Action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control Input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date Picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction Link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File Upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form Stack","href":"/components/form-stack"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero Banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage Nav","href":"/components/inpage-nav"},{"label":"Keyword List","href":"/components/keyword-list"},{"label":"Link List","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main Nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page Alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress Indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search Box","href":"/components/search-box"},{"label":"Select","href":"/components/select"},{"label":"Side Nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip Link","href":"/components/skip-link"},{"label":"Sub Nav","href":"/components/sub-nav"},{"label":"Summary List","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task List","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text Input","href":"/components/text-input"},{"label":"Text Link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Loading"}],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Loading Blanket\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"LoadingBlanket\"\n      }), \" component can be used indicate the loading state of a component or page.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default this component is positioned absolutely, so you will need to make sure your component container is positioned relatively.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Box height=\\\"300px\\\" width=\\\"100%\\\" border style={{ position: 'relative' }}>\\n\\t<LoadingBlanket label=\\\"Component loading state\\\" />\\n</Box>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Full-screen\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Adding the \", _jsx(_components.code, {\n        children: \"fullScreen\"\n      }), \" prop will position the component over the whole screen.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We recommend limiting the use of this pattern to certain use cases such as before or after a redirection.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<LoadingBlanket fullScreen label=\\\"Page loading state\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Loading Dots\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"LoadingDots\"\n      }), \" component can be used on it's own, for example when fetching data from a remote source.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Stack gap={2} alignItems=\\\"center\\\">\\n\\t<LoadingDots size=\\\"sm\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n\\t<LoadingDots size=\\\"md\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n\\t<LoadingDots size=\\\"lg\\\" label=\\\"Loading\\\" role=\\\"status\\\" />\\n</Stack>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Loading","description":"Loading indicators inform users that their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic"}}},"__N_SSG":true}