{"pageProps":{"pkg":{"slug":"text","source":{"compiledSource":"var r=Object.defineProperty,c=Object.defineProperties;var T=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var x=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,i=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&x(e,n,t[n]);if(s)for(var n of s(t))o.call(t,n)&&x(e,n,t[n]);return e},p=(e,t)=>c(e,T(t));var m=(e,t)=>{var n={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&s)for(var a of s(e))t.indexOf(a)<0&&o.call(e,a)&&(n[a]=e[a]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var a=n,{components:e}=a,t=m(a,[\"components\"]);return mdx(MDXLayout,p(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"This package includes the components \",mdx(\"inlineCode\",{parentName:\"p\"},\"<Text />\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"<TextLink />\"),\".\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Text\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"TextLink\"),\" use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"fontGrid\"),\" function to make the font-size and line-height snap to grid.\"),mdx(\"h2\",null,\"Sizes\"),mdx(\"p\",null,\"There are seven font sizes available, \",mdx(\"inlineCode\",{parentName:\"p\"},\"sm\"),\" is the default.\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 0\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"xs\\\\\"\\\\n  }, \\\\\"This is some text (xs)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"sm\\\\\"\\\\n  }, \\\\\"This is some text (sm)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"md\\\\\"\\\\n  }, \\\\\"This is some text (md)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"lg\\\\\"\\\\n  }, \\\\\"This is some text (lg)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"xl\\\\\"\\\\n  }, \\\\\"This is some text (xl)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"xxl\\\\\"\\\\n  }, \\\\\"This is some text (xxl)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontSize: \\\\\"xxxl\\\\\"\\\\n  }, \\\\\"This is some text (xxxl)\\\\\"));\\\\n}\",\"globals\":[\"Stack\",\"Text\"],\"exampleType\":\"jsx\"}'}),`<Stack gap={0}>\n    <Text as=\"p\" fontSize=\"xs\">\n        This is some text (xs)\n    </Text>\n    <Text as=\"p\" fontSize=\"sm\">\n        This is some text (sm)\n    </Text>\n    <Text as=\"p\" fontSize=\"md\">\n        This is some text (md)\n    </Text>\n    <Text as=\"p\" fontSize=\"lg\">\n        This is some text (lg)\n    </Text>\n    <Text as=\"p\" fontSize=\"xl\">\n        This is some text (xl)\n    </Text>\n    <Text as=\"p\" fontSize=\"xxl\">\n        This is some text (xxl)\n    </Text>\n    <Text as=\"p\" fontSize=\"xxxl\">\n        This is some text (xxxl)\n    </Text>\n</Stack>\n`)),mdx(\"h3\",null,\"Weights\"),mdx(\"p\",null,\"There are two font weights available, \",mdx(\"inlineCode\",{parentName:\"p\"},\"normal\"),\" is the default.\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 0\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontWeight: \\\\\"normal\\\\\"\\\\n  }, \\\\\"Normal (default)\\\\\"), /*#__PURE__*/React.createElement(Text, {\\\\n    as: \\\\\"p\\\\\",\\\\n    fontWeight: \\\\\"bold\\\\\"\\\\n  }, \\\\\"Bold\\\\\"));\\\\n}\",\"globals\":[\"Stack\",\"Text\"],\"exampleType\":\"jsx\"}'}),`<Stack gap={0}>\n    <Text as=\"p\" fontWeight=\"normal\">\n        Normal (default)\n    </Text>\n    <Text as=\"p\" fontWeight=\"bold\">\n        Bold\n    </Text>\n</Stack>\n`)),mdx(\"h2\",null,\"TextLink\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"TextLink\"),\" component creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Text, null, \\\\\"This is some text with \\\\\", /*#__PURE__*/React.createElement(TextLink, {\\\\n    href: \\\\\"#\\\\\"\\\\n  }, \\\\\"a link\\\\\"), \\\\\" inside.\\\\\");\\\\n}\",\"globals\":[\"Text\",\"TextLink\"],\"exampleType\":\"jsx\"}'}),`<Text>\n    This is some text with <TextLink href=\"#\">a link</TextLink> inside.\n</Text>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Text","description":"A primitive typographic component for constrained text styles","group":"Foundations"}},"data":{"title":"Text","description":"A primitive typographic component for constrained text styles","group":"Foundations"},"name":"@ag.ds-next/text","version":"3.0.0","title":"Text"},"navLinks":[{"label":"Foundations","href":"/packages/foundations","items":[{"label":"Box","href":"/packages/foundations/box"},{"label":"Columns","href":"/packages/foundations/columns"},{"label":"Core","href":"/packages/foundations/core"},{"label":"Icon","href":"/packages/foundations/icon"},{"label":"Text","href":"/packages/foundations/text"}]},{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/foundations","label":"Foundations"},{"label":"Text"}]},"__N_SSG":true}