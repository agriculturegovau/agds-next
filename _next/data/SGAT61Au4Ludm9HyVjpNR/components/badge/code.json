{"pageProps":{"pkg":{"slug":"badge","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"StatusBadge\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"StatusBadge\"\n      }), \" to highlight an item's status for quick recognition.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Choosing a \", _jsx(_components.code, {\n        children: \"tone\"\n      }), \" for StatusBadge allows the user to understand the importance and severity of the message at a glance.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The five supported tones are \", _jsx(_components.code, {\n        children: \"info\"\n      }), \", \", _jsx(_components.code, {\n        children: \"success\"\n      }), \", \", _jsx(_components.code, {\n        children: \"error\"\n      }), \", \", _jsx(_components.code, {\n        children: \"warning\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"neutral\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex flexWrap=\\\"wrap\\\" gap={1}>\\n\\t<StatusBadge tone=\\\"info\\\" label=\\\"In progress\\\" />\\n\\t<StatusBadge tone=\\\"success\\\" label=\\\"Resolved\\\" />\\n\\t<StatusBadge tone=\\\"error\\\" label=\\\"Rejected\\\" />\\n\\t<StatusBadge tone=\\\"warning\\\" label=\\\"Attention\\\" />\\n\\t<StatusBadge tone=\\\"neutral\\\" label=\\\"Draft\\\" />\\n</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"NotificationBadge\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A notification badge is a visual indicator for numeric values.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex gap={1}>\\n\\t<NotificationBadge tone=\\\"neutral\\\" value={16} />\\n\\t<NotificationBadge tone=\\\"action\\\" value={8} />\\n</Flex>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Maximum value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"max\"\n      }), \" property where the count is expected to exceed a reasonable number, and the exact count is not particularly valuable to the user.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<NotificationBadge tone=\\\"action\\\" max={99} value={123} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"IndicatorDot\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A small decorative indicator used to call attention to an item, such as an unread message.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<IndicatorDot />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"An IndicatorDot should not be used on its own, as it gives no context. It should instead be considered as part of a wider composition.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Flex flexDirection=\\\"column\\\" as=\\\"ul\\\">\\n\\t<Flex\\n\\t\\tas=\\\"li\\\"\\n\\t\\taria-selected=\\\"false\\\"\\n\\t\\tborderColor=\\\"muted\\\"\\n\\t\\tborderY\\n\\t\\tcss={{\\n\\t\\t\\tbackgroundColor: boxPalette.systemInfoMuted,\\n\\t\\t}}\\n\\t\\tflexDirection=\\\"column\\\"\\n\\t\\tgap={0.5}\\n\\t\\tjustifyContent=\\\"space-between\\\"\\n\\t\\tpadding={1.5}\\n\\t\\twidth=\\\"100%\\\"\\n\\t>\\n\\t\\t<Flex justifyContent=\\\"space-between\\\">\\n\\t\\t\\t<Text fontSize=\\\"md\\\" fontWeight=\\\"bold\\\">\\n\\t\\t\\t\\tAction required\\n\\t\\t\\t</Text>\\n\\n\\t\\t\\t<Flex alignItems=\\\"center\\\" gap={0.5}>\\n\\t\\t\\t\\t<Text color=\\\"muted\\\">10:15am</Text>\\n\\t\\t\\t\\t<IndicatorDot tone=\\\"action\\\" />\\n\\t\\t\\t\\t<VisuallyHidden>Unread message</VisuallyHidden>\\n\\t\\t\\t</Flex>\\n\\t\\t</Flex>\\n\\n\\t\\t<Text fontSize=\\\"sm\\\">\\n\\t\\t\\tYour application to register establishment Orange Meat Works needs more\\n\\t\\t\\tinformation. Please provide your ABN/ACN by 12 June 2022 to avoid delays.\\n\\t\\t</Text>\\n\\n\\t\\t<div>\\n\\t\\t\\t<TextLink href=\\\"#details\\\">View details</TextLink>\\n\\t\\t</div>\\n\\t</Flex>\\n</Flex>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Badge","description":"Badges are decorative indicators used to either call attention to an item or for communicating non-actionable, supplemental information.","group":"Content","storybookPath":"/story/content-badge-statusbadge--basic"}},"data":{"title":"Badge","description":"Badges are decorative indicators used to either call attention to an item or for communicating non-actionable, supplemental information.","group":"Content","storybookPath":"/story/content-badge-statusbadge--basic"},"name":"@ag.ds-next/badge","version":"3.0.0","title":"Badge","description":"Badges are decorative indicators used to either call attention to an item or for communicating non-actionable, supplemental information.","storybookPath":"/story/content-badge-statusbadge--basic","subNavItems":[{"label":"Overview","href":"/components/badge","path":"/home/runner/work/agds-next/agds-next/packages/badge/docs/overview.mdx"},{"label":"Content","href":"/components/badge/content","path":"/home/runner/work/agds-next/agds-next/packages/badge/docs/content.mdx"},{"label":"Code","href":"/components/badge/code","path":"/home/runner/work/agds-next/agds-next/packages/badge/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG Branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call To Action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control Input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date Picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction Link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File Upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form Stack","href":"/components/form-stack"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero Banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage Nav","href":"/components/inpage-nav"},{"label":"Keyword List","href":"/components/keyword-list"},{"label":"Link List","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main Nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page Alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress Indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search Box","href":"/components/search-box"},{"label":"Search Input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side Nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip Link","href":"/components/skip-link"},{"label":"Sub Nav","href":"/components/sub-nav"},{"label":"Summary List","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task List","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text Input","href":"/components/text-input"},{"label":"Text Link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/badge","label":"Badge"},{"label":"Code"}],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"StatusBadge\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"NotificationBadge\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"IndicatorDot\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}