{"pageProps":{"pkg":{"slug":"select","source":{"compiledSource":"var u=Object.defineProperty,d=Object.defineProperties;var b=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(e,l,a)=>l in e?u(e,l,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[l]=a,t=(e,l)=>{for(var a in l||(l={}))o.call(l,a)&&s(e,a,l[a]);if(i)for(var a of i(l))p.call(l,a)&&s(e,a,l[a]);return e},c=(e,l)=>d(e,b(l));var r=(e,l)=>{var a={};for(var n in e)o.call(e,n)&&l.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&i)for(var n of i(e))l.indexOf(n)<0&&p.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,l=r(n,[\"components\"]);return mdx(MDXLayout,c(t(t({},layoutProps),l),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h3\",null,\"Default\"),mdx(\"p\",null,\"Select boxes (drop-down lists) allow users to select a value from a list.\"),mdx(\"p\",null,\"By default, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Select\"),\" component does not expand to fill the available space.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    options={[\n        { value: 'a', label: 'Option A' },\n        { value: 'b', label: 'Option B' },\n        { value: 'c', label: 'Option C' },\n    ]}\n/>\n`)),mdx(\"h3\",null,\"Block\"),mdx(\"p\",null,\"Use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"block\"),\" prop to expand the component to fill the available space.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }],\\\\n    block: true\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    options={[\n        { value: 'a', label: 'Option A' },\n        { value: 'b', label: 'Option B' },\n        { value: 'c', label: 'Option C' },\n    ]}\n    block\n/>\n`)),mdx(\"h3\",null,\"Required\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"Select\"),\" component will always append \",mdx(\"inlineCode\",{parentName:\"p\"},\"(optional)\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"(required)\"),\" to the label based on the \",mdx(\"inlineCode\",{parentName:\"p\"},\"required\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Default\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }), /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Required\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    required: true,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }), /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Optional\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    required: false,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"Select\"],\"exampleType\":\"jsx\"}`}),`<Stack gap={1}>\n    <Select\n        label=\"Default\"\n        placeholder=\"Please select\"\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n    <Select\n        label=\"Required\"\n        placeholder=\"Please select\"\n        required\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n    <Select\n        label=\"Optional\"\n        placeholder=\"Please select\"\n        required={false}\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n</Stack>\n`)),mdx(\"h3\",null,\"Valid and invalid selects\"),mdx(\"p\",null,\"Use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"invalid\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"valid\"),\" props to indicate whether user select is valid (validates according to the elements settings) or invalid (does not validate according to the elements settings).\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Invalid\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    invalid: true,\\\\n    message: \\\\\"This select is invalid\\\\\",\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }), /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"Valid\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    valid: true,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"Select\"],\"exampleType\":\"jsx\"}`}),`<Stack gap={1}>\n    <Select\n        label=\"Invalid\"\n        placeholder=\"Please select\"\n        invalid\n        message=\"This select is invalid\"\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n    <Select\n        label=\"Valid\"\n        placeholder=\"Please select\"\n        valid\n        options={[\n            { value: 'a', label: 'Option A' },\n            { value: 'b', label: 'Option B' },\n            { value: 'c', label: 'Option C' },\n        ]}\n    />\n</Stack>\n`)),mdx(\"h3\",null,\"Disabled\"),mdx(\"p\",null,\"Disabled select elements are unusable and can not be clicked. This prevents a user from interacting with the select element until another action is complete. Disabled select elements in a form will not be submitted.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Select, {\\\\n    label: \\\\\"What option?\\\\\",\\\\n    placeholder: \\\\\"Please select\\\\\",\\\\n    disabled: true,\\\\n    options: [{\\\\n      value: 'a',\\\\n      label: 'Option A'\\\\n    }, {\\\\n      value: 'b',\\\\n      label: 'Option B'\\\\n    }, {\\\\n      value: 'c',\\\\n      label: 'Option C'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"Select\"],\"exampleType\":\"jsx\"}`}),`<Select\n    label=\"What option?\"\n    placeholder=\"Please select\"\n    disabled\n    options={[\n        { value: 'a', label: 'Option A' },\n        { value: 'b', label: 'Option B' },\n        { value: 'c', label: 'Option C' },\n    ]}\n/>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Select","description":"Select provides a means to select a single item from a collapsible list. Use of select helps to reduce input errors and screen space. It's commonly used to help users enter a value into a form field.","group":"Forms"}},"data":{"title":"Select","description":"Select provides a means to select a single item from a collapsible list. Use of select helps to reduce input errors and screen space. It's commonly used to help users enter a value into a form field.","group":"Forms"},"name":"@ag.ds-next/select","version":"1.0.0","title":"Select"},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms","items":[{"label":"Button","href":"/packages/forms/button"},{"label":"Field","href":"/packages/forms/field"},{"label":"Search Box","href":"/packages/forms/search-box"},{"label":"Select","href":"/packages/forms/select"},{"label":"Text Input","href":"/packages/forms/text-input"},{"label":"Textarea","href":"/packages/forms/textarea"}]},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/forms","label":"Forms"},{"label":"Select"}]},"__N_SSG":true}