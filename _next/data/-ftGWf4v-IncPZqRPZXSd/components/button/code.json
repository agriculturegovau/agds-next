{"pageProps":{"pkg":{"slug":"button","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup>\\n\\t<Button variant=\\\"primary\\\">Primary</Button>\\n\\t<Button variant=\\\"secondary\\\">Secondary</Button>\\n\\t<Button variant=\\\"tertiary\\\">Tertiary</Button>\\n</ButtonGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A button communicates an action to a user and indicates what will happen next.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are 3 visual button weights that convey their visual prominence: primary, secondary and tertiary.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Make sure you include a \", _jsx(_components.a, {\n        href: \"/components/button/rationale#meaningful-text-label\",\n        children: \"meaningful text label\"\n      }), \" with or without an icon on a button.\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use if the user needs to perform an action\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"left-align buttons from the most to least important action\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a meaningful text label with or without an icon\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use only one Primary button on a page. You can use more than one Secondary or Tertiary button.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use a button if a user needs to go to another page – use a link or a link that looks like a button\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use disabled buttons as they can confuse users because they:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"don't tell users why the content is unavailable\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"are not keyboard accessible.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"can be hard for users with a visual impairment to see.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Primary\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Primary button uses a solid background and is the most prominent button on a page. A single Primary button should be used for the main action a user needs to complete on a page or a critical call to action.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some pages won’t have a primary action, instead they’ll have multiple secondary or tertiary actions.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don’t include multiple Primary buttons on a page.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Button variant=\\\"primary\\\">Primary button</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Secondary\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Secondary button has a clear background and solid border making it less prominent than a Primary button. Secondary buttons should be used for less important actions than the main action.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Secondary button is often paired with a Primary button. Typically it performs the opposite action to the primary button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can use multiple Secondary buttons on a page.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Button variant=\\\"secondary\\\">Secondary button</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tertiary\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Tertiary button has no border or background to make it the least prominent button style. It is used for the least important actions on a page.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can use multiple Tertiary buttons on a page.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Button variant=\\\"tertiary\\\">Tertiary button</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Text\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Text button is styled like the Tertiary button but has no padding. A Text button should only be used in situations like tables where there is limited space.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can use multiple Text buttons on a page.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Button variant=\\\"text\\\">Text button</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Block\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Block button spans the full width of the container or parent element.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Button type=\\\"submit\\\" block>\\n\\tSubmit\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Loading\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use the loading property to let users know their action is being processed.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Button type=\\\"submit\\\" loading>\\n\\tSubmit\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A user can’t interact with a disabled button. They are low contrast to indicate the user can’t take an action at that time in their journey which can cause issues for users with vision impairment.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Avoid using disabled buttons as they can be confusing for many users. Instead, allow users to interact with the button and receive feedback about why the action cannot be completed.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup>\\n\\t<Button variant=\\\"primary\\\" disabled>\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" disabled>\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"tertiary\\\" disabled>\\n\\t\\tTertiary\\n\\t</Button>\\n</ButtonGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Icons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"An icon can be used next to a \", _jsx(_components.a, {\n        href: \"/components/button/rationale#meaningful-text-label\",\n        children: \"meaningful text label\"\n      }), \" in a button to help users quickly recognise what the button does.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use icons that accurately communicate the label meaning and describe the action. For example, search fields on mobile often use a magnifying glass icon without a label due to space constraints.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonLink href=\\\"/sign-out\\\" iconAfter={AvatarIcon}>\\n\\tSign out\\n</ButtonLink>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Links\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can style links to look like buttons to make them more prominent.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \" adopts the Link component from your chosen router framework, which you can set in the \", _jsx(_components.a, {\n        href: \"/components/core\",\n        children: \"Core component\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonLink href=\\\"/sign-in\\\">Sign in</ButtonLink>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Size\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Size is a property that allows you to adjust the visual weight of a button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The medium button should be used in most cases to provide a large click target.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup>\\n\\t<Button variant=\\\"primary\\\" size=\\\"sm\\\">\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" size=\\\"sm\\\">\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"tertiary\\\" size=\\\"sm\\\">\\n\\t\\tTertiary\\n\\t</Button>\\n</ButtonGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Colour\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If a button sits inside an interface element that uses the light colour palette, make sure you use the light action colour for the button. If a button sits inside an interface element that uses the dark colour palette, make sure you use the dark action colour for the button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don't draw attention to destructive actions like “delete” or “remove” by using red buttons. The colour red is reserved for errors.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Box palette=\\\"dark\\\" background=\\\"body\\\" padding={1}>\\n\\t<ButtonGroup>\\n\\t\\t<Button variant=\\\"primary\\\">Primary</Button>\\n\\t\\t<Button variant=\\\"secondary\\\">Secondary</Button>\\n\\t\\t<Button variant=\\\"tertiary\\\">Tertiary</Button>\\n\\t</ButtonGroup>\\n</Box>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Button groups\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For convenience, you can use all 3 button weights in a group side-by-side in a line.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On mobile, buttons will be stacked on top of one another and span the full width of a screen. This ensures they’re easily accessible by both left and right-handed users.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup>\\n\\t<Button variant=\\\"primary\\\">Primary</Button>\\n\\t<Button variant=\\\"secondary\\\">Secondary</Button>\\n\\t<Button variant=\\\"tertiary\\\">Tertiary</Button>\\n</ButtonGroup>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Button","description":"A button communicates an action to a user and indicates what will happen next.","group":"Forms","storybookPath":"/story/forms-button--basic"}},"data":{"title":"Button","description":"A button communicates an action to a user and indicates what will happen next.","group":"Forms","storybookPath":"/story/forms-button--basic"},"name":"@ag.ds-next/button","version":"12.0.0","title":"Button","description":"A button communicates an action to a user and indicates what will happen next.","storybookPath":"/story/forms-button--basic","subNavItems":[{"label":"Overview","href":"/components/button","path":"/home/runner/work/agds-next/agds-next/packages/button/docs/overview.mdx"},{"label":"Rationale","href":"/components/button/rationale","path":"/home/runner/work/agds-next/agds-next/packages/button/docs/rationale.mdx"},{"label":"Content","href":"/components/button/content","path":"/home/runner/work/agds-next/agds-next/packages/button/docs/content.mdx"},{"label":"Code","href":"/components/button/code","path":"/home/runner/work/agds-next/agds-next/packages/button/docs/code.mdx"},{"label":"Accessibility","href":"/components/button/accessibility","path":"/home/runner/work/agds-next/agds-next/packages/button/docs/accessibility.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG Branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call To Action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control Input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date Picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction Link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File Upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form Stack","href":"/components/form-stack"},{"label":"Global Alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero Banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage Nav","href":"/components/inpage-nav"},{"label":"Link List","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main Nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page Alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress Indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search Box","href":"/components/search-box"},{"label":"Search Input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side Nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip Link","href":"/components/skip-link"},{"label":"Sub Nav","href":"/components/sub-nav"},{"label":"Summary List","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task List","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text Input","href":"/components/text-input"},{"label":"Text Link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/button","label":"Button"},{"label":"Code"}],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"Button\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"ButtonLink\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}