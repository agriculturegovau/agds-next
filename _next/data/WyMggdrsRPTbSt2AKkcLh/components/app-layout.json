{"pageProps":{"pkg":{"slug":"app-layout","name":"app-layout","title":"App layout","description":"The app layout provides a consistent way for users to navigate around a web application and access their account settings.","storybookPath":"/story/layout-applayout--default","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/app-layout","path":"/home/runner/work/agds-next/agds-next/packages/react/src/app-layout/docs/overview.mdx"},{"label":"Code","href":"/components/app-layout/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/app-layout/docs/code.mdx"}],"relatedComponents":null,"relatedPatterns":["focus-mode"],"deprecated":false,"unreleased":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date picker (Next)","href":"/components/date-picker-next"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Date range picker (Next)","href":"/components/date-range-picker-next"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Drawer","href":"/components/drawer"},{"label":"Dropdown menu","href":"/components/dropdown-menu"},{"label":"Feature link list","href":"/components/feature-link-list"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter sidebar","href":"/components/filter-sidebar"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Grouped fields","href":"/components/grouped-fields"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"List","href":"/components/list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Password input","href":"/components/password-input"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Section alert","href":"/components/section-alert"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tabs","href":"/components/tabs"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"},{"label":"Time input","href":"/components/time-input"},{"label":"Time picker","href":"/components/time-picker"},{"label":"Toggle button","href":"/components/toggle-button"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"App layout"}],"toc":[{"id":"overview","title":"Overview","level":2,"slug":"overview","items":[]},{"id":"usage-guidelines","title":"Usage guidelines","level":2,"slug":"usage-guidelines","items":[]},{"id":"app-layout-header","title":"App layout header","level":2,"slug":"app-layout-header","items":[{"id":"co-branding","title":"Co-branding","level":3,"slug":"co-branding","items":[]}]},{"id":"app-layout-sidebar","title":"App layout sidebar","level":2,"slug":"app-layout-sidebar","items":[{"id":"sub-level-items","title":"Sub-level items","level":3,"slug":"sub-level-items","items":[]},{"id":"visible-when-active","title":"Visible when active","level":4,"slug":"visible-when-active","items":[]},{"id":"always-visible","title":"Always visible","level":4,"slug":"always-visible","items":[]}]},{"id":"app-layout-footer","title":"App layout footer","level":2,"slug":"app-layout-footer","items":[]},{"title":"Related patterns","slug":"related-patterns","id":"related-patterns","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    ul: \"ul\",\n    strong: \"strong\",\n    h3: \"h3\",\n    code: \"code\",\n    em: \"em\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {ImageWithBorder, DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!ImageWithBorder) _missingMdxReference(\"ImageWithBorder\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Overview\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The app layout is a single component that consists of 3 parts. All 3 parts should be used together across all pages of a web application.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#app-layout-header\",\n          children: \"App layout header\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#app-layout-sidebar\",\n          children: \"App layout sidebar\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#app-layout-footer\",\n          children: \"App layout footer\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use the app layout for web applications, not informational websites, as the layout is better suited to task-oriented interactions.\"\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      alt: \"Screenshot of App layout components with annotations labelling the header, sidebar and footer\",\n      src: \"/img/components/app-layout.png\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage guidelines\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use the app layout for web applications i.e. task oriented websites that users generally need to sign in to access.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use the app layout consistently on all pages of an application\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"display the app layout sidebar by default on general app pages\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"hide the app layout sidebar for forms to support user focus\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use all parts of the app layout always\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"use the app layout for informational websites, use the informational website templates instead: \", _jsx(_components.a, {\n          href: \"/templates/home\",\n          children: \"home page\"\n        }), \", \", _jsx(_components.a, {\n          href: \"/templates/category\",\n          children: \"category page\"\n        }), \", \", _jsx(_components.a, {\n          href: \"/templates/subcategory\",\n          children: \"subcategory page\"\n        }), \", and \", _jsx(_components.a, {\n          href: \"/templates/content\",\n          children: \"content page\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use some parts of this component and not others, they should always be used together.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"App layout header\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The app layout header tells users what application they’re using and displays the logo.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Heading and subline\"\n          }), \" - The heading should be set to the website or service title and the subline can be used to provide additional information to describe your website or service.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Account details\"\n          }), \" - A user’s name and avatar or entity information should be displayed in the top right corner to clearly show which account they’re signed in to. Users can access their account settings via the dropdown.\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Co-branding\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The app layout header component can be used with no logo, one logo, or two logos when the \", _jsx(_components.a, {\n        href: \"https://www.pmc.gov.au/publications/australian-government-branding-guildelines\",\n        children: \"Australian Government Brand Guidelines\"\n      }), \" for Program or International branding are met. Each logo can be a link when an \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"secondHref\"\n      }), \" are defined.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.em, {\n        children: [\"Note: The first logo’s \", _jsx(_components.code, {\n          children: \"href\"\n        }), \" will be assigned to the \", _jsx(_components.code, {\n          children: \"heading\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"subLine\"\n        }), \" text as well.\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"App layout sidebar\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The app layout sidebar houses the main navigational menu which provides users with a consistent way to navigate around a web application.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Each menu item can have an optional icon on the left to help users scan the menu faster. Menu items can also have a \", _jsx(_components.a, {\n        href: \"/components/notification-badge\",\n        children: \"Notification badge\"\n      }), \" on the right to indicate the number of notifications.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The app layout sidebar should be hidden while users are completing multi-page forms. This is known as \", _jsx(_components.a, {\n        href: \"/patterns/focus-mode\",\n        children: \"focus mode\"\n      }), \" and is intended to reduce distractions and cognitive load.\"]\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      alt: \"Screenshot of App layout components in focus mode with annotations labelling the header and footer\",\n      src: \"/img/components/app-layout-focus-mode.png\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Sub-level items\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When choosing if sub-level items should be always visible or only visible when active you should consider:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"How many sub-level items will each top-level item have?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Do users need to see sub-level items to understand the structure of your site?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Do users need to jump to sub-level items quickly to complete frequent tasks?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Will visible sub-level items cause excessive scrolling or tab stops for keyboard users?\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Visible when active\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Sub-level items can be revealed when the parent item is active. This approach is best when the number of visible items in the list will increase cognitive load, for example by causing excessive scrolling and tab stops for keyboard users.\\nVisible when active is the default behaviour. Setting \", _jsx(_components.code, {\n        children: \"subLevelVisible=\\\"whenActive\\\"\"\n      }), \" or omitting this prop will result in sub-level links that are only visible when active.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Always visible\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Making sub-level items always visible will help users if:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"you have a small number of items and it’s easy for users to see all items at once without excessive scroll or tab stops,\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"it will help users understand the structure of your site,\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"you know users need to jump to sub-levels to quickly to complete frequent tasks.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Setting \", _jsx(_components.code, {\n        children: \"subLevelVisible=\\\"always\\\"\"\n      }), \" will result in sub-links that are always visible.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"App layout footer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The footer lives at the bottom of a page and generally contains copyright information and links to other sections of the website application.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"App layout","description":"The app layout provides a consistent way for users to navigate around a web application and access their account settings.","group":"Layout","storybookPath":"/story/layout-applayout--default","relatedPatterns":["focus-mode"]}},"relatedPatterns":[{"slug":"focus-mode","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading, ImageWithBorder} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  if (!ImageWithBorder) _missingMdxReference(\"ImageWithBorder\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Focus mode refers to temporarily hiding the main navigation of a website or application to reduce distractions and cognitive load.\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"use focus mode on multi-page forms\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"trigger a \", _jsx(_components.a, {\n          href: \"/components/modal\",\n          children: \"Modal\"\n        }), \" dialog if users navigate away from the form flow to help prevent them from losing data\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"always ensure the user can escape focus mode and return to standard navigation patterns via a ‘back’, ‘save and exit’ or ‘cancel’ button.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"allow users to control whether focus mode is on or off, it should be controlled by the system\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use focus mode on information website content pages where a user needs to access navigation.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Focus mode in App layout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/app-layout#app-layout-sidebar\",\n        children: \"App layout sidebar\"\n      }), \" should be hidden while users are completing multi-page forms to reduce distractions and cognitive load. This can be achieved by setting the \", _jsx(_components.code, {\n        children: \"focusMode\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"AppLayout\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Display the \", _jsx(_components.a, {\n        href: \"/components/app-layout#app-layout-sidebar\",\n        children: \"App layout sidebar\"\n      }), \" with the \", _jsx(_components.a, {\n        href: \"/components/progress-indicator\",\n        children: \"Progress indicator\"\n      }), \", as they’re both navigational items that compete for attention. Displaying both on the screen also limits space for the main content.\"]\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      alt: \"Screenshot of App layout components with an outlined box highlighting the App layout sidebar component\",\n      src: \"/img/patterns/focus-mode-app-layout-wrong.png\"\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Remove the \", _jsx(_components.a, {\n        href: \"/components/main-nav\",\n        children: \"Main nav\"\n      }), \" on informational website multi-page forms to simplify the screen, reduce distractions and the risk of users accidently navigating away from the form flow.\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Use focus mode on informational website content pages where a user needs to access navigation.\"\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      alt: \"Screenshot of App layout components in focus mode, with an outlined box highlighting where the App layout sidebar would usually be placed\",\n      src: \"/img/patterns/focus-mode-app-layout.png\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Focus mode in informational websites\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On informational websites, focus mode hides the main navigation and changes the header component to the small variant to save vertical space.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To do this, please refer the code example in the \", _jsx(_components.a, {\n        href: \"https://github.com/agriculturegovau/agds-next/blob/main/example-site/components/SiteHeader.tsx\",\n        children: \"example site\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Remove the \", _jsx(_components.a, {\n        href: \"/components/app-layout#app-layout-sidebar\",\n        children: \"App layout sidebar\"\n      }), \" to simplify the screen, reduce distractions and the risk of users accidently navigating away from the form flow.\"]\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      alt: \"Example usage of the Header and Main nav components with an arrow pointing down to another example of these components in focus mode\",\n      src: \"/img/patterns/focus-mode-informational-website.png\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Modal dialog\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Even though focus mode hides the main navigation, users could still navigate away from the form via the links in the header, footer, or even the browser back button. To help prevent users from losing data they’ve already entered into a form, trigger a \", _jsx(_components.a, {\n        href: \"/components/modal\",\n        children: \"Modal\"\n      }), \" dialog in case they mistakenly navigated away from the form.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/storybook/index.html?path=/story/content-modal--leaving-form-page\",\n        children: \"View storybook preview\"\n      })\n    }), \"\\n\", _jsx(ImageWithBorder, {\n      alt: \"Screenshot of an open Modal dialog with the title ‘Are you sure you want to leave this page?’ and description ‘You will lose all changes made since your last save.’\",\n      src: \"/img/patterns/focus-mode-modal.png\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Focus mode","description":"Used to help reduce distractions so that users can focus on completing a specific task.","relatedComponents":["app-layout","modal","header","main-nav"]}},"content":"\nFocus mode refers to temporarily hiding the main navigation of a website or application to reduce distractions and cognitive load.\n\n<DoHeading />\n\n- use focus mode on multi-page forms\n- trigger a [Modal](/components/modal) dialog if users navigate away from the form flow to help prevent them from losing data\n- always ensure the user can escape focus mode and return to standard navigation patterns via a ‘back’, ‘save and exit’ or ‘cancel’ button.\n\n<DontHeading />\n\n- allow users to control whether focus mode is on or off, it should be controlled by the system\n- use focus mode on information website content pages where a user needs to access navigation.\n\n## Focus mode in App layout\n\nThe [App layout sidebar](/components/app-layout#app-layout-sidebar) should be hidden while users are completing multi-page forms to reduce distractions and cognitive load. This can be achieved by setting the `focusMode` prop to `true` on the `AppLayout` component.\n\n<DontHeading />\n\nDisplay the [App layout sidebar](/components/app-layout#app-layout-sidebar) with the [Progress indicator](/components/progress-indicator), as they’re both navigational items that compete for attention. Displaying both on the screen also limits space for the main content.\n\n<ImageWithBorder\n\talt=\"Screenshot of App layout components with an outlined box highlighting the App layout sidebar component\"\n\tsrc=\"/img/patterns/focus-mode-app-layout-wrong.png\"\n/>\n\n<DoHeading />\n\nRemove the [Main nav](/components/main-nav) on informational website multi-page forms to simplify the screen, reduce distractions and the risk of users accidently navigating away from the form flow.\n\n<DontHeading />\n\nUse focus mode on informational website content pages where a user needs to access navigation.\n\n<ImageWithBorder\n\talt=\"Screenshot of App layout components in focus mode, with an outlined box highlighting where the App layout sidebar would usually be placed\"\n\tsrc=\"/img/patterns/focus-mode-app-layout.png\"\n/>\n\n## Focus mode in informational websites\n\nOn informational websites, focus mode hides the main navigation and changes the header component to the small variant to save vertical space.\n\nTo do this, please refer the code example in the [example site](https://github.com/agriculturegovau/agds-next/blob/main/example-site/components/SiteHeader.tsx).\n\n<DoHeading />\n\nRemove the [App layout sidebar](/components/app-layout#app-layout-sidebar) to simplify the screen, reduce distractions and the risk of users accidently navigating away from the form flow.\n\n<ImageWithBorder\n\talt=\"Example usage of the Header and Main nav components with an arrow pointing down to another example of these components in focus mode\"\n\tsrc=\"/img/patterns/focus-mode-informational-website.png\"\n/>\n\n## Modal dialog\n\nEven though focus mode hides the main navigation, users could still navigate away from the form via the links in the header, footer, or even the browser back button. To help prevent users from losing data they’ve already entered into a form, trigger a [Modal](/components/modal) dialog in case they mistakenly navigated away from the form.\n\n[View storybook preview](/storybook/index.html?path=/story/content-modal--leaving-form-page)\n\n<ImageWithBorder\n\talt=\"Screenshot of an open Modal dialog with the title ‘Are you sure you want to leave this page?’ and description ‘You will lose all changes made since your last save.’\"\n\tsrc=\"/img/patterns/focus-mode-modal.png\"\n/>\n","data":{"title":"Focus mode","description":"Used to help reduce distractions so that users can focus on completing a specific task.","relatedComponents":["app-layout","modal","header","main-nav"]},"title":"Focus mode","description":"Used to help reduce distractions so that users can focus on completing a specific task.","figmaTemplateNodeId":null,"githubTemplatePath":null,"storybookPath":null,"relatedComponents":["app-layout","modal","header","main-nav"]}],"relatedComponents":null},"__N_SSG":true}