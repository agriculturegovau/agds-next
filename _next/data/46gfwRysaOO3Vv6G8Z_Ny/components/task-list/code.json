{"pageProps":{"pkg":{"slug":"task-list","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"The individual tasks or steps are shown as either:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"todo\"\n        }), \" – the task is available for the user to do\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"doing\"\n        }), \" – the task has been started\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"done\"\n        }), \" – the task has been completed\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Lorem ipsum dolor sit amet',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'doing',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tmessage: 'Not available until previous tasks are done',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Nonsequential\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the list of tasks can be done in any order, you can set the \", _jsx(_components.code, {\n        children: \"ordered\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"false\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\tordered={false}\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Lorem ipsum dolor sit amet',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\thref: '#',\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If an item does not specify a \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" attribute a \", _jsx(_components.code, {\n        children: \"button\"\n      }), \" element will be rendered. This enables you to reponds to various mouse events such as \", _jsx(_components.code, {\n        children: \"onClick\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<TaskList\\n\\titems={[\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Check eligibility',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Lorem ipsum dolor sit amet',\\n\\t\\t\\tstatus: 'done',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Case Studies',\\n\\t\\t\\tstatus: 'doing',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonClick: console.log,\\n\\t\\t\\tlabel: 'Review and submit',\\n\\t\\t\\tmessage: 'Not available until previous tasks are done',\\n\\t\\t\\tstatus: 'todo',\\n\\t\\t},\\n\\t]}\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Task List","description":null,"group":"Forms","storybookPath":"/story/forms-tasklist--on-light"}},"data":{"title":"Task List","description":null,"group":"Forms","storybookPath":"/story/forms-tasklist--on-light"},"title":"Task List","storybookPath":"/story/forms-tasklist--on-light","subNavItems":[{"label":"Overview","href":"/components/task-list","path":"/home/runner/work/agds-next/agds-next/packages/react/src/task-list/docs/overview.mdx"},{"label":"Code","href":"/components/task-list/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/task-list/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG Branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call To Action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control Input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date Picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction Link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File Upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form Stack","href":"/components/form-stack"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero Banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage Nav","href":"/components/inpage-nav"},{"label":"Keyword List","href":"/components/keyword-list"},{"label":"Link List","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main Nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page Alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress Indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search Box","href":"/components/search-box"},{"label":"Select","href":"/components/select"},{"label":"Side Nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip Link","href":"/components/skip-link"},{"label":"Sub Nav","href":"/components/sub-nav"},{"label":"Summary List","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task List","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text Input","href":"/components/text-input"},{"label":"Text Link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"href":"/components/task-list","label":"Task List"},{"label":"Code"}],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {ComponentPropsTable} = _components;\n  if (!ComponentPropsTable) _missingMdxReference(\"ComponentPropsTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Props\"\n    }), \"\\n\", _jsx(ComponentPropsTable, {\n      name: \"TaskList\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}