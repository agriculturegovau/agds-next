{"pageProps":{"pkg":{"slug":"task-list","source":{"compiledSource":"var m=Object.defineProperty,p=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var r=(e,n,t)=>n in e?m(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,a=(e,n)=>{for(var t in n||(n={}))i.call(n,t)&&r(e,t,n[t]);if(l)for(var t of l(n))o.call(n,t)&&r(e,t,n[t]);return e},d=(e,n)=>p(e,c(n));var u=(e,n)=>{var t={};for(var s in e)i.call(e,s)&&n.indexOf(s)<0&&(t[s]=e[s]);if(e!=null&&l)for(var s of l(e))n.indexOf(s)<0&&o.call(e,s)&&(t[s]=e[s]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:e}=s,n=u(s,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"The individual tasks or steps are shown as either:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"todo\"),\" \\u2013 the task is available for the user to do\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"doing\"),\" \\u2013 the task has been started\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"done\"),\" \\u2013 the task has been completed\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(TaskList, {\\\\n    items: [{\\\\n      href: '#',\\\\n      label: 'Check eligibility',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Lorem ipsum dolor sit amet',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Case Studies',\\\\n      status: 'doing'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Review and submit',\\\\n      message: 'Not available until previous tasks are done',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"TaskList\"],\"exampleType\":\"jsx\"}`}),`<TaskList\n    items={[\n        {\n            href: '#',\n            label: 'Check eligibility',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Lorem ipsum dolor sit amet',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Case Studies',\n            status: 'doing',\n        },\n        {\n            href: '#',\n            label: 'Review and submit',\n            message: 'Not available until previous tasks are done',\n            status: 'todo',\n        },\n    ]}\n/>\n`)),mdx(\"h2\",null,\"Nonsequential\"),mdx(\"p\",null,\"If the list of tasks can be done in any order, you can set the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ordered\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(TaskList, {\\\\n    ordered: false,\\\\n    items: [{\\\\n      href: '#',\\\\n      label: 'Check eligibility',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Lorem ipsum dolor sit amet',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Review and submit',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"TaskList\"],\"exampleType\":\"jsx\"}`}),`<TaskList\n    ordered={false}\n    items={[\n        {\n            href: '#',\n            label: 'Check eligibility',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Lorem ipsum dolor sit amet',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Case Studies',\n            status: 'todo',\n        },\n        {\n            href: '#',\n            label: 'Review and submit',\n            status: 'todo',\n        },\n    ]}\n/>\n`)),mdx(\"h2\",null,\"Buttons\"),mdx(\"p\",null,\"If an item does not specify a \",mdx(\"inlineCode\",{parentName:\"p\"},\"href\"),\" attribute a \",mdx(\"inlineCode\",{parentName:\"p\"},\"button\"),\" element will be rendered. This enables you to reponds to various mouse events such as \",mdx(\"inlineCode\",{parentName:\"p\"},\"onClick\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(TaskList, {\\\\n    items: [{\\\\n      onClick: console.log,\\\\n      label: 'Check eligibility',\\\\n      status: 'done'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Lorem ipsum dolor sit amet',\\\\n      status: 'done'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Case Studies',\\\\n      status: 'doing'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Review and submit',\\\\n      message: 'Not available until previous tasks are done',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"TaskList\",\"console\"],\"exampleType\":\"jsx\"}`}),`<TaskList\n    items={[\n        {\n            onClick: console.log,\n            label: 'Check eligibility',\n            status: 'done',\n        },\n        {\n            onClick: console.log,\n            label: 'Lorem ipsum dolor sit amet',\n            status: 'done',\n        },\n        {\n            onClick: console.log,\n            label: 'Case Studies',\n            status: 'doing',\n        },\n        {\n            onClick: console.log,\n            label: 'Review and submit',\n            message: 'Not available until previous tasks are done',\n            status: 'todo',\n        },\n    ]}\n/>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Task List","description":null,"group":"Forms","storybookPath":"/story/forms-tasklist--on-light"}},"data":{"title":"Task List","description":null,"group":"Forms","storybookPath":"/story/forms-tasklist--on-light"},"name":"@ag.ds-next/task-list","version":"9.0.0","title":"Task List","storybookPath":"/story/forms-tasklist--on-light","subNavItems":[{"label":"Overview","href":"/packages/forms/task-list","path":"/home/runner/work/agds-next/agds-next/packages//task-list/docs/overview.mdx"},{"label":"Code","href":"/packages/forms/task-list/code","path":"/home/runner/work/agds-next/agds-next/packages/task-list/docs//code.mdx"}]},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms","items":[{"label":"Button","href":"/packages/forms/button"},{"label":"Control Input","href":"/packages/forms/control-input"},{"label":"Date Picker","href":"/packages/forms/date-picker"},{"label":"Field","href":"/packages/forms/field"},{"label":"Fieldset","href":"/packages/forms/fieldset"},{"label":"File Upload","href":"/packages/forms/file-upload"},{"label":"Form Stack","href":"/packages/forms/form-stack"},{"label":"Progress Indicator","href":"/packages/forms/progress-indicator"},{"label":"Search Box","href":"/packages/forms/search-box"},{"label":"Select","href":"/packages/forms/select"},{"label":"Switch","href":"/packages/forms/switch"},{"label":"Task List","href":"/packages/forms/task-list"},{"label":"Text Input","href":"/packages/forms/text-input"},{"label":"Textarea","href":"/packages/forms/textarea"}]},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/forms","label":"Forms"},{"href":"/packages/forms/task-list","label":"Task List"},{"label":"Code"}],"content":{"compiledSource":"var u=Object.defineProperty,i=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var c=(o,e,n)=>e in o?u(o,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[e]=n,p=(o,e)=>{for(var n in e||(e={}))s.call(e,n)&&c(o,n,e[n]);if(r)for(var n of r(e))a.call(e,n)&&c(o,n,e[n]);return o},m=(o,e)=>i(o,l(e));var d=(o,e)=>{var n={};for(var t in o)s.call(o,t)&&e.indexOf(t)<0&&(n[t]=o[t]);if(o!=null&&r)for(var t of r(o))e.indexOf(t)<0&&a.call(o,t)&&(n[t]=o[t]);return n};const makeShortcode=o=>function(n){return console.warn(\"Component \"+o+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",p({},n))},ComponentPropsTable=makeShortcode(\"ComponentPropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:o}=t,e=d(t,[\"components\"]);return mdx(MDXLayout,m(p(p({},layoutProps),e),{components:o,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Props\"),mdx(ComponentPropsTable,{name:\"TaskList\",mdxType:\"ComponentPropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}