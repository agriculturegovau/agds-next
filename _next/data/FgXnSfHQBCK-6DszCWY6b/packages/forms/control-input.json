{"pageProps":{"pkg":{"slug":"control-input","source":{"compiledSource":"var p=Object.defineProperty,u=Object.defineProperties;var R=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var i=(e,a,o)=>a in e?p(e,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[a]=o,l=(e,a)=>{for(var o in a||(a={}))c.call(a,o)&&i(e,o,a[o]);if(n)for(var o of n(a))r.call(a,o)&&i(e,o,a[o]);return e},s=(e,a)=>u(e,R(a));var d=(e,a)=>{var o={};for(var t in e)c.call(e,t)&&a.indexOf(t)<0&&(o[t]=e[t]);if(e!=null&&n)for(var t of n(e))a.indexOf(t)<0&&r.call(e,t)&&(o[t]=e[t]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var t=o,{components:e}=t,a=d(t,[\"components\"]);return mdx(MDXLayout,s(l(l({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h3\",null,\"Checkbox\"),mdx(\"p\",null,\"Check boxes allow users to select one or more items.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: true\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Checkbox\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Example\">\n    <Checkbox checked={false}>Phone</Checkbox>\n    <Checkbox checked={true}>Tablet</Checkbox>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Radio\"),mdx(\"p\",null,\"Radio inputs allow users to select one item at a time.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Example\">\n    <Radio checked={false}>Phone</Radio>\n    <Radio checked={true}>Tablet</Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Checkbox block\"),mdx(\"p\",null,\"Inline checkbox options can sometimes be difficult to scan. Users may find it challenging to determine with which label the checkbox option corresponds: the one before the checkbox or the one after. Vertical positioning of checkbox, with one choice per line, eliminates this potential cause for confusion.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Block example\\\\\",\\\\n    block: true\\\\n  }, /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: true\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Checkbox\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Block example\" block>\n    <Checkbox checked={false}>Phone</Checkbox>\n    <Checkbox checked={true}>Tablet</Checkbox>\n    <Checkbox checked={true}>Laptop</Checkbox>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Radio block\"),mdx(\"p\",null,\"Vertically stacked radio buttons.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Block example\\\\\",\\\\n    block: true\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Block example\" block>\n    <Radio checked={false}>Phone</Radio>\n    <Radio checked={false}>Tablet</Radio>\n    <Radio checked={true}>Laptop</Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Valid and invalid states\"),mdx(\"p\",null,\"Add a border around the control inputs to indicate valid or invalid selections.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Invalid example\\\\\",\\\\n    message: \\\\\"Select an option\\\\\",\\\\n    invalid: true\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    invalid: true\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    invalid: true\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    invalid: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Invalid example\" message=\"Select an option\" invalid>\n    <Radio checked={false} invalid>\n        Phone\n    </Radio>\n    <Radio checked={true} invalid>\n        Tablet\n    </Radio>\n    <Radio checked={false} invalid>\n        Laptop\n    </Radio>\n</ControlGroup>\n`)),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Valid example\\\\\",\\\\n    valid: true\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    valid: true\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    valid: true\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    valid: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Valid example\" valid>\n    <Radio checked={false} valid>\n        Phone\n    </Radio>\n    <Radio checked={true} valid>\n        Tablet\n    </Radio>\n    <Radio checked={false} valid>\n        Laptop\n    </Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Disabled control inputs\"),mdx(\"p\",null,\"Disabled control inputs can be used to indicate inputs that are no longer valid or expired.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Disabled example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    disabled: true\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    disabled: true\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Disabled example\">\n    <Radio checked={false} disabled>\n        Phone\n    </Radio>\n    <Radio checked={true} disabled>\n        Tablet\n    </Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Small inputs\"),mdx(\"p\",null,\"Smaller versions of control inputs.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Small example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    size: \\\\\"sm\\\\\"\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    size: \\\\\"sm\\\\\"\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Small example\">\n    <Radio checked={false} size=\"sm\">\n        Phone\n    </Radio>\n    <Radio checked={true} size=\"sm\">\n        Tablet\n    </Radio>\n</ControlGroup>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Control Input","description":"Control inputs help users input one or more selections from multiple options. Our control inputs consist of checkboxes and radio buttons.","group":"Forms","storybookPath":"/story/forms-checkbox--basic"}},"data":{"title":"Control Input","description":"Control inputs help users input one or more selections from multiple options. Our control inputs consist of checkboxes and radio buttons.","group":"Forms","storybookPath":"/story/forms-checkbox--basic"},"name":"@ag.ds-next/control-input","version":"11.0.0","title":"Control Input","storybookPath":"/story/forms-checkbox--basic","subNavItems":[{"label":"Overview","href":"/packages/forms/control-input","path":"/home/runner/work/agds-next/agds-next/packages/control-input/docs/overview.mdx"},{"label":"Code","href":"/packages/forms/control-input/code","path":"/home/runner/work/agds-next/agds-next/packages/control-input/docs/code.mdx"}]},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms","items":[{"label":"Button","href":"/packages/forms/button"},{"label":"Control Input","href":"/packages/forms/control-input"},{"label":"Date Picker","href":"/packages/forms/date-picker"},{"label":"Field","href":"/packages/forms/field"},{"label":"Fieldset","href":"/packages/forms/fieldset"},{"label":"File Upload","href":"/packages/forms/file-upload"},{"label":"Form Stack","href":"/packages/forms/form-stack"},{"label":"Progress Indicator","href":"/packages/forms/progress-indicator"},{"label":"Search Box","href":"/packages/forms/search-box"},{"label":"Select","href":"/packages/forms/select"},{"label":"Switch","href":"/packages/forms/switch"},{"label":"Task List","href":"/packages/forms/task-list"},{"label":"Text Input","href":"/packages/forms/text-input"},{"label":"Textarea","href":"/packages/forms/textarea"}]},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/packages","label":"Packages"},{"href":"/packages/forms","label":"Forms"},{"label":"Control Input"}],"content":{"compiledSource":"var p=Object.defineProperty,u=Object.defineProperties;var R=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var i=(e,a,o)=>a in e?p(e,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[a]=o,l=(e,a)=>{for(var o in a||(a={}))c.call(a,o)&&i(e,o,a[o]);if(n)for(var o of n(a))r.call(a,o)&&i(e,o,a[o]);return e},s=(e,a)=>u(e,R(a));var d=(e,a)=>{var o={};for(var t in e)c.call(e,t)&&a.indexOf(t)<0&&(o[t]=e[t]);if(e!=null&&n)for(var t of n(e))a.indexOf(t)<0&&r.call(e,t)&&(o[t]=e[t]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var t=o,{components:e}=t,a=d(t,[\"components\"]);return mdx(MDXLayout,s(l(l({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h3\",null,\"Checkbox\"),mdx(\"p\",null,\"Check boxes allow users to select one or more items.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: true\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Checkbox\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Example\">\n    <Checkbox checked={false}>Phone</Checkbox>\n    <Checkbox checked={true}>Tablet</Checkbox>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Radio\"),mdx(\"p\",null,\"Radio inputs allow users to select one item at a time.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Example\">\n    <Radio checked={false}>Phone</Radio>\n    <Radio checked={true}>Tablet</Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Checkbox block\"),mdx(\"p\",null,\"Inline checkbox options can sometimes be difficult to scan. Users may find it challenging to determine with which label the checkbox option corresponds: the one before the checkbox or the one after. Vertical positioning of checkbox, with one choice per line, eliminates this potential cause for confusion.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Block example\\\\\",\\\\n    block: true\\\\n  }, /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: true\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Checkbox, {\\\\n    checked: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Checkbox\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Block example\" block>\n    <Checkbox checked={false}>Phone</Checkbox>\n    <Checkbox checked={true}>Tablet</Checkbox>\n    <Checkbox checked={true}>Laptop</Checkbox>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Radio block\"),mdx(\"p\",null,\"Vertically stacked radio buttons.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Block example\\\\\",\\\\n    block: true\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Block example\" block>\n    <Radio checked={false}>Phone</Radio>\n    <Radio checked={false}>Tablet</Radio>\n    <Radio checked={true}>Laptop</Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Valid and invalid states\"),mdx(\"p\",null,\"Add a border around the control inputs to indicate valid or invalid selections.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Invalid example\\\\\",\\\\n    message: \\\\\"Select an option\\\\\",\\\\n    invalid: true\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    invalid: true\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    invalid: true\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    invalid: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Invalid example\" message=\"Select an option\" invalid>\n    <Radio checked={false} invalid>\n        Phone\n    </Radio>\n    <Radio checked={true} invalid>\n        Tablet\n    </Radio>\n    <Radio checked={false} invalid>\n        Laptop\n    </Radio>\n</ControlGroup>\n`)),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Valid example\\\\\",\\\\n    valid: true\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    valid: true\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    valid: true\\\\n  }, \\\\\"Tablet\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    valid: true\\\\n  }, \\\\\"Laptop\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Valid example\" valid>\n    <Radio checked={false} valid>\n        Phone\n    </Radio>\n    <Radio checked={true} valid>\n        Tablet\n    </Radio>\n    <Radio checked={false} valid>\n        Laptop\n    </Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Disabled control inputs\"),mdx(\"p\",null,\"Disabled control inputs can be used to indicate inputs that are no longer valid or expired.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Disabled example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    disabled: true\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    disabled: true\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Disabled example\">\n    <Radio checked={false} disabled>\n        Phone\n    </Radio>\n    <Radio checked={true} disabled>\n        Tablet\n    </Radio>\n</ControlGroup>\n`)),mdx(\"h3\",null,\"Small inputs\"),mdx(\"p\",null,\"Smaller versions of control inputs.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(ControlGroup, {\\\\n    label: \\\\\"Small example\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: false,\\\\n    size: \\\\\"sm\\\\\"\\\\n  }, \\\\\"Phone\\\\\"), /*#__PURE__*/React.createElement(Radio, {\\\\n    checked: true,\\\\n    size: \\\\\"sm\\\\\"\\\\n  }, \\\\\"Tablet\\\\\"));\\\\n}\",\"globals\":[\"ControlGroup\",\"Radio\"],\"exampleType\":\"jsx\"}'}),`<ControlGroup label=\"Small example\">\n    <Radio checked={false} size=\"sm\">\n        Phone\n    </Radio>\n    <Radio checked={true} size=\"sm\">\n        Tablet\n    </Radio>\n</ControlGroup>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Control Input","description":"Control inputs help users input one or more selections from multiple options. Our control inputs consist of checkboxes and radio buttons.","group":"Forms","storybookPath":"/story/forms-checkbox--basic"}}},"__N_SSG":true}