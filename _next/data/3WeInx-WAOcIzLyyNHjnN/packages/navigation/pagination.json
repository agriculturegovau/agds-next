{"pageProps":{"pkg":{"slug":"pagination","source":{"compiledSource":"var p=Object.defineProperty,g=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var u=(e,t,n)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,a=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&u(e,n,t[n]);if(o)for(var n of o(t))s.call(t,n)&&u(e,n,t[n]);return e},l=(e,t)=>g(e,m(t));var c=(e,t)=>{var n={};for(var r in e)i.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&o)for(var r of o(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:e}=r,t=c(r,[\"components\"]);return mdx(MDXLayout,l(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Pagination allows users to see total number of pages, which page they are viewing, and how to navigate to other pages.\"),mdx(\"p\",null,\"Use pagination to separate large lists of content, such as search results, into smaller lists that are easier to interact with. Showing content on several pages prevents your content from becoming too long and overwhelming.\"),mdx(\"h3\",null,\"Pagination\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Pagination, {\\\\n    currentPage: 5,\\\\n    totalPages: 10,\\\\n    generateHref: function generateHref(page) {\\\\n      return \\\\\"/example?page=\\\\\".concat(page);\\\\n    }\\\\n  });\\\\n}\",\"globals\":[\"Pagination\"],\"exampleType\":\"jsx\"}'}),`<Pagination\n    currentPage={5}\n    totalPages={10}\n    generateHref={(page) => \\`/example?page=\\${page}\\`}\n/>\n`)),mdx(\"h3\",null,\"Pagination Buttons\"),mdx(\"p\",null,\"By default, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Pagination\"),\" component renders a link for each list item. We strongly recommend using wherever possible as it the most inclusive and accessible solution for users.\"),mdx(\"p\",null,\"This requires you to manage the state of the current page in the URL, which usually fine, but in scenarios where that isn't possible we offer a \",mdx(\"inlineCode\",{parentName:\"p\"},\"PaginationButtons\"),\" component.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"PaginationButtons\"),\" renders a button element for each list item which makes it possible to manage the state outside of the URL, e.g. \",mdx(\"inlineCode\",{parentName:\"p\"},\"React.useState\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\"); }\\\\n\\\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\\\"string\\\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\\\"Object\\\\\" && o.constructor) n = o.constructor.name; if (n === \\\\\"Map\\\\\" || n === \\\\\"Set\\\\\") return Array.from(o); if (n === \\\\\"Arguments\\\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\\\n\\\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\\\"undefined\\\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\"return\\\\\"] != null) _i[\\\\\"return\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\nfunction Example() {\\\\n  return function () {\\\\n    var _React$useState = React.useState(5),\\\\n        _React$useState2 = _slicedToArray(_React$useState, 2),\\\\n        currentPage = _React$useState2[0],\\\\n        setCurrentPage = _React$useState2[1];\\\\n\\\\n    return /*#__PURE__*/React.createElement(PaginationButtons, {\\\\n      currentPage: currentPage,\\\\n      onChange: setCurrentPage,\\\\n      totalPages: 10\\\\n    });\\\\n  };\\\\n}\",\"globals\":[\"React\",\"PaginationButtons\"],\"exampleType\":\"jsx\"}'}),`() => {\n    const [currentPage, setCurrentPage] = React.useState(5);\n    return (\n        <PaginationButtons\n            currentPage={currentPage}\n            onChange={setCurrentPage}\n            totalPages={10}\n        />\n    );\n};\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Pagination","description":"Pagination allows large amounts of content to be separated into multiple pages.","group":"Navigation","storybookPath":"/story/navigation--basic"}},"data":{"title":"Pagination","description":"Pagination allows large amounts of content to be separated into multiple pages.","group":"Navigation","storybookPath":"/story/navigation--basic"},"name":"@ag.ds-next/pagination","version":"3.0.0","title":"Pagination","storybookPath":"/story/navigation--basic","subNavItems":[{"label":"Overview","href":"/packages/navigation/pagination","path":"/home/runner/work/agds-next/agds-next/packages/pagination/docs/overview.mdx"},{"label":"Code","href":"/packages/navigation/pagination/code","path":"/home/runner/work/agds-next/agds-next/packages/pagination/docs/code.mdx"}]},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms"},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation","items":[{"label":"Breadcrumbs","href":"/packages/navigation/breadcrumbs"},{"label":"Call To Action","href":"/packages/navigation/call-to-action"},{"label":"Direction Link","href":"/packages/navigation/direction-link"},{"label":"Inpage Nav","href":"/packages/navigation/inpage-nav"},{"label":"Link List","href":"/packages/navigation/link-list"},{"label":"Main Nav","href":"/packages/navigation/main-nav"},{"label":"Pagination","href":"/packages/navigation/pagination"},{"label":"Side Nav","href":"/packages/navigation/side-nav"},{"label":"Skip Link","href":"/packages/navigation/skip-link"},{"label":"Sub Nav","href":"/packages/navigation/sub-nav"},{"label":"Text Link","href":"/packages/navigation/text-link"}]}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/packages","label":"Packages"},{"href":"/packages/navigation","label":"Navigation"},{"label":"Pagination"}],"content":{"compiledSource":"var p=Object.defineProperty,g=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var u=(e,t,n)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,a=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&u(e,n,t[n]);if(o)for(var n of o(t))s.call(t,n)&&u(e,n,t[n]);return e},l=(e,t)=>g(e,m(t));var c=(e,t)=>{var n={};for(var r in e)i.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&o)for(var r of o(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:e}=r,t=c(r,[\"components\"]);return mdx(MDXLayout,l(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Pagination allows users to see total number of pages, which page they are viewing, and how to navigate to other pages.\"),mdx(\"p\",null,\"Use pagination to separate large lists of content, such as search results, into smaller lists that are easier to interact with. Showing content on several pages prevents your content from becoming too long and overwhelming.\"),mdx(\"h3\",null,\"Pagination\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Pagination, {\\\\n    currentPage: 5,\\\\n    totalPages: 10,\\\\n    generateHref: function generateHref(page) {\\\\n      return \\\\\"/example?page=\\\\\".concat(page);\\\\n    }\\\\n  });\\\\n}\",\"globals\":[\"Pagination\"],\"exampleType\":\"jsx\"}'}),`<Pagination\n    currentPage={5}\n    totalPages={10}\n    generateHref={(page) => \\`/example?page=\\${page}\\`}\n/>\n`)),mdx(\"h3\",null,\"Pagination Buttons\"),mdx(\"p\",null,\"By default, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Pagination\"),\" component renders a link for each list item. We strongly recommend using wherever possible as it the most inclusive and accessible solution for users.\"),mdx(\"p\",null,\"This requires you to manage the state of the current page in the URL, which usually fine, but in scenarios where that isn't possible we offer a \",mdx(\"inlineCode\",{parentName:\"p\"},\"PaginationButtons\"),\" component.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"PaginationButtons\"),\" renders a button element for each list item which makes it possible to manage the state outside of the URL, e.g. \",mdx(\"inlineCode\",{parentName:\"p\"},\"React.useState\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\"); }\\\\n\\\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\\\"string\\\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\\\"Object\\\\\" && o.constructor) n = o.constructor.name; if (n === \\\\\"Map\\\\\" || n === \\\\\"Set\\\\\") return Array.from(o); if (n === \\\\\"Arguments\\\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\\\n\\\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\\\"undefined\\\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\"return\\\\\"] != null) _i[\\\\\"return\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\nfunction Example() {\\\\n  return function () {\\\\n    var _React$useState = React.useState(5),\\\\n        _React$useState2 = _slicedToArray(_React$useState, 2),\\\\n        currentPage = _React$useState2[0],\\\\n        setCurrentPage = _React$useState2[1];\\\\n\\\\n    return /*#__PURE__*/React.createElement(PaginationButtons, {\\\\n      currentPage: currentPage,\\\\n      onChange: setCurrentPage,\\\\n      totalPages: 10\\\\n    });\\\\n  };\\\\n}\",\"globals\":[\"React\",\"PaginationButtons\"],\"exampleType\":\"jsx\"}'}),`() => {\n    const [currentPage, setCurrentPage] = React.useState(5);\n    return (\n        <PaginationButtons\n            currentPage={currentPage}\n            onChange={setCurrentPage}\n            totalPages={10}\n        />\n    );\n};\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Pagination","description":"Pagination allows large amounts of content to be separated into multiple pages.","group":"Navigation","storybookPath":"/story/navigation--basic"}}},"__N_SSG":true}