{"pageProps":{"pkg":{"slug":"loading","source":{"compiledSource":"var d=Object.defineProperty,g=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var r=(e,n,t)=>n in e?d(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,o=(e,n)=>{for(var t in n||(n={}))l.call(n,t)&&r(e,t,n[t]);if(i)for(var t of i(n))s.call(n,t)&&r(e,t,n[t]);return e},p=(e,n)=>g(e,m(n));var c=(e,n)=>{var t={};for(var a in e)l.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&i)for(var a of i(e))n.indexOf(a)<0&&s.call(e,a)&&(t[a]=e[a]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var a=t,{components:e}=a,n=c(a,[\"components\"]);return mdx(MDXLayout,p(o(o({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Loading Blanket\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"LoadingBlanket\"),\" component can be used indicate the loading state of a component or page.\"),mdx(\"p\",null,\"By default this component is positioned absolutely, so you will need to make sure your component container is positioned relatively.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Box, {\\\\n    height: \\\\\"300px\\\\\",\\\\n    width: \\\\\"100%\\\\\",\\\\n    border: true,\\\\n    style: {\\\\n      position: 'relative'\\\\n    }\\\\n  }, /*#__PURE__*/React.createElement(LoadingBlanket, {\\\\n    label: \\\\\"Component loading state\\\\\"\\\\n  }));\\\\n}\",\"globals\":[\"Box\",\"LoadingBlanket\"],\"exampleType\":\"jsx\"}`}),`<Box height=\"300px\" width=\"100%\" border style={{ position: 'relative' }}>\n    <LoadingBlanket label=\"Component loading state\" />\n</Box>\n`)),mdx(\"h3\",null,\"Full-screen\"),mdx(\"p\",null,\"Adding the \",mdx(\"inlineCode\",{parentName:\"p\"},\"fullScreen\"),\" prop will position the component over the whole screen.\"),mdx(\"p\",null,\"We recommend limiting the use of this pattern to certain use cases such as before or after a redirection.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`<LoadingBlanket fullScreen label=\"Page loading state\" />\n`)),mdx(\"h2\",null,\"Loading Dots\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"LoadingDots\"),\" component can be used on it's own, for example when fetching data from a remote source.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 2,\\\\n    alignItems: \\\\\"center\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(LoadingDots, {\\\\n    size: \\\\\"sm\\\\\",\\\\n    label: \\\\\"Loading\\\\\",\\\\n    role: \\\\\"status\\\\\"\\\\n  }), /*#__PURE__*/React.createElement(LoadingDots, {\\\\n    size: \\\\\"md\\\\\",\\\\n    label: \\\\\"Loading\\\\\",\\\\n    role: \\\\\"status\\\\\"\\\\n  }), /*#__PURE__*/React.createElement(LoadingDots, {\\\\n    size: \\\\\"lg\\\\\",\\\\n    label: \\\\\"Loading\\\\\",\\\\n    role: \\\\\"status\\\\\"\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"LoadingDots\"],\"exampleType\":\"jsx\"}'}),`<Stack gap={2} alignItems=\"center\">\n    <LoadingDots size=\"sm\" label=\"Loading\" role=\"status\" />\n    <LoadingDots size=\"md\" label=\"Loading\" role=\"status\" />\n    <LoadingDots size=\"lg\" label=\"Loading\" role=\"status\" />\n</Stack>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Loading","description":"Loading indicators inform users that their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic"}},"data":{"title":"Loading","description":"Loading indicators inform users that their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic"},"name":"@ag.ds-next/loading","version":"7.0.0","title":"Loading","storybookPath":"/story/content-loading-loadingblanket--basic","subNavItems":[{"label":"Overview","href":"/packages/content/loading","path":"/home/runner/work/agds-next/agds-next/packages/loading/docs/overview.mdx"},{"label":"Code","href":"/packages/content/loading/code","path":"/home/runner/work/agds-next/agds-next/packages/loading/docs/code.mdx"}]},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content","items":[{"label":"Badge","href":"/packages/content/badge"},{"label":"Callout","href":"/packages/content/callout"},{"label":"Details","href":"/packages/content/details"},{"label":"Heading","href":"/packages/content/heading"},{"label":"Keyword List","href":"/packages/content/keyword-list"},{"label":"Loading","href":"/packages/content/loading"},{"label":"Modal","href":"/packages/content/modal"},{"label":"Page Alert","href":"/packages/content/page-alert"},{"label":"Prose","href":"/packages/content/prose"},{"label":"Skeleton","href":"/packages/content/skeleton"},{"label":"Summary List","href":"/packages/content/summary-list"},{"label":"Table","href":"/packages/content/table"},{"label":"Tags","href":"/packages/content/tags"}]},{"label":"Forms","href":"/packages/forms"},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/packages","label":"Packages"},{"href":"/packages/content","label":"Content"},{"label":"Loading"}],"content":{"compiledSource":"var d=Object.defineProperty,g=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var r=(e,n,t)=>n in e?d(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,o=(e,n)=>{for(var t in n||(n={}))l.call(n,t)&&r(e,t,n[t]);if(i)for(var t of i(n))s.call(n,t)&&r(e,t,n[t]);return e},p=(e,n)=>g(e,m(n));var c=(e,n)=>{var t={};for(var a in e)l.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&i)for(var a of i(e))n.indexOf(a)<0&&s.call(e,a)&&(t[a]=e[a]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var a=t,{components:e}=a,n=c(a,[\"components\"]);return mdx(MDXLayout,p(o(o({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Loading Blanket\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"LoadingBlanket\"),\" component can be used indicate the loading state of a component or page.\"),mdx(\"p\",null,\"By default this component is positioned absolutely, so you will need to make sure your component container is positioned relatively.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Box, {\\\\n    height: \\\\\"300px\\\\\",\\\\n    width: \\\\\"100%\\\\\",\\\\n    border: true,\\\\n    style: {\\\\n      position: 'relative'\\\\n    }\\\\n  }, /*#__PURE__*/React.createElement(LoadingBlanket, {\\\\n    label: \\\\\"Component loading state\\\\\"\\\\n  }));\\\\n}\",\"globals\":[\"Box\",\"LoadingBlanket\"],\"exampleType\":\"jsx\"}`}),`<Box height=\"300px\" width=\"100%\" border style={{ position: 'relative' }}>\n    <LoadingBlanket label=\"Component loading state\" />\n</Box>\n`)),mdx(\"h3\",null,\"Full-screen\"),mdx(\"p\",null,\"Adding the \",mdx(\"inlineCode\",{parentName:\"p\"},\"fullScreen\"),\" prop will position the component over the whole screen.\"),mdx(\"p\",null,\"We recommend limiting the use of this pattern to certain use cases such as before or after a redirection.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`<LoadingBlanket fullScreen label=\"Page loading state\" />\n`)),mdx(\"h2\",null,\"Loading Dots\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"LoadingDots\"),\" component can be used on it's own, for example when fetching data from a remote source.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 2,\\\\n    alignItems: \\\\\"center\\\\\"\\\\n  }, /*#__PURE__*/React.createElement(LoadingDots, {\\\\n    size: \\\\\"sm\\\\\",\\\\n    label: \\\\\"Loading\\\\\",\\\\n    role: \\\\\"status\\\\\"\\\\n  }), /*#__PURE__*/React.createElement(LoadingDots, {\\\\n    size: \\\\\"md\\\\\",\\\\n    label: \\\\\"Loading\\\\\",\\\\n    role: \\\\\"status\\\\\"\\\\n  }), /*#__PURE__*/React.createElement(LoadingDots, {\\\\n    size: \\\\\"lg\\\\\",\\\\n    label: \\\\\"Loading\\\\\",\\\\n    role: \\\\\"status\\\\\"\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"LoadingDots\"],\"exampleType\":\"jsx\"}'}),`<Stack gap={2} alignItems=\"center\">\n    <LoadingDots size=\"sm\" label=\"Loading\" role=\"status\" />\n    <LoadingDots size=\"md\" label=\"Loading\" role=\"status\" />\n    <LoadingDots size=\"lg\" label=\"Loading\" role=\"status\" />\n</Stack>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Loading","description":"Loading indicators inform users that their action is being processed.","group":"Content","storybookPath":"/story/content-loading-loadingblanket--basic"}}},"__N_SSG":true}