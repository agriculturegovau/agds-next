{"pageProps":{"pkg":{"slug":"field","source":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var o=(e,t,a)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,l=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&o(e,a,t[a]);if(r)for(var a of r(t))i.call(t,a)&&o(e,a,t[a]);return e},p=(e,t)=>d(e,m(t));var u=(e,t)=>{var a={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&r)for(var n of r(e))t.indexOf(n)<0&&i.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,t=u(n,[\"components\"]);return mdx(MDXLayout,p(l(l({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h3\",null,\"Field\"),mdx(\"p\",null,\"The field component connects the label, description, and message to the input element.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Name\\\\\"\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"input\\\\\", a11yProps);\\\\n  });\\\\n}\",\"globals\":[\"Field\"],\"exampleType\":\"jsx\"}'}),`<Field label=\"Name\">{(a11yProps) => <input {...a11yProps} />}</Field>\n`)),mdx(\"h3\",null,\"Required\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Name\\\\\",\\\\n    required: true\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"input\\\\\", a11yProps);\\\\n  });\\\\n}\",\"globals\":[\"Field\"],\"exampleType\":\"jsx\"}'}),`<Field label=\"Name\" required>\n    {(a11yProps) => <input {...a11yProps} />}\n</Field>\n`)),mdx(\"h3\",null,\"Label\"),mdx(\"p\",null,\"Each text field must be accompanied by a label. Effective form labeling helps users understand what information to enter into a text input.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Name\\\\\"\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"input\\\\\", a11yProps);\\\\n  });\\\\n}\",\"globals\":[\"Field\"],\"exampleType\":\"jsx\"}'}),`<Field label=\"Name\">{(a11yProps) => <input {...a11yProps} />}</Field>\n`)),mdx(\"h3\",null,\"Hint\"),mdx(\"p\",null,\"Hints can be used to provide more context that will help the user successfully complete the form field.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\\\n\\\\nfunction Example() {\\\\n  return /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Email\\\\\",\\\\n    hint: \\\\\"We will only use this to respond to your question\\\\\"\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"input\\\\\", _extends({\\\\n      type: \\\\\"email\\\\\"\\\\n    }, a11yProps));\\\\n  });\\\\n}\",\"globals\":[\"Field\"],\"exampleType\":\"jsx\"}'}),`<Field label=\"Email\" hint=\"We will only use this to respond to your question\">\n    {(a11yProps) => <input type=\"email\" {...a11yProps} />}\n</Field>\n`)),mdx(\"h3\",null,\"Messages\"),mdx(\"p\",null,\"Error messages are used to notify the user when a form field has not passed validation. Use clear messages to explain what went wrong and how to fix it.\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\\\n\\\\nfunction Example() {\\\\n  return /*#__PURE__*/React.createElement(Stack, {\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Email\\\\\",\\\\n    invalid: true,\\\\n    message: \\\\\"Enter an email address in the correct format, like name@example.com\\\\\"\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"input\\\\\", _extends({\\\\n      type: \\\\\"email\\\\\"\\\\n    }, a11yProps));\\\\n  }), /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Email\\\\\",\\\\n    valid: true,\\\\n    message: \\\\\"The email address you have entered is valid\\\\\"\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"input\\\\\", _extends({\\\\n      type: \\\\\"email\\\\\"\\\\n    }, a11yProps));\\\\n  }));\\\\n}\",\"globals\":[\"Stack\",\"Field\"],\"exampleType\":\"jsx\"}'}),`<Stack gap={1}>\n    <Field\n        label=\"Email\"\n        invalid\n        message=\"Enter an email address in the correct format, like name@example.com\"\n    >\n        {(a11yProps) => <input type=\"email\" {...a11yProps} />}\n    </Field>\n    <Field\n        label=\"Email\"\n        valid\n        message=\"The email address you have entered is valid\"\n    >\n        {(a11yProps) => <input type=\"email\" {...a11yProps} />}\n    </Field>\n</Stack>\n`)),mdx(\"h3\",null,\"Required label\"),mdx(\"p\",null,'By default, \"(optional)\" or \"(required)\" will be appended to labels. To disable this, set the ',mdx(\"inlineCode\",{parentName:\"p\"},\"requiredLabel\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Field, {\\\\n    label: \\\\\"Start date\\\\\",\\\\n    requiredLabel: false\\\\n  }, function (a11yProps) {\\\\n    return /*#__PURE__*/React.createElement(\\\\\"select\\\\\", a11yProps);\\\\n  });\\\\n}\",\"globals\":[\"Field\"],\"exampleType\":\"jsx\"}'}),`<Field label=\"Start date\" requiredLabel={false}>\n    {(a11yProps) => <select {...a11yProps} />}\n</Field>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Field","description":"The field package exposes the elements around form inputs, and an API to compose them.","group":"Forms"}},"data":{"title":"Field","description":"The field package exposes the elements around form inputs, and an API to compose them.","group":"Forms"},"name":"@ag.ds-next/field","version":"4.0.0","title":"Field"},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms","items":[{"label":"Button","href":"/packages/forms/button"},{"label":"Control input","href":"/packages/forms/control-input"},{"label":"Field","href":"/packages/forms/field"},{"label":"Fieldset","href":"/packages/forms/fieldset"},{"label":"Form Stack","href":"/packages/forms/form-stack"},{"label":"Progress indicator","href":"/packages/forms/progress-indicator"},{"label":"Search Box","href":"/packages/forms/search-box"},{"label":"Select","href":"/packages/forms/select"},{"label":"Task List","href":"/packages/forms/task-list"},{"label":"Text Input","href":"/packages/forms/text-input"},{"label":"Textarea","href":"/packages/forms/textarea"}]},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/forms","label":"Forms"},{"label":"Field"}]},"__N_SSG":true}