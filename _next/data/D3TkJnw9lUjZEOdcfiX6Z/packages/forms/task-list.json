{"pageProps":{"pkg":{"slug":"task-list","source":{"compiledSource":"var m=Object.defineProperty,p=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var r=(e,t,n)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,a=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&r(e,n,t[n]);if(l)for(var n of l(t))i.call(t,n)&&r(e,n,t[n]);return e},d=(e,t)=>p(e,c(t));var u=(e,t)=>{var n={};for(var s in e)o.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&l)for(var s of l(e))t.indexOf(s)<0&&i.call(e,s)&&(n[s]=e[s]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var s=n,{components:e}=s,t=u(s,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"The individual tasks or steps are shown as either:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"todo\"),\" \\u2013 the task is available for the user to do\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"doing\"),\" \\u2013 the task has been started\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"done\"),\" \\u2013 the task has been completed\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(TaskList, {\\\\n    items: [{\\\\n      href: '#',\\\\n      label: 'Check eligibility',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Lorem ipsum dolor sit amet',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Review and submit',\\\\n      message: 'Not available until previous tasks are done',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"TaskList\"],\"exampleType\":\"jsx\"}`}),`<TaskList\n    items={[\n        {\n            href: '#',\n            label: 'Check eligibility',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Lorem ipsum dolor sit amet',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Case Studies',\n            status: 'todo',\n        },\n        {\n            href: '#',\n            label: 'Review and submit',\n            message: 'Not available until previous tasks are done',\n            status: 'todo',\n        },\n    ]}\n/>\n`)),mdx(\"h3\",null,\"Nonsequential\"),mdx(\"p\",null,\"If the list of tasks can be done in any order, you can set the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ordered\"),\" prop to \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(TaskList, {\\\\n    ordered: false,\\\\n    items: [{\\\\n      href: '#',\\\\n      label: 'Check eligibility',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Lorem ipsum dolor sit amet',\\\\n      status: 'done'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }, {\\\\n      href: '#',\\\\n      label: 'Review and submit',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"TaskList\"],\"exampleType\":\"jsx\"}`}),`<TaskList\n    ordered={false}\n    items={[\n        {\n            href: '#',\n            label: 'Check eligibility',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Lorem ipsum dolor sit amet',\n            status: 'done',\n        },\n        {\n            href: '#',\n            label: 'Case Studies',\n            status: 'todo',\n        },\n        {\n            href: '#',\n            label: 'Review and submit',\n            status: 'todo',\n        },\n    ]}\n/>\n`)),mdx(\"h3\",null,\"Buttons\"),mdx(\"p\",null,\"If an item does not specify a \",mdx(\"inlineCode\",{parentName:\"p\"},\"href\"),\" attribute a \",mdx(\"inlineCode\",{parentName:\"p\"},\"button\"),\" element will be rendered. This enables you to reponds to various mouse events such as \",mdx(\"inlineCode\",{parentName:\"p\"},\"onClick\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(TaskList, {\\\\n    items: [{\\\\n      onClick: console.log,\\\\n      label: 'Check eligibility',\\\\n      status: 'done'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Lorem ipsum dolor sit amet',\\\\n      status: 'done'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Case Studies',\\\\n      status: 'todo'\\\\n    }, {\\\\n      onClick: console.log,\\\\n      label: 'Review and submit',\\\\n      message: 'Not available until previous tasks are done',\\\\n      status: 'todo'\\\\n    }]\\\\n  });\\\\n}\",\"globals\":[\"TaskList\",\"console\"],\"exampleType\":\"jsx\"}`}),`<TaskList\n    items={[\n        {\n            onClick: console.log,\n            label: 'Check eligibility',\n            status: 'done',\n        },\n        {\n            onClick: console.log,\n            label: 'Lorem ipsum dolor sit amet',\n            status: 'done',\n        },\n        {\n            onClick: console.log,\n            label: 'Case Studies',\n            status: 'todo',\n        },\n        {\n            onClick: console.log,\n            label: 'Review and submit',\n            message: 'Not available until previous tasks are done',\n            status: 'todo',\n        },\n    ]}\n/>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Task List","description":null,"group":"Forms"}},"data":{"title":"Task List","description":null,"group":"Forms"},"name":"@ag.ds-next/task-list","version":"1.0.0","title":"Task List"},"navLinks":[{"label":"Brand","href":"/packages/brand"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms","items":[{"label":"Button","href":"/packages/forms/button"},{"label":"Control input","href":"/packages/forms/control-input"},{"label":"Field","href":"/packages/forms/field"},{"label":"Fieldset","href":"/packages/forms/fieldset"},{"label":"Form Stack","href":"/packages/forms/form-stack"},{"label":"Progress indicator","href":"/packages/forms/progress-indicator"},{"label":"Search Box","href":"/packages/forms/search-box"},{"label":"Select","href":"/packages/forms/select"},{"label":"Task List","href":"/packages/forms/task-list"},{"label":"Text Input","href":"/packages/forms/text-input"},{"label":"Textarea","href":"/packages/forms/textarea"}]},{"label":"Foundations","href":"/packages/foundations"},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/forms","label":"Forms"},{"label":"Task List"}]},"__N_SSG":true}