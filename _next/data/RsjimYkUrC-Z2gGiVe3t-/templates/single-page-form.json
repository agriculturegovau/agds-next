{"pageProps":{"template":{"slug":"single-page-form","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Usage guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General guidelines\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use concise descriptive field labels.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Match field width to intended input to set expectations of required information.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Avoid placeholder text for hints (use static hint text instead):\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Placeholder text disappears on focus, causing some to forget the hint.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Placeholder text can make it look like a field is already filled.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Low contrast is hard to see.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Simplicity by design\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Present forms in a single column layout for efficiency and to avoid people missing fields in other columns (especially those using screen magnifiers).\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Try to limit forms to a single question per page. A question could include multiple related inputs, such as a street address. Break up large forms \", _jsx(_components.a, {\n        href: \"multi-page-form\",\n        children: \"into multiple steps\"\n      }), \" to decrease cognitive load. In cases where this isn't possible, group related fields using \", _jsx(_components.a, {\n        href: \"/components/fieldset\",\n        children: \"fieldsets\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Required vs optional fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Try to only ask for necessary information. Avoid optional fields by asking users to opt in first. If you can’t avoid optional fields, indicate them with (optional) in label. Place text at the top of the page that says 'All fields are required unless marked optional.'\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Left align buttons, starting with the primary button on the far left. Right aligned buttons can be missed, especially by those using screen magnifyers.\\nOnly include one primary button per page.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use descriptive button text. A simple rule that works most of the time is to start with a verb and end with a noun. For example, 'Submit application'.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Try to avoid disabled buttons as they can be problematic for some users - They don’t provide feedback why they’re not clickable causing people to get stuck. They are also hard to see for those with poor eyesight, and aren’t natively keyboard accessible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Instead, allow users to interact with buttons and receive feedback.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Error messages\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A form should validate when a user attempts to submit. Validation errors should be summarised as a list inside of a \", _jsx(_components.a, {\n        href: \"/components/page-alert\",\n        children: \"PageAlert\"\n      }), \") with the 'error' tone. The page alert should be placed at the top of the form, and focused immediately after a submission attempt. When clicked, each error in the list should scroll and focus the user focus respective form field.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If only one error is present, the error summary can be omitted and the invalid field can be focused.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"An invalid field is highlighted with a red border and a red error message. They should never be covered by autocomplete menus and on-screen keyboards.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Success messaging\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a form is successfully completed, return the user to the entry point of the form and display a \", _jsx(_components.a, {\n        href: \"/components/page-alert\",\n        children: \"PageAlert\"\n      }), \" with the 'success' tone and a clear message which communicates the successful submission. When possible, provide persistent methods for a user to return and see the status of the submitted artefact, for example a reference number.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"order":5,"title":"Single-page form","description":"An example of a single-page multi-question form","version":"1.0.0","previewPath":"/category/subcategory/single-page-form","figmaTemplateNodeId":"8410%3A83912","githubTemplatePath":"/pages/category/subcategory/single-page-form.tsx","storybookPath":"/story/templates-single-page-form--form-page"}},"data":{"order":5,"title":"Single-page form","description":"An example of a single-page multi-question form","version":"1.0.0","previewPath":"/category/subcategory/single-page-form","figmaTemplateNodeId":"8410%3A83912","githubTemplatePath":"/pages/category/subcategory/single-page-form.tsx","storybookPath":"/story/templates-single-page-form--form-page"},"title":"Single-page form","version":"1.0.0","description":"An example of a single-page multi-question form","previewPath":"/category/subcategory/single-page-form","figmaTemplateNodeId":"8410%3A83912","githubTemplatePath":"/pages/category/subcategory/single-page-form.tsx","storybookPath":"/story/templates-single-page-form--form-page"},"navLinks":[{"href":"/templates/home","label":"Home"},{"href":"/templates/category","label":"Category"},{"href":"/templates/subcategory","label":"Subcategory"},{"href":"/templates/content","label":"Content"},{"href":"/templates/single-page-form","label":"Single-page form"},{"href":"/templates/multi-page-form","label":"Multi-page form"},{"href":"/templates/sign-in","label":"Sign-in form"},{"href":"/templates/not-found","label":"Not found page"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/templates","label":"Templates"},{"label":"Single-page form"}],"slug":"single-page-form"},"__N_SSG":true}