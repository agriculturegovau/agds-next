{"pageProps":{"pkg":{"slug":"switch","source":{"compiledSource":"var _=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var l=(e,r,t)=>r in e?_(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,a=(e,r)=>{for(var t in r||(r={}))o.call(r,t)&&l(e,t,r[t]);if(i)for(var t of i(r))s.call(r,t)&&l(e,t,r[t]);return e},c=(e,r)=>d(e,h(r));var u=(e,r)=>{var t={};for(var n in e)o.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&i)for(var n of i(e))r.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,r=u(n,[\"components\"]);return mdx(MDXLayout,c(a(a({},layoutProps),r),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"A Switch allows a user to toggle a setting on or off, immediately affecting the user interface. Common use-cases include filtering interfaces and settings menus.\"),mdx(\"p\",null,\"A Switch should not be used in Forms, or where a submit button is needed. Instead, a Checkbox or Radio component should be used.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Switch\"),\" is a \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://reactjs.org/docs/forms.html#controlled-components\"}),\"controlled component\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\"); }\\\\n\\\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\\\"string\\\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\\\"Object\\\\\" && o.constructor) n = o.constructor.name; if (n === \\\\\"Map\\\\\" || n === \\\\\"Set\\\\\") return Array.from(o); if (n === \\\\\"Arguments\\\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\\\n\\\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\\\"undefined\\\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\"return\\\\\"] != null) _i[\\\\\"return\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\nfunction Example() {\\\\n  return function () {\\\\n    var _React$useState = React.useState(false),\\\\n        _React$useState2 = _slicedToArray(_React$useState, 2),\\\\n        isChecked = _React$useState2[0],\\\\n        setChecked = _React$useState2[1];\\\\n\\\\n    return /*#__PURE__*/React.createElement(Switch, {\\\\n      label: \\\\\"Show establishments\\\\\",\\\\n      checked: isChecked,\\\\n      onChange: setChecked\\\\n    });\\\\n  };\\\\n}\",\"globals\":[\"React\",\"Switch\"],\"exampleType\":\"jsx\"}'}),`() => {\n    const [isChecked, setChecked] = React.useState(false);\n    return (\n        <Switch\n            label=\"Show establishments\"\n            checked={isChecked}\n            onChange={setChecked}\n        />\n    );\n};\n`)),mdx(\"h2\",null,\"Size\"),mdx(\"p\",null,\"Control size can be changed using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"size\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\"); }\\\\n\\\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\\\"string\\\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\\\"Object\\\\\" && o.constructor) n = o.constructor.name; if (n === \\\\\"Map\\\\\" || n === \\\\\"Set\\\\\") return Array.from(o); if (n === \\\\\"Arguments\\\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\\\n\\\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\\\"undefined\\\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\"return\\\\\"] != null) _i[\\\\\"return\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\nfunction Example() {\\\\n  return function () {\\\\n    var _React$useState = React.useState(false),\\\\n        _React$useState2 = _slicedToArray(_React$useState, 2),\\\\n        isChecked = _React$useState2[0],\\\\n        setChecked = _React$useState2[1];\\\\n\\\\n    return /*#__PURE__*/React.createElement(Switch, {\\\\n      label: \\\\\"Small Switch\\\\\",\\\\n      checked: isChecked,\\\\n      onChange: setChecked,\\\\n      size: \\\\\"sm\\\\\"\\\\n    });\\\\n  };\\\\n}\",\"globals\":[\"React\",\"Switch\"],\"exampleType\":\"jsx\"}'}),`() => {\n    const [isChecked, setChecked] = React.useState(false);\n    return (\n        <Switch\n            label=\"Small Switch\"\n            checked={isChecked}\n            onChange={setChecked}\n            size=\"sm\"\n        />\n    );\n};\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Switch","description":"Allows a user to immediately update interface settings.","group":"Forms","storybookPath":"/story/forms-switch--switch"}},"data":{"title":"Switch","description":"Allows a user to immediately update interface settings.","group":"Forms","storybookPath":"/story/forms-switch--switch"},"name":"@ag.ds-next/switch","version":"4.0.0","title":"Switch","storybookPath":"/story/forms-switch--switch","subNavItems":[{"label":"Overview","href":"/components/switch","path":"/home/runner/work/agds-next/agds-next/packages/switch/docs/overview.mdx"},{"label":"Code","href":"/components/switch/code","path":"/home/runner/work/agds-next/agds-next/packages/switch/docs/code.mdx"}]},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG Branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Badge","href":"/components/badge"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call To Action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control Input","href":"/components/control-input"},{"label":"Core","href":"/components/core"},{"label":"Date Picker","href":"/components/date-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction Link","href":"/components/direction-link"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File Upload","href":"/components/file-upload"},{"label":"Footer","href":"/components/footer"},{"label":"Form Stack","href":"/components/form-stack"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero Banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Inpage Nav","href":"/components/inpage-nav"},{"label":"Keyword List","href":"/components/keyword-list"},{"label":"Link List","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main Nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Page Alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress Indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Search Box","href":"/components/search-box"},{"label":"Select","href":"/components/select"},{"label":"Side Nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip Link","href":"/components/skip-link"},{"label":"Sub Nav","href":"/components/sub-nav"},{"label":"Summary List","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task List","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text Input","href":"/components/text-input"},{"label":"Text Link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Switch"}],"content":{"compiledSource":"var _=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var l=(e,r,t)=>r in e?_(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,a=(e,r)=>{for(var t in r||(r={}))o.call(r,t)&&l(e,t,r[t]);if(i)for(var t of i(r))s.call(r,t)&&l(e,t,r[t]);return e},c=(e,r)=>d(e,h(r));var u=(e,r)=>{var t={};for(var n in e)o.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&i)for(var n of i(e))r.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,r=u(n,[\"components\"]);return mdx(MDXLayout,c(a(a({},layoutProps),r),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"A Switch allows a user to toggle a setting on or off, immediately affecting the user interface. Common use-cases include filtering interfaces and settings menus.\"),mdx(\"p\",null,\"A Switch should not be used in Forms, or where a submit button is needed. Instead, a Checkbox or Radio component should be used.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Switch\"),\" is a \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://reactjs.org/docs/forms.html#controlled-components\"}),\"controlled component\"),\".\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\"); }\\\\n\\\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\\\"string\\\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\\\"Object\\\\\" && o.constructor) n = o.constructor.name; if (n === \\\\\"Map\\\\\" || n === \\\\\"Set\\\\\") return Array.from(o); if (n === \\\\\"Arguments\\\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\\\n\\\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\\\"undefined\\\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\"return\\\\\"] != null) _i[\\\\\"return\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\nfunction Example() {\\\\n  return function () {\\\\n    var _React$useState = React.useState(false),\\\\n        _React$useState2 = _slicedToArray(_React$useState, 2),\\\\n        isChecked = _React$useState2[0],\\\\n        setChecked = _React$useState2[1];\\\\n\\\\n    return /*#__PURE__*/React.createElement(Switch, {\\\\n      label: \\\\\"Show establishments\\\\\",\\\\n      checked: isChecked,\\\\n      onChange: setChecked\\\\n    });\\\\n  };\\\\n}\",\"globals\":[\"React\",\"Switch\"],\"exampleType\":\"jsx\"}'}),`() => {\n    const [isChecked, setChecked] = React.useState(false);\n    return (\n        <Switch\n            label=\"Show establishments\"\n            checked={isChecked}\n            onChange={setChecked}\n        />\n    );\n};\n`)),mdx(\"h2\",null,\"Size\"),mdx(\"p\",null,\"Control size can be changed using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"size\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:'{\"status\":\"success\",\"code\":\"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\"); }\\\\n\\\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\\\"string\\\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\\\"Object\\\\\" && o.constructor) n = o.constructor.name; if (n === \\\\\"Map\\\\\" || n === \\\\\"Set\\\\\") return Array.from(o); if (n === \\\\\"Arguments\\\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\\\n\\\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\\\"undefined\\\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\"return\\\\\"] != null) _i[\\\\\"return\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\nfunction Example() {\\\\n  return function () {\\\\n    var _React$useState = React.useState(false),\\\\n        _React$useState2 = _slicedToArray(_React$useState, 2),\\\\n        isChecked = _React$useState2[0],\\\\n        setChecked = _React$useState2[1];\\\\n\\\\n    return /*#__PURE__*/React.createElement(Switch, {\\\\n      label: \\\\\"Small Switch\\\\\",\\\\n      checked: isChecked,\\\\n      onChange: setChecked,\\\\n      size: \\\\\"sm\\\\\"\\\\n    });\\\\n  };\\\\n}\",\"globals\":[\"React\",\"Switch\"],\"exampleType\":\"jsx\"}'}),`() => {\n    const [isChecked, setChecked] = React.useState(false);\n    return (\n        <Switch\n            label=\"Small Switch\"\n            checked={isChecked}\n            onChange={setChecked}\n            size=\"sm\"\n        />\n    );\n};\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Switch","description":"Allows a user to immediately update interface settings.","group":"Forms","storybookPath":"/story/forms-switch--switch"}}},"__N_SSG":true}