{"pageProps":{"pkg":{"slug":"core","source":{"compiledSource":"var s=Object.defineProperty,m=Object.defineProperties;var p=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var i=(e,n,t)=>n in e?s(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,l=(e,n)=>{for(var t in n||(n={}))x.call(n,t)&&i(e,t,n[t]);if(o)for(var t of o(n))c.call(n,t)&&i(e,t,n[t]);return e},g=(e,n)=>m(e,p(n));var r=(e,n)=>{var t={};for(var a in e)x.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&o)for(var a of o(e))n.indexOf(a)<0&&c.call(e,a)&&(t[a]=e[a]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var a=t,{components:e}=a,n=r(a,[\"components\"]);return mdx(MDXLayout,g(l(l({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Colour\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Flex, {\\\\n    flexDirection: \\\\\"column\\\\\",\\\\n    gap: 1,\\\\n    padding: 1\\\\n  }, /*#__PURE__*/React.createElement(Flex, {\\\\n    theme: \\\\\"light\\\\\"\\\\n  }, ['page', 'shade', 'pageAlt', 'shadeAlt'].map(function (bg) {\\\\n    return /*#__PURE__*/React.createElement(Flex, {\\\\n      key: bg,\\\\n      flexDirection: \\\\\"column\\\\\",\\\\n      gap: 1,\\\\n      background: bg,\\\\n      paddingY: 1,\\\\n      paddingX: 2\\\\n    }, ['text', 'muted', 'action', 'focus'].map(function (fg) {\\\\n      return /*#__PURE__*/React.createElement(Text, {\\\\n        key: fg,\\\\n        color: fg\\\\n      }, fg);\\\\n    }));\\\\n  })), /*#__PURE__*/React.createElement(Flex, {\\\\n    theme: \\\\\"dark\\\\\"\\\\n  }, ['page', 'shade', 'pageAlt', 'shadeAlt'].map(function (bg) {\\\\n    return /*#__PURE__*/React.createElement(Flex, {\\\\n      key: bg,\\\\n      flexDirection: \\\\\"column\\\\\",\\\\n      gap: 1,\\\\n      background: bg,\\\\n      paddingY: 1,\\\\n      paddingX: 2\\\\n    }, ['text', 'muted', 'action', 'focus'].map(function (fg) {\\\\n      return /*#__PURE__*/React.createElement(Text, {\\\\n        key: fg,\\\\n        color: fg\\\\n      }, fg);\\\\n    }), /*#__PURE__*/React.createElement(Text, {\\\\n      color: \\\\\"focus\\\\\"\\\\n    }, /*#__PURE__*/React.createElement(\\\\\"hr\\\\\", null)));\\\\n  })));\\\\n}\",\"globals\":[\"Flex\",\"Text\"],\"exampleType\":\"jsx\"}`}),`<Flex flexDirection=\"column\" gap={1} padding={1}>\n    <Flex theme=\"light\">\n        {['page', 'shade', 'pageAlt', 'shadeAlt'].map((bg) => (\n            <Flex\n                key={bg}\n                flexDirection=\"column\"\n                gap={1}\n                background={bg}\n                paddingY={1}\n                paddingX={2}\n            >\n                {['text', 'muted', 'action', 'focus'].map((fg) => (\n                    <Text key={fg} color={fg}>\n                        {fg}\n                    </Text>\n                ))}\n            </Flex>\n        ))}\n    </Flex>\n    <Flex theme=\"dark\">\n        {['page', 'shade', 'pageAlt', 'shadeAlt'].map((bg) => (\n            <Flex\n                key={bg}\n                flexDirection=\"column\"\n                gap={1}\n                background={bg}\n                paddingY={1}\n                paddingX={2}\n            >\n                {['text', 'muted', 'action', 'focus'].map((fg) => (\n                    <Text key={fg} color={fg}>\n                        {fg}\n                    </Text>\n                ))}\n                <Text color=\"focus\">\n                    <hr />\n                </Text>\n            </Flex>\n        ))}\n    </Flex>\n</Flex>\n`)),mdx(\"h2\",null,\"Typography\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live\",live:!0,initialCompiledResult:`{\"status\":\"success\",\"code\":\"function Example() {\\\\n  return /*#__PURE__*/React.createElement(Flex, {\\\\n    theme: \\\\\"light\\\\\",\\\\n    background: \\\\\"page\\\\\",\\\\n    gap: 1,\\\\n    padding: 1\\\\n  }, /*#__PURE__*/React.createElement(Flex, {\\\\n    flexDirection: \\\\\"column\\\\\",\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    fontSize: \\\\\"sm\\\\\",\\\\n    fontWeight: \\\\\"bold\\\\\"\\\\n  }, \\\\\"Default\\\\\"), ['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'].map(function (size) {\\\\n    return /*#__PURE__*/React.createElement(Box, {\\\\n      key: size,\\\\n      background: \\\\\"shade\\\\\"\\\\n    }, /*#__PURE__*/React.createElement(Text, {\\\\n      fontSize: size\\\\n    }, size.toUpperCase()));\\\\n  })), /*#__PURE__*/React.createElement(Flex, {\\\\n    flexDirection: \\\\\"column\\\\\",\\\\n    theme: \\\\\"light\\\\\",\\\\n    background: \\\\\"page\\\\\",\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    fontSize: \\\\\"sm\\\\\",\\\\n    fontWeight: \\\\\"bold\\\\\"\\\\n  }, \\\\\"Heading\\\\\"), ['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'].map(function (size) {\\\\n    return /*#__PURE__*/React.createElement(Box, {\\\\n      key: size,\\\\n      background: \\\\\"shade\\\\\"\\\\n    }, /*#__PURE__*/React.createElement(Text, {\\\\n      fontSize: size,\\\\n      lineHeight: \\\\\"heading\\\\\"\\\\n    }, size.toUpperCase()));\\\\n  })), /*#__PURE__*/React.createElement(Flex, {\\\\n    flexDirection: \\\\\"column\\\\\",\\\\n    theme: \\\\\"light\\\\\",\\\\n    background: \\\\\"page\\\\\",\\\\n    gap: 1\\\\n  }, /*#__PURE__*/React.createElement(Text, {\\\\n    fontSize: \\\\\"sm\\\\\",\\\\n    fontWeight: \\\\\"bold\\\\\"\\\\n  }, \\\\\"Nospace\\\\\"), ['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'].map(function (size) {\\\\n    return /*#__PURE__*/React.createElement(Box, {\\\\n      key: size,\\\\n      background: \\\\\"shade\\\\\"\\\\n    }, /*#__PURE__*/React.createElement(Text, {\\\\n      fontSize: size,\\\\n      lineHeight: \\\\\"nospace\\\\\"\\\\n    }, size.toUpperCase()));\\\\n  })));\\\\n}\",\"globals\":[\"Flex\",\"Text\",\"Box\"],\"exampleType\":\"jsx\"}`}),`<Flex theme=\"light\" background=\"page\" gap={1} padding={1}>\n    <Flex flexDirection=\"column\" gap={1}>\n        <Text fontSize=\"sm\" fontWeight=\"bold\">\n            Default\n        </Text>\n        {['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'].map((size) => (\n            <Box key={size} background=\"shade\">\n                <Text fontSize={size}>{size.toUpperCase()}</Text>\n            </Box>\n        ))}\n    </Flex>\n    <Flex flexDirection=\"column\" theme=\"light\" background=\"page\" gap={1}>\n        <Text fontSize=\"sm\" fontWeight=\"bold\">\n            Heading\n        </Text>\n        {['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'].map((size) => (\n            <Box key={size} background=\"shade\">\n                <Text fontSize={size} lineHeight=\"heading\">\n                    {size.toUpperCase()}\n                </Text>\n            </Box>\n        ))}\n    </Flex>\n    <Flex flexDirection=\"column\" theme=\"light\" background=\"page\" gap={1}>\n        <Text fontSize=\"sm\" fontWeight=\"bold\">\n            Nospace\n        </Text>\n        {['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'].map((size) => (\n            <Box key={size} background=\"shade\">\n                <Text fontSize={size} lineHeight=\"nospace\">\n                    {size.toUpperCase()}\n                </Text>\n            </Box>\n        ))}\n    </Flex>\n</Flex>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Core","description":"Core includes a range of styles, variables and code that form the foundation of how the Design System works, including colour, typography and spacing.","group":"Foundations"}},"data":{"title":"Core","description":"Core includes a range of styles, variables and code that form the foundation of how the Design System works, including colour, typography and spacing.","group":"Foundations"},"name":"@ag.ds-next/core","version":"1.1.0","title":"Core"},"navLinks":[{"label":"Agriculture","href":"/packages/agriculture"},{"label":"Content","href":"/packages/content"},{"label":"Forms","href":"/packages/forms"},{"label":"Foundations","href":"/packages/foundations","items":[{"label":"Box","href":"/packages/foundations/box"},{"label":"Columns","href":"/packages/foundations/columns"},{"label":"Core","href":"/packages/foundations/core"},{"label":"Icon","href":"/packages/foundations/icon"},{"label":"Text","href":"/packages/foundations/text"},{"label":"TextLink","href":"/packages/foundations/text-link"}]},{"label":"Layout","href":"/packages/layout"},{"label":"Navigation","href":"/packages/navigation"}],"breadcrumbs":[{"href":"/packages","label":"Packages"},{"href":"/packages/foundations","label":"Foundations"},{"label":"Core"}]},"__N_SSG":true}