{"pageProps":{"pkg":{"slug":"filter-drawer","name":"filter-drawer","version":"1.6.0","title":"Filter drawer","description":"Filter drawer can be used to display a large number of filters for a data set. It is overlayed on top of the main area of the page to capture the user's attention while keeping the context of the current task.","storybookPath":"/story/layout-filterdrawer--basic","figmaGalleryNodeId":null,"subNavItems":[{"label":"Overview","href":"/components/filter-drawer","path":"/home/runner/work/agds-next/agds-next/packages/react/src/filter-drawer/docs/overview.mdx"},{"label":"Code","href":"/components/filter-drawer/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/filter-drawer/docs/code.mdx"}],"relatedComponents":["modal"],"deprecated":false},"navLinks":[{"label":"A11y","href":"/components/a11y"},{"label":"AG branding","href":"/components/ag-branding"},{"label":"Accordion","href":"/components/accordion"},{"label":"App layout","href":"/components/app-layout"},{"label":"Autocomplete","href":"/components/autocomplete"},{"label":"Avatar","href":"/components/avatar"},{"label":"Box","href":"/components/box"},{"label":"Breadcrumbs","href":"/components/breadcrumbs"},{"label":"Button","href":"/components/button"},{"label":"Call to action","href":"/components/call-to-action"},{"label":"Callout","href":"/components/callout"},{"label":"Card","href":"/components/card"},{"label":"Checkbox","href":"/components/checkbox"},{"label":"Columns","href":"/components/columns"},{"label":"Combobox","href":"/components/combobox"},{"label":"Content","href":"/components/content"},{"label":"Control group","href":"/components/control-group"},{"label":"Core","href":"/components/core"},{"label":"Date picker","href":"/components/date-picker"},{"label":"Date range picker","href":"/components/date-range-picker"},{"label":"Details","href":"/components/details"},{"label":"Direction link","href":"/components/direction-link"},{"label":"Divider","href":"/components/divider"},{"label":"Field","href":"/components/field"},{"label":"Fieldset","href":"/components/fieldset"},{"label":"File input","href":"/components/file-input"},{"label":"File upload","href":"/components/file-upload"},{"label":"Filter drawer","href":"/components/filter-drawer"},{"label":"Flex","href":"/components/flex"},{"label":"Footer","href":"/components/footer"},{"label":"Form stack","href":"/components/form-stack"},{"label":"Global alert","href":"/components/global-alert"},{"label":"Header","href":"/components/header"},{"label":"Heading","href":"/components/heading"},{"label":"Hero banner","href":"/components/hero-banner"},{"label":"Icon","href":"/components/icon"},{"label":"Indicator dot","href":"/components/indicator-dot"},{"label":"Inpage nav","href":"/components/inpage-nav"},{"label":"Link list","href":"/components/link-list"},{"label":"Loading","href":"/components/loading"},{"label":"Main nav","href":"/components/main-nav"},{"label":"Modal","href":"/components/modal"},{"label":"Notification badge","href":"/components/notification-badge"},{"label":"Page alert","href":"/components/page-alert"},{"label":"Pagination","href":"/components/pagination"},{"label":"Progress indicator","href":"/components/progress-indicator"},{"label":"Prose","href":"/components/prose"},{"label":"Radio","href":"/components/radio"},{"label":"Search box","href":"/components/search-box"},{"label":"Search input","href":"/components/search-input"},{"label":"Select","href":"/components/select"},{"label":"Side nav","href":"/components/side-nav"},{"label":"Skeleton","href":"/components/skeleton"},{"label":"Skip link","href":"/components/skip-link"},{"label":"Stack","href":"/components/stack"},{"label":"Status badge","href":"/components/status-badge"},{"label":"Sub nav","href":"/components/sub-nav"},{"label":"Summary list","href":"/components/summary-list"},{"label":"Switch","href":"/components/switch"},{"label":"Table","href":"/components/table"},{"label":"Tags","href":"/components/tags"},{"label":"Task list","href":"/components/task-list"},{"label":"Text","href":"/components/text"},{"label":"Text input","href":"/components/text-input"},{"label":"Text link","href":"/components/text-link"},{"label":"Textarea","href":"/components/textarea"}],"breadcrumbs":[{"href":"/","label":"Home"},{"href":"/components","label":"Components"},{"label":"Filter drawer"}],"toc":[{"id":"opening-the-filter-drawer","title":"Opening the Filter drawer","level":2,"slug":"opening-the-filter-drawer","items":[]},{"id":"closing-the-filter-drawer","title":"Closing the Filter drawer","level":2,"slug":"closing-the-filter-drawer","items":[]},{"id":"actions","title":"Actions","level":2,"slug":"actions","items":[]},{"title":"Related components","slug":"related-components","id":"related-components","level":2,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    p: \"p\",\n    ol: \"ol\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {DoHeading, DontHeading} = _components;\n  if (!DoHeading) _missingMdxReference(\"DoHeading\", true);\n  if (!DontHeading) _missingMdxReference(\"DontHeading\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"() => {\\n\\tconst [isFilterDrawerOpen, openFilterDrawer, closeFilterDrawer] =\\n\\t\\tuseTernaryState(false);\\n\\treturn (\\n\\t\\t<React.Fragment>\\n\\t\\t\\t<Button onClick={openFilterDrawer}>Open Filter drawer</Button>\\n\\t\\t\\t<FilterDrawer\\n\\t\\t\\t\\tisOpen={isFilterDrawerOpen}\\n\\t\\t\\t\\tonDismiss={closeFilterDrawer}\\n\\t\\t\\t\\ttitle=\\\"Filter by\\\"\\n\\t\\t\\t\\tactions={\\n\\t\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<Button onClick={closeFilterDrawer}>Apply filters</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"secondary\\\" onClick={closeFilterDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tReset filters\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t<Button variant=\\\"tertiary\\\" onClick={closeFilterDrawer}>\\n\\t\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Text as=\\\"p\\\">Filter area</Text>\\n\\t\\t\\t</FilterDrawer>\\n\\t\\t</React.Fragment>\\n\\t);\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(DoHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"read the \", _jsx(_components.a, {\n          href: \"/patterns/filtering-a-dataset\",\n          children: \"Filtering a dataset pattern\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use to display a large number of filters for a data list or table\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use a \", _jsx(_components.a, {\n          href: \"/components/button#button-group\",\n          children: \"Button group\"\n        }), \" to display actions\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"use a \", _jsx(_components.a, {\n          href: \"/components/fieldset\",\n          children: \"Fieldset\"\n        }), \" to group related filters\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a Close button in the top right\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"include a meaingful title - e.g. \\\"Filter by\\\"\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"close the Filter drawer when filters are applied.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(DontHeading, {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"remove the Close button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"remove the overlay\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"change default behaviour\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"use for anything else besides filters.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Opening the Filter drawer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the Filter drawer is opened, an overlay is displayed over the main area of the page. This prevents the main area of the page from being interactive.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Closing the Filter drawer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Filter drawer can be closed by either:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Pressing the \\\"Close\\\" button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pressing the \\\"Apply filters\\\" button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pressing the \\\"Cancel\\\" button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pressing the \\\"Escape\\\" key\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The filter drawer does not close when pressing the overlay.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When closing the Filter drawer, focus should be returned to the button that opened the Filter drawer.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Filter drawer component should contain a total of 4 actions:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Apply filters\\\" button\"\n        }), \": When a user presses the \\\"Apply filters\\\" button, filters should be applied and the Filter drawer should be closed.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Reset filters\\\" button\"\n        }), \": When a user presses the \\\"Apply filters\\\" button, filters should be reset to their original state. The Filter drawer should stay open.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Close\\\" button\"\n        }), \": When a user presses the \\\"Close\\\" button, the Filter drawer should close. Any changes that have been made since opening the Filter drawer should be discarded. This is essentially the same as the \\\"Cancel\\\" button.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"\\\"Cancel\\\" button\"\n        }), \": When a user presses the \\\"Cancel\\\" button, the Filter drawer should close. Any changes that have been made since opening the Filter drawer should be discarded. This is essentially the same as the \\\"Close\\\" button.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Filter drawer","description":"Filter drawer can be used to display a large number of filters for a data set. It is overlayed on top of the main area of the page to capture the user's attention while keeping the context of the current task.","group":"Layout","storybookPath":"/story/layout-filterdrawer--basic","relatedComponents":["modal"]}},"relatedComponents":[{"slug":"modal","name":"modal","version":"1.6.0","title":"Modal","description":"A modal is a dialog box that appears above the parent page and provides advance notice of a destructive action and consequence. They tell users a decision is needed.","storybookPath":"/story/content-modal--basic","figmaGalleryNodeId":"11981%3A101667","subNavItems":[{"label":"Overview","href":"/components/modal","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/overview.mdx"},{"label":"Code","href":"/components/modal/code","path":"/home/runner/work/agds-next/agds-next/packages/react/src/modal/docs/code.mdx"}],"relatedComponents":["filter-drawer"],"deprecated":false}]},"__N_SSG":true}